// Compiled by ClojureScript 0.0-2725 {:static-fns true}
goog.provide('cljs.core');
goog.require('goog.string.StringBuffer');
goog.require('goog.array');
goog.require('goog.object');
goog.require('goog.string');
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2725";
cljs.core._STAR_unchecked_if_STAR_ = false;
if(typeof cljs.core._STAR_print_fn_STAR_ !== 'undefined'){
} else {
/**
* Each runtime environment provides a different way to print output.
* Whatever function *print-fn* is bound to will be passed any
* Strings which should be printed.
*/
cljs.core._STAR_print_fn_STAR_ = (function _STAR_print_fn_STAR_(_){
throw (new Error("No *print-fn* fn set for evaluation environment"));
});
}
/**
* Set *print-fn* to f.
*/
cljs.core.set_print_fn_BANG_ = (function set_print_fn_BANG_(f){
return cljs.core._STAR_print_fn_STAR_ = f;
});
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if(typeof cljs.core._STAR_loaded_libs_STAR_ !== 'undefined'){
} else {
cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = (function pr_opts(){
return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939),cljs.core._STAR_flush_on_newline_STAR_,new cljs.core.Keyword(null,"readably","readably",1129599760),cljs.core._STAR_print_readably_STAR_,new cljs.core.Keyword(null,"meta","meta",1499536964),cljs.core._STAR_print_meta_STAR_,new cljs.core.Keyword(null,"dup","dup",556298533),cljs.core._STAR_print_dup_STAR_,new cljs.core.Keyword(null,"print-length","print-length",1931866356),cljs.core._STAR_print_length_STAR_], null);
});
/**
* Set *print-fn* to console.log
*/
cljs.core.enable_console_print_BANG_ = (function enable_console_print_BANG_(){
cljs.core._STAR_print_newline_STAR_ = false;

return cljs.core._STAR_print_fn_STAR_ = (function() { 
var G__7054__delegate = function (args){
return console.log.apply(console,(function (){var G__7053 = args;
return (cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__7053) : cljs.core.into_array.call(null,G__7053));
})());
};
var G__7054 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__7055__i = 0, G__7055__a = new Array(arguments.length -  0);
while (G__7055__i < G__7055__a.length) {G__7055__a[G__7055__i] = arguments[G__7055__i + 0]; ++G__7055__i;}
  args = new cljs.core.IndexedSeq(G__7055__a,0);
} 
return G__7054__delegate.call(this,args);};
G__7054.cljs$lang$maxFixedArity = 0;
G__7054.cljs$lang$applyTo = (function (arglist__7056){
var args = cljs.core.seq(arglist__7056);
return G__7054__delegate(args);
});
G__7054.cljs$core$IFn$_invoke$arity$variadic = G__7054__delegate;
return G__7054;
})()
;
});
/**
* Internal - do not use!
*/
cljs.core.truth_ = (function truth_(x){
return (x != null && x !== false);
});
cljs.core.not_native = null;

/**
* Tests if 2 arguments are the same object
*/
cljs.core.identical_QMARK_ = (function identical_QMARK_(x,y){
return (x === y);
});
/**
* Returns true if x is nil, false otherwise.
*/
cljs.core.nil_QMARK_ = (function nil_QMARK_(x){
return (x == null);
});
cljs.core.array_QMARK_ = (function array_QMARK_(x){
return x instanceof Array;
});
cljs.core.number_QMARK_ = (function number_QMARK_(n){
return typeof n === 'number';
});
/**
* Returns true if x is logical false, false otherwise.
*/
cljs.core.not = (function not(x){
if(cljs.core.truth_(x)){
return false;
} else {
return true;
}
});
/**
* Returns true if x is not nil, false otherwise.
*/
cljs.core.some_QMARK_ = (function some_QMARK_(x){
return !((x == null));
});
cljs.core.object_QMARK_ = (function object_QMARK_(x){
if(!((x == null))){
return (x.constructor === Object);
} else {
return false;
}
});
cljs.core.string_QMARK_ = (function string_QMARK_(x){
var G__7058 = x;
return goog.isString(G__7058);
});
/**
* Internal - do not use!
*/
cljs.core.native_satisfies_QMARK_ = (function native_satisfies_QMARK_(p,x){
var x__$1 = (((x == null))?null:x);
if((p[(function (){var G__7060 = x__$1;
return goog.typeOf(G__7060);
})()])){
return true;
} else {
if((p["_"])){
return true;
} else {
return false;

}
}
});
cljs.core.is_proto_ = (function is_proto_(x){
return (x.constructor.prototype === x);
});
/**
* When compiled for a command-line target, whatever
* function *main-fn* is set to will be called with the command-line
* argv as arguments
*/
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = (function type(x){
if((x == null)){
return null;
} else {
return x.constructor;
}
});
cljs.core.missing_protocol = (function missing_protocol(proto,obj){
var ty = cljs.core.type(obj);
var ty__$1 = (cljs.core.truth_((function (){var and__4708__auto__ = ty;
if(cljs.core.truth_(and__4708__auto__)){
return ty.cljs$lang$type;
} else {
return and__4708__auto__;
}
})())?ty.cljs$lang$ctorStr:(function (){var G__7062 = obj;
return goog.typeOf(G__7062);
})());
return (new Error(["No protocol method ",proto," defined for type ",ty__$1,": ",obj].join("")));
});
cljs.core.type__GT_str = (function type__GT_str(ty){
var temp__4124__auto__ = ty.cljs$lang$ctorStr;
if(cljs.core.truth_(temp__4124__auto__)){
var s = temp__4124__auto__;
return s;
} else {
return [cljs.core.str(ty)].join('');
}
});
cljs.core.load_file = (function load_file(file){
if(cljs.core.truth_(COMPILED)){
return null;
} else {
return goog.importScript_(file);
}
});
if((typeof Symbol !== 'undefined') && (((function (){var G__7064 = Symbol;
return goog.typeOf(G__7064);
})() === "function"))){
cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = (function() {
var make_array = null;
var make_array__1 = (function (size){
return (new Array(size));
});
var make_array__2 = (function (type,size){
return make_array.cljs$core$IFn$_invoke$arity$1(size);
});
make_array = function(type,size){
switch(arguments.length){
case 1:
return make_array__1.call(this,type);
case 2:
return make_array__2.call(this,type,size);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
return make_array;
})()
;
/**
* Returns a javascript array, cloned from the passed in array
*/
cljs.core.aclone = (function aclone(arr){
var len = arr.length;
var new_arr = (new Array(len));
var n__5607__auto___7066 = len;
var i_7067 = (0);
while(true){
if((i_7067 < n__5607__auto___7066)){
(new_arr[i_7067] = (arr[i_7067]));

var G__7068 = (i_7067 + (1));
i_7067 = G__7068;
continue;
} else {
}
break;
}

return new_arr;
});
/**
* Creates a new javascript array.
* @param {...*} var_args
*/
cljs.core.array = (function array(var_args){
var a = (new Array(arguments.length));
var i = (0);
while(true){
if((i < a.length)){
(a[i] = (arguments[i]));

var G__7069 = (i + (1));
i = G__7069;
continue;
} else {
return a;
}
break;
}
});
/**
* Returns the value at the index.
* @param {...*} var_args
*/
cljs.core.aget = (function() {
var aget = null;
var aget__2 = (function (array,i){
return (array[i]);
});
var aget__3 = (function() { 
var G__7078__delegate = function (array,i,idxs){
var G__7075 = aget;
var G__7076 = aget.cljs$core$IFn$_invoke$arity$2(array,i);
var G__7077 = idxs;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__7075,G__7076,G__7077) : cljs.core.apply.call(null,G__7075,G__7076,G__7077));
};
var G__7078 = function (array,i,var_args){
var idxs = null;
if (arguments.length > 2) {
var G__7079__i = 0, G__7079__a = new Array(arguments.length -  2);
while (G__7079__i < G__7079__a.length) {G__7079__a[G__7079__i] = arguments[G__7079__i + 2]; ++G__7079__i;}
  idxs = new cljs.core.IndexedSeq(G__7079__a,0);
} 
return G__7078__delegate.call(this,array,i,idxs);};
G__7078.cljs$lang$maxFixedArity = 2;
G__7078.cljs$lang$applyTo = (function (arglist__7080){
var array = cljs.core.first(arglist__7080);
arglist__7080 = cljs.core.next(arglist__7080);
var i = cljs.core.first(arglist__7080);
var idxs = cljs.core.rest(arglist__7080);
return G__7078__delegate(array,i,idxs);
});
G__7078.cljs$core$IFn$_invoke$arity$variadic = G__7078__delegate;
return G__7078;
})()
;
aget = function(array,i,var_args){
var idxs = var_args;
switch(arguments.length){
case 2:
return aget__2.call(this,array,i);
default:
var G__7081 = null;
if (arguments.length > 2) {
var G__7082__i = 0, G__7082__a = new Array(arguments.length -  2);
while (G__7082__i < G__7082__a.length) {G__7082__a[G__7082__i] = arguments[G__7082__i + 2]; ++G__7082__i;}
G__7081 = new cljs.core.IndexedSeq(G__7082__a,0);
}
return aget__3.cljs$core$IFn$_invoke$arity$variadic(array,i, G__7081);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aget.cljs$lang$maxFixedArity = 2;
aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
return aget;
})()
;
/**
* Sets the value at the index.
* @param {...*} var_args
*/
cljs.core.aset = (function() {
var aset = null;
var aset__3 = (function (array,i,val){
return (array[i] = val);
});
var aset__4 = (function() { 
var G__7091__delegate = function (array,idx,idx2,idxv){
var G__7087 = aset;
var G__7088 = (array[idx]);
var G__7089 = idx2;
var G__7090 = idxv;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__7087,G__7088,G__7089,G__7090) : cljs.core.apply.call(null,G__7087,G__7088,G__7089,G__7090));
};
var G__7091 = function (array,idx,idx2,var_args){
var idxv = null;
if (arguments.length > 3) {
var G__7092__i = 0, G__7092__a = new Array(arguments.length -  3);
while (G__7092__i < G__7092__a.length) {G__7092__a[G__7092__i] = arguments[G__7092__i + 3]; ++G__7092__i;}
  idxv = new cljs.core.IndexedSeq(G__7092__a,0);
} 
return G__7091__delegate.call(this,array,idx,idx2,idxv);};
G__7091.cljs$lang$maxFixedArity = 3;
G__7091.cljs$lang$applyTo = (function (arglist__7093){
var array = cljs.core.first(arglist__7093);
arglist__7093 = cljs.core.next(arglist__7093);
var idx = cljs.core.first(arglist__7093);
arglist__7093 = cljs.core.next(arglist__7093);
var idx2 = cljs.core.first(arglist__7093);
var idxv = cljs.core.rest(arglist__7093);
return G__7091__delegate(array,idx,idx2,idxv);
});
G__7091.cljs$core$IFn$_invoke$arity$variadic = G__7091__delegate;
return G__7091;
})()
;
aset = function(array,idx,idx2,var_args){
var idxv = var_args;
switch(arguments.length){
case 3:
return aset__3.call(this,array,idx,idx2);
default:
var G__7094 = null;
if (arguments.length > 3) {
var G__7095__i = 0, G__7095__a = new Array(arguments.length -  3);
while (G__7095__i < G__7095__a.length) {G__7095__a[G__7095__i] = arguments[G__7095__i + 3]; ++G__7095__i;}
G__7094 = new cljs.core.IndexedSeq(G__7095__a,0);
}
return aset__4.cljs$core$IFn$_invoke$arity$variadic(array,idx,idx2, G__7094);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aset.cljs$lang$maxFixedArity = 3;
aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
return aset;
})()
;
/**
* Returns the length of the array. Works on arrays of all types.
*/
cljs.core.alength = (function alength(array){
return array.length;
});
cljs.core.into_array = (function() {
var into_array = null;
var into_array__1 = (function (aseq){
return into_array.cljs$core$IFn$_invoke$arity$2(null,aseq);
});
var into_array__2 = (function (type,aseq){
var G__7101 = (function (a,x){
a.push(x);

return a;
});
var G__7102 = [];
var G__7103 = aseq;
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__7101,G__7102,G__7103) : cljs.core.reduce.call(null,G__7101,G__7102,G__7103));
});
into_array = function(type,aseq){
switch(arguments.length){
case 1:
return into_array__1.call(this,type);
case 2:
return into_array__2.call(this,type,aseq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
return into_array;
})()
;
/**
* Invoke JavaScript object method via string. Needed when the
* string is not a valid unquoted property name.
* @param {...*} var_args
*/
cljs.core.js_invoke = (function() { 
var js_invoke__delegate = function (obj,s,args){
return (obj[s]).apply(obj,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
var js_invoke = function (obj,s,var_args){
var args = null;
if (arguments.length > 2) {
var G__7104__i = 0, G__7104__a = new Array(arguments.length -  2);
while (G__7104__i < G__7104__a.length) {G__7104__a[G__7104__i] = arguments[G__7104__i + 2]; ++G__7104__i;}
  args = new cljs.core.IndexedSeq(G__7104__a,0);
} 
return js_invoke__delegate.call(this,obj,s,args);};
js_invoke.cljs$lang$maxFixedArity = 2;
js_invoke.cljs$lang$applyTo = (function (arglist__7105){
var obj = cljs.core.first(arglist__7105);
arglist__7105 = cljs.core.next(arglist__7105);
var s = cljs.core.first(arglist__7105);
var args = cljs.core.rest(arglist__7105);
return js_invoke__delegate(obj,s,args);
});
js_invoke.cljs$core$IFn$_invoke$arity$variadic = js_invoke__delegate;
return js_invoke;
})()
;

cljs.core.Fn = (function (){var obj7107 = {};
return obj7107;
})();


cljs.core.IFn = (function (){var obj7109 = {};
return obj7109;
})();

cljs.core._invoke = (function() {
var _invoke = null;
var _invoke__1 = (function (this$){
if((function (){var and__4708__auto__ = this$;
if(and__4708__auto__){
return this$.cljs$core$IFn$_invoke$arity$1;
} else {
return and__4708__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$1(this$);
} else {
var x__5364__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4720__auto__ = (cljs.core._invoke[(function (){var G__7155 = x__5364__auto__;
return goog.typeOf(G__7155);
})()]);
if(or__4720__auto__){
return or__4720__auto__;
} else {
var or__4720__auto____$1 = (cljs.core._invoke["_"]);
if(or__4720__auto____$1){
return or__4720__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$);
}
});
var _invoke__2 = (function (this$,a){
if((function (){var and__4708__auto__ = this$;
if(and__4708__auto__){
return this$.cljs$core$IFn$_invoke$arity$2;
} else {
return and__4708__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$2(this$,a);
} else {
var x__5364__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4720__auto__ = (cljs.core._invoke[(function (){var G__7157 = x__5364__auto__;
return goog.typeOf(G__7157);
})()]);
if(or__4720__auto__){
return or__4720__auto__;
} else {
var or__4720__auto____$1 = (cljs.core._invoke["_"]);
if(or__4720__auto____$1){
return or__4720__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a);
}
});
var _invoke__3 = (function (this$,a,b){
if((function (){var and__4708__auto__ = this$;
if(and__4708__auto__){
return this$.cljs$core$IFn$_invoke$arity$3;
} else {
return and__4708__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$3(this$,a,b);
} else {
var x__5364__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4720__auto__ = (cljs.core._invoke[(function (){var G__7159 = x__5364__auto__;
return goog.typeOf(G__7159);
})()]);
if(or__4720__auto__){
return or__4720__auto__;
} else {
var or__4720__auto____$1 = (cljs.core._invoke["_"]);
if(or__4720__auto____$1){
return or__4720__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b);
}
});
var _invoke__4 = (function (this$,a,b,c){
if((function (){var and__4708__auto__ = this$;
if(and__4708__auto__){
return this$.cljs$core$IFn$_invoke$arity$4;
} else {
return and__4708__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$4(this$,a,b,c);
} else {
var x__5364__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4720__auto__ = (cljs.core._invoke[(function (){var G__7161 = x__5364__auto__;
return goog.typeOf(G__7161);
})()]);
if(or__4720__auto__){
return or__4720__auto__;
} else {
var or__4720__auto____$1 = (cljs.core._invoke["_"]);
if(or__4720__auto____$1){
return or__4720__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c);
}
});
var _invoke__5 = (function (this$,a,b,c,d){
if((function (){var and__4708__auto__ = this$;
if(and__4708__auto__){
return this$.cljs$core$IFn$_invoke$arity$5;
} else {
return and__4708__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$5(this$,a,b,c,d);
} else {
var x__5364__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4720__auto__ = (cljs.core._invoke[(function (){var G__7163 = x__5364__auto__;
return goog.typeOf(G__7163);
})()]);
if(or__4720__auto__){
return or__4720__auto__;
} else {
var or__4720__auto____$1 = (cljs.core._invoke["_"]);
if(or__4720__auto____$1){
return or__4720__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d);
}
});
var _invoke__6 = (function (this$,a,b,c,d,e){
if((function (){var and__4708__auto__ = this$;
if(and__4708__auto__){
return this$.cljs$core$IFn$_invoke$arity$6;
} else {
return and__4708__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$6(this$,a,b,c,d,e);
} else {
var x__5364__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4720__auto__ = (cljs.core._invoke[(function (){var G__7165 = x__5364__auto__;
return goog.typeOf(G__7165);
})()]);
if(or__4720__auto__){
return or__4720__auto__;
} else {
var or__4720__auto____$1 = (cljs.core._invoke["_"]);
if(or__4720__auto____$1){
return or__4720__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e);
}
});
var _invoke__7 = (function (this$,a,b,c,d,e,f){
if((function (){var and__4708__auto__ = this$;
if(and__4708__auto__){
return this$.cljs$core$IFn$_invoke$arity$7;
} else {
return and__4708__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$7(this$,a,b,c,d,e,f);
} else {
var x__5364__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4720__auto__ = (cljs.core._invoke[(function (){var G__7167 = x__5364__auto__;
return goog.typeOf(G__7167);
})()]);
if(or__4720__auto__){
return or__4720__auto__;
} else {
var or__4720__auto____$1 = (cljs.core._invoke["_"]);
if(or__4720__auto____$1){
return or__4720__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f);
}
});
var _invoke__8 = (function (this$,a,b,c,d,e,f,g){
if((function (){var and__4708__auto__ = this$;
if(and__4708__auto__){
return this$.cljs$core$IFn$_invoke$arity$8;
} else {
return and__4708__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$8(this$,a,b,c,d,e,f,g);
} else {
var x__5364__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4720__auto__ = (cljs.core._invoke[(function (){var G__7169 = x__5364__auto__;
return goog.typeOf(G__7169);
})()]);
if(or__4720__auto__){
return or__4720__auto__;
} else {
var or__4720__auto____$1 = (cljs.core._invoke["_"]);
if(or__4720__auto____$1){
return or__4720__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g);
}
});
var _invoke__9 = (function (this$,a,b,c,d,e,f,g,h){
if((function (){var and__4708__auto__ = this$;
if(and__4708__auto__){
return this$.cljs$core$IFn$_invoke$arity$9;
} else {
return and__4708__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$9(this$,a,b,c,d,e,f,g,h);
} else {
var x__5364__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4720__auto__ = (cljs.core._invoke[(function (){var G__7171 = x__5364__auto__;
return goog.typeOf(G__7171);
})()]);
if(or__4720__auto__){
return or__4720__auto__;
} else {
var or__4720__auto____$1 = (cljs.core._invoke["_"]);
if(or__4720__auto____$1){
return or__4720__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h);
}
});
var _invoke__10 = (function (this$,a,b,c,d,e,f,g,h,i){
if((function (){var and__4708__auto__ = this$;
if(and__4708__auto__){
return this$.cljs$core$IFn$_invoke$arity$10;
} else {
return and__4708__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$10(this$,a,b,c,d,e,f,g,h,i);
} else {
var x__5364__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4720__auto__ = (cljs.core._invoke[(function (){var G__7173 = x__5364__auto__;
return goog.typeOf(G__7173);
})()]);
if(or__4720__auto__){
return or__4720__auto__;
} else {
var or__4720__auto____$1 = (cljs.core._invoke["_"]);
if(or__4720__auto____$1){
return or__4720__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i);
}
});
var _invoke__11 = (function (this$,a,b,c,d,e,f,g,h,i,j){
if((function (){var and__4708__auto__ = this$;
if(and__4708__auto__){
return this$.cljs$core$IFn$_invoke$arity$11;
} else {
return and__4708__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$11(this$,a,b,c,d,e,f,g,h,i,j);
} else {
var x__5364__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4720__auto__ = (cljs.core._invoke[(function (){var G__7175 = x__5364__auto__;
return goog.typeOf(G__7175);
})()]);
if(or__4720__auto__){
return or__4720__auto__;
} else {
var or__4720__auto____$1 = (cljs.core._invoke["_"]);
if(or__4720__auto____$1){
return or__4720__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j);
}
});
var _invoke__12 = (function (this$,a,b,c,d,e,f,g,h,i,j,k){
if((function (){var and__4708__auto__ = this$;
if(and__4708__auto__){
return this$.cljs$core$IFn$_invoke$arity$12;
} else {
return and__4708__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$12(this$,a,b,c,d,e,f,g,h,i,j,k);
} else {
var x__5364__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4720__auto__ = (cljs.core._invoke[(function (){var G__7177 = x__5364__auto__;
return goog.typeOf(G__7177);
})()]);
if(or__4720__auto__){
return or__4720__auto__;
} else {
var or__4720__auto____$1 = (cljs.core._invoke["_"]);
if(or__4720__auto____$1){
return or__4720__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k);
}
});
var _invoke__13 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l){
if((function (){var and__4708__auto__ = this$;
if(and__4708__auto__){
return this$.cljs$core$IFn$_invoke$arity$13;
} else {
return and__4708__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$13(this$,a,b,c,d,e,f,g,h,i,j,k,l);
} else {
var x__5364__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4720__auto__ = (cljs.core._invoke[(function (){var G__7179 = x__5364__auto__;
return goog.typeOf(G__7179);
})()]);
if(or__4720__auto__){
return or__4720__auto__;
} else {
var or__4720__auto____$1 = (cljs.core._invoke["_"]);
if(or__4720__auto____$1){
return or__4720__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l);
}
});
var _invoke__14 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m){
if((function (){var and__4708__auto__ = this$;
if(and__4708__auto__){
return this$.cljs$core$IFn$_invoke$arity$14;
} else {
return and__4708__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$14(this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
} else {
var x__5364__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4720__auto__ = (cljs.core._invoke[(function (){var G__7181 = x__5364__auto__;
return goog.typeOf(G__7181);
})()]);
if(or__4720__auto__){
return or__4720__auto__;
} else {
var or__4720__auto____$1 = (cljs.core._invoke["_"]);
if(or__4720__auto____$1){
return or__4720__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
}
});
var _invoke__15 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
if((function (){var and__4708__auto__ = this$;
if(and__4708__auto__){
return this$.cljs$core$IFn$_invoke$arity$15;
} else {
return and__4708__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$15(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
} else {
var x__5364__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4720__auto__ = (cljs.core._invoke[(function (){var G__7183 = x__5364__auto__;
return goog.typeOf(G__7183);
})()]);
if(or__4720__auto__){
return or__4720__auto__;
} else {
var or__4720__auto____$1 = (cljs.core._invoke["_"]);
if(or__4720__auto____$1){
return or__4720__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
}
});
var _invoke__16 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
if((function (){var and__4708__auto__ = this$;
if(and__4708__auto__){
return this$.cljs$core$IFn$_invoke$arity$16;
} else {
return and__4708__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$16(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
} else {
var x__5364__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4720__auto__ = (cljs.core._invoke[(function (){var G__7185 = x__5364__auto__;
return goog.typeOf(G__7185);
})()]);
if(or__4720__auto__){
return or__4720__auto__;
} else {
var or__4720__auto____$1 = (cljs.core._invoke["_"]);
if(or__4720__auto____$1){
return or__4720__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
}
});
var _invoke__17 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
if((function (){var and__4708__auto__ = this$;
if(and__4708__auto__){
return this$.cljs$core$IFn$_invoke$arity$17;
} else {
return and__4708__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$17(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
} else {
var x__5364__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4720__auto__ = (cljs.core._invoke[(function (){var G__7187 = x__5364__auto__;
return goog.typeOf(G__7187);
})()]);
if(or__4720__auto__){
return or__4720__auto__;
} else {
var or__4720__auto____$1 = (cljs.core._invoke["_"]);
if(or__4720__auto____$1){
return or__4720__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
}
});
var _invoke__18 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
if((function (){var and__4708__auto__ = this$;
if(and__4708__auto__){
return this$.cljs$core$IFn$_invoke$arity$18;
} else {
return and__4708__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$18(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
} else {
var x__5364__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4720__auto__ = (cljs.core._invoke[(function (){var G__7189 = x__5364__auto__;
return goog.typeOf(G__7189);
})()]);
if(or__4720__auto__){
return or__4720__auto__;
} else {
var or__4720__auto____$1 = (cljs.core._invoke["_"]);
if(or__4720__auto____$1){
return or__4720__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
}
});
var _invoke__19 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
if((function (){var and__4708__auto__ = this$;
if(and__4708__auto__){
return this$.cljs$core$IFn$_invoke$arity$19;
} else {
return and__4708__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$19(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
} else {
var x__5364__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4720__auto__ = (cljs.core._invoke[(function (){var G__7191 = x__5364__auto__;
return goog.typeOf(G__7191);
})()]);
if(or__4720__auto__){
return or__4720__auto__;
} else {
var or__4720__auto____$1 = (cljs.core._invoke["_"]);
if(or__4720__auto____$1){
return or__4720__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
}
});
var _invoke__20 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
if((function (){var and__4708__auto__ = this$;
if(and__4708__auto__){
return this$.cljs$core$IFn$_invoke$arity$20;
} else {
return and__4708__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$20(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
} else {
var x__5364__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4720__auto__ = (cljs.core._invoke[(function (){var G__7193 = x__5364__auto__;
return goog.typeOf(G__7193);
})()]);
if(or__4720__auto__){
return or__4720__auto__;
} else {
var or__4720__auto____$1 = (cljs.core._invoke["_"]);
if(or__4720__auto____$1){
return or__4720__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
}
});
var _invoke__21 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
if((function (){var and__4708__auto__ = this$;
if(and__4708__auto__){
return this$.cljs$core$IFn$_invoke$arity$21;
} else {
return and__4708__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$21(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
} else {
var x__5364__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4720__auto__ = (cljs.core._invoke[(function (){var G__7195 = x__5364__auto__;
return goog.typeOf(G__7195);
})()]);
if(or__4720__auto__){
return or__4720__auto__;
} else {
var or__4720__auto____$1 = (cljs.core._invoke["_"]);
if(or__4720__auto____$1){
return or__4720__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
}
});
var _invoke__22 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
if((function (){var and__4708__auto__ = this$;
if(and__4708__auto__){
return this$.cljs$core$IFn$_invoke$arity$22;
} else {
return and__4708__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$22(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
} else {
var x__5364__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4720__auto__ = (cljs.core._invoke[(function (){var G__7197 = x__5364__auto__;
return goog.typeOf(G__7197);
})()]);
if(or__4720__auto__){
return or__4720__auto__;
} else {
var or__4720__auto____$1 = (cljs.core._invoke["_"]);
if(or__4720__auto____$1){
return or__4720__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
});
_invoke = function(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return _invoke__1.call(this,this$);
case 2:
return _invoke__2.call(this,this$,a);
case 3:
return _invoke__3.call(this,this$,a,b);
case 4:
return _invoke__4.call(this,this$,a,b,c);
case 5:
return _invoke__5.call(this,this$,a,b,c,d);
case 6:
return _invoke__6.call(this,this$,a,b,c,d,e);
case 7:
return _invoke__7.call(this,this$,a,b,c,d,e,f);
case 8:
return _invoke__8.call(this,this$,a,b,c,d,e,f,g);
case 9:
return _invoke__9.call(this,this$,a,b,c,d,e,f,g,h);
case 10:
return _invoke__10.call(this,this$,a,b,c,d,e,f,g,h,i);
case 11:
return _invoke__11.call(this,this$,a,b,c,d,e,f,g,h,i,j);
case 12:
return _invoke__12.call(this,this$,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return _invoke__13.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return _invoke__14.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return _invoke__15.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return _invoke__16.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return _invoke__17.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return _invoke__18.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return _invoke__19.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return _invoke__20.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return _invoke__21.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return _invoke__22.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
_invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
_invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
_invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
_invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
_invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
_invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
_invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
_invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
_invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
_invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
_invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
_invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
_invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
_invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
_invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
_invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
_invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
_invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
_invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
_invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
_invoke.cljs$core$IFn$_invoke$arity$22 = _invoke__22;
return _invoke;
})()
;


cljs.core.ICloneable = (function (){var obj7199 = {};
return obj7199;
})();

cljs.core._clone = (function _clone(value){
if((function (){var and__4708__auto__ = value;
if(and__4708__auto__){
return value.cljs$core$ICloneable$_clone$arity$1;
} else {
return and__4708__auto__;
}
})()){
return value.cljs$core$ICloneable$_clone$arity$1(value);
} else {
var x__5364__auto__ = (((value == null))?null:value);
return (function (){var or__4720__auto__ = (cljs.core._clone[(function (){var G__7203 = x__5364__auto__;
return goog.typeOf(G__7203);
})()]);
if(or__4720__auto__){
return or__4720__auto__;
} else {
var or__4720__auto____$1 = (cljs.core._clone["_"]);
if(or__4720__auto____$1){
return or__4720__auto____$1;
} else {
throw cljs.core.missing_protocol("ICloneable.-clone",value);
}
}
})().call(null,value);
}
});


cljs.core.ICounted = (function (){var obj7205 = {};
return obj7205;
})();

cljs.core._count = (function _count(coll){
if((function (){var and__4708__auto__ = coll;
if(and__4708__auto__){
return coll.cljs$core$ICounted$_count$arity$1;
} else {
return and__4708__auto__;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(coll);
} else {
var x__5364__auto__ = (((coll == null))?null:coll);
return (function (){var or__4720__auto__ = (cljs.core._count[(function (){var G__7209 = x__5364__auto__;
return goog.typeOf(G__7209);
})()]);
if(or__4720__auto__){
return or__4720__auto__;
} else {
var or__4720__auto____$1 = (cljs.core._count["_"]);
if(or__4720__auto____$1){
return or__4720__auto____$1;
} else {
throw cljs.core.missing_protocol("ICounted.-count",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IEmptyableCollection = (function (){var obj7211 = {};
return obj7211;
})();

cljs.core._empty = (function _empty(coll){
if((function (){var and__4708__auto__ = coll;
if(and__4708__auto__){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
} else {
return and__4708__auto__;
}
})()){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
} else {
var x__5364__auto__ = (((coll == null))?null:coll);
return (function (){var or__4720__auto__ = (cljs.core._empty[(function (){var G__7215 = x__5364__auto__;
return goog.typeOf(G__7215);
})()]);
if(or__4720__auto__){
return or__4720__auto__;
} else {
var or__4720__auto____$1 = (cljs.core._empty["_"]);
if(or__4720__auto____$1){
return or__4720__auto____$1;
} else {
throw cljs.core.missing_protocol("IEmptyableCollection.-empty",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ICollection = (function (){var obj7217 = {};
return obj7217;
})();

cljs.core._conj = (function _conj(coll,o){
if((function (){var and__4708__auto__ = coll;
if(and__4708__auto__){
return coll.cljs$core$ICollection$_conj$arity$2;
} else {
return and__4708__auto__;
}
})()){
return coll.cljs$core$ICollection$_conj$arity$2(coll,o);
} else {
var x__5364__auto__ = (((coll == null))?null:coll);
return (function (){var or__4720__auto__ = (cljs.core._conj[(function (){var G__7221 = x__5364__auto__;
return goog.typeOf(G__7221);
})()]);
if(or__4720__auto__){
return or__4720__auto__;
} else {
var or__4720__auto____$1 = (cljs.core._conj["_"]);
if(or__4720__auto____$1){
return or__4720__auto____$1;
} else {
throw cljs.core.missing_protocol("ICollection.-conj",coll);
}
}
})().call(null,coll,o);
}
});


cljs.core.IIndexed = (function (){var obj7223 = {};
return obj7223;
})();

cljs.core._nth = (function() {
var _nth = null;
var _nth__2 = (function (coll,n){
if((function (){var and__4708__auto__ = coll;
if(and__4708__auto__){
return coll.cljs$core$IIndexed$_nth$arity$2;
} else {
return and__4708__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(coll,n);
} else {
var x__5364__auto__ = (((coll == null))?null:coll);
return (function (){var or__4720__auto__ = (cljs.core._nth[(function (){var G__7229 = x__5364__auto__;
return goog.typeOf(G__7229);
})()]);
if(or__4720__auto__){
return or__4720__auto__;
} else {
var or__4720__auto____$1 = (cljs.core._nth["_"]);
if(or__4720__auto____$1){
return or__4720__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n);
}
});
var _nth__3 = (function (coll,n,not_found){
if((function (){var and__4708__auto__ = coll;
if(and__4708__auto__){
return coll.cljs$core$IIndexed$_nth$arity$3;
} else {
return and__4708__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(coll,n,not_found);
} else {
var x__5364__auto__ = (((coll == null))?null:coll);
return (function (){var or__4720__auto__ = (cljs.core._nth[(function (){var G__7231 = x__5364__auto__;
return goog.typeOf(G__7231);
})()]);
if(or__4720__auto__){
return or__4720__auto__;
} else {
var or__4720__auto____$1 = (cljs.core._nth["_"]);
if(or__4720__auto____$1){
return or__4720__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n,not_found);
}
});
_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return _nth__2.call(this,coll,n);
case 3:
return _nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
_nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
return _nth;
})()
;


cljs.core.ASeq = (function (){var obj7233 = {};
return obj7233;
})();


cljs.core.ISeq = (function (){var obj7235 = {};
return obj7235;
})();

cljs.core._first = (function _first(coll){
if((function (){var and__4708__auto__ = coll;
if(and__4708__auto__){
return coll.cljs$core$ISeq$_first$arity$1;
} else {
return and__4708__auto__;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(coll);
} else {
var x__5364__auto__ = (((coll == null))?null:coll);
return (function (){var or__4720__auto__ = (cljs.core._first[(function (){var G__7239 = x__5364__auto__;
return goog.typeOf(G__7239);
})()]);
if(or__4720__auto__){
return or__4720__auto__;
} else {
var or__4720__auto____$1 = (cljs.core._first["_"]);
if(or__4720__auto____$1){
return or__4720__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._rest = (function _rest(coll){
if((function (){var and__4708__auto__ = coll;
if(and__4708__auto__){
return coll.cljs$core$ISeq$_rest$arity$1;
} else {
return and__4708__auto__;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(coll);
} else {
var x__5364__auto__ = (((coll == null))?null:coll);
return (function (){var or__4720__auto__ = (cljs.core._rest[(function (){var G__7243 = x__5364__auto__;
return goog.typeOf(G__7243);
})()]);
if(or__4720__auto__){
return or__4720__auto__;
} else {
var or__4720__auto____$1 = (cljs.core._rest["_"]);
if(or__4720__auto____$1){
return or__4720__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INext = (function (){var obj7245 = {};
return obj7245;
})();

cljs.core._next = (function _next(coll){
if((function (){var and__4708__auto__ = coll;
if(and__4708__auto__){
return coll.cljs$core$INext$_next$arity$1;
} else {
return and__4708__auto__;
}
})()){
return coll.cljs$core$INext$_next$arity$1(coll);
} else {
var x__5364__auto__ = (((coll == null))?null:coll);
return (function (){var or__4720__auto__ = (cljs.core._next[(function (){var G__7249 = x__5364__auto__;
return goog.typeOf(G__7249);
})()]);
if(or__4720__auto__){
return or__4720__auto__;
} else {
var or__4720__auto____$1 = (cljs.core._next["_"]);
if(or__4720__auto____$1){
return or__4720__auto____$1;
} else {
throw cljs.core.missing_protocol("INext.-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ILookup = (function (){var obj7251 = {};
return obj7251;
})();

cljs.core._lookup = (function() {
var _lookup = null;
var _lookup__2 = (function (o,k){
if((function (){var and__4708__auto__ = o;
if(and__4708__auto__){
return o.cljs$core$ILookup$_lookup$arity$2;
} else {
return and__4708__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(o,k);
} else {
var x__5364__auto__ = (((o == null))?null:o);
return (function (){var or__4720__auto__ = (cljs.core._lookup[(function (){var G__7257 = x__5364__auto__;
return goog.typeOf(G__7257);
})()]);
if(or__4720__auto__){
return or__4720__auto__;
} else {
var or__4720__auto____$1 = (cljs.core._lookup["_"]);
if(or__4720__auto____$1){
return or__4720__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k);
}
});
var _lookup__3 = (function (o,k,not_found){
if((function (){var and__4708__auto__ = o;
if(and__4708__auto__){
return o.cljs$core$ILookup$_lookup$arity$3;
} else {
return and__4708__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(o,k,not_found);
} else {
var x__5364__auto__ = (((o == null))?null:o);
return (function (){var or__4720__auto__ = (cljs.core._lookup[(function (){var G__7259 = x__5364__auto__;
return goog.typeOf(G__7259);
})()]);
if(or__4720__auto__){
return or__4720__auto__;
} else {
var or__4720__auto____$1 = (cljs.core._lookup["_"]);
if(or__4720__auto____$1){
return or__4720__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k,not_found);
}
});
_lookup = function(o,k,not_found){
switch(arguments.length){
case 2:
return _lookup__2.call(this,o,k);
case 3:
return _lookup__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
_lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
return _lookup;
})()
;


cljs.core.IAssociative = (function (){var obj7261 = {};
return obj7261;
})();

cljs.core._contains_key_QMARK_ = (function _contains_key_QMARK_(coll,k){
if((function (){var and__4708__auto__ = coll;
if(and__4708__auto__){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
} else {
return and__4708__auto__;
}
})()){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll,k);
} else {
var x__5364__auto__ = (((coll == null))?null:coll);
return (function (){var or__4720__auto__ = (cljs.core._contains_key_QMARK_[(function (){var G__7265 = x__5364__auto__;
return goog.typeOf(G__7265);
})()]);
if(or__4720__auto__){
return or__4720__auto__;
} else {
var or__4720__auto____$1 = (cljs.core._contains_key_QMARK_["_"]);
if(or__4720__auto____$1){
return or__4720__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-contains-key?",coll);
}
}
})().call(null,coll,k);
}
});

cljs.core._assoc = (function _assoc(coll,k,v){
if((function (){var and__4708__auto__ = coll;
if(and__4708__auto__){
return coll.cljs$core$IAssociative$_assoc$arity$3;
} else {
return and__4708__auto__;
}
})()){
return coll.cljs$core$IAssociative$_assoc$arity$3(coll,k,v);
} else {
var x__5364__auto__ = (((coll == null))?null:coll);
return (function (){var or__4720__auto__ = (cljs.core._assoc[(function (){var G__7269 = x__5364__auto__;
return goog.typeOf(G__7269);
})()]);
if(or__4720__auto__){
return or__4720__auto__;
} else {
var or__4720__auto____$1 = (cljs.core._assoc["_"]);
if(or__4720__auto____$1){
return or__4720__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-assoc",coll);
}
}
})().call(null,coll,k,v);
}
});


cljs.core.IMap = (function (){var obj7271 = {};
return obj7271;
})();

cljs.core._dissoc = (function _dissoc(coll,k){
if((function (){var and__4708__auto__ = coll;
if(and__4708__auto__){
return coll.cljs$core$IMap$_dissoc$arity$2;
} else {
return and__4708__auto__;
}
})()){
return coll.cljs$core$IMap$_dissoc$arity$2(coll,k);
} else {
var x__5364__auto__ = (((coll == null))?null:coll);
return (function (){var or__4720__auto__ = (cljs.core._dissoc[(function (){var G__7275 = x__5364__auto__;
return goog.typeOf(G__7275);
})()]);
if(or__4720__auto__){
return or__4720__auto__;
} else {
var or__4720__auto____$1 = (cljs.core._dissoc["_"]);
if(or__4720__auto____$1){
return or__4720__auto____$1;
} else {
throw cljs.core.missing_protocol("IMap.-dissoc",coll);
}
}
})().call(null,coll,k);
}
});


cljs.core.IMapEntry = (function (){var obj7277 = {};
return obj7277;
})();

cljs.core._key = (function _key(coll){
if((function (){var and__4708__auto__ = coll;
if(and__4708__auto__){
return coll.cljs$core$IMapEntry$_key$arity$1;
} else {
return and__4708__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_key$arity$1(coll);
} else {
var x__5364__auto__ = (((coll == null))?null:coll);
return (function (){var or__4720__auto__ = (cljs.core._key[(function (){var G__7281 = x__5364__auto__;
return goog.typeOf(G__7281);
})()]);
if(or__4720__auto__){
return or__4720__auto__;
} else {
var or__4720__auto____$1 = (cljs.core._key["_"]);
if(or__4720__auto____$1){
return or__4720__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-key",coll);
}
}
})().call(null,coll);
}
});

cljs.core._val = (function _val(coll){
if((function (){var and__4708__auto__ = coll;
if(and__4708__auto__){
return coll.cljs$core$IMapEntry$_val$arity$1;
} else {
return and__4708__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_val$arity$1(coll);
} else {
var x__5364__auto__ = (((coll == null))?null:coll);
return (function (){var or__4720__auto__ = (cljs.core._val[(function (){var G__7285 = x__5364__auto__;
return goog.typeOf(G__7285);
})()]);
if(or__4720__auto__){
return or__4720__auto__;
} else {
var or__4720__auto____$1 = (cljs.core._val["_"]);
if(or__4720__auto____$1){
return or__4720__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-val",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISet = (function (){var obj7287 = {};
return obj7287;
})();

cljs.core._disjoin = (function _disjoin(coll,v){
if((function (){var and__4708__auto__ = coll;
if(and__4708__auto__){
return coll.cljs$core$ISet$_disjoin$arity$2;
} else {
return and__4708__auto__;
}
})()){
return coll.cljs$core$ISet$_disjoin$arity$2(coll,v);
} else {
var x__5364__auto__ = (((coll == null))?null:coll);
return (function (){var or__4720__auto__ = (cljs.core._disjoin[(function (){var G__7291 = x__5364__auto__;
return goog.typeOf(G__7291);
})()]);
if(or__4720__auto__){
return or__4720__auto__;
} else {
var or__4720__auto____$1 = (cljs.core._disjoin["_"]);
if(or__4720__auto____$1){
return or__4720__auto____$1;
} else {
throw cljs.core.missing_protocol("ISet.-disjoin",coll);
}
}
})().call(null,coll,v);
}
});


cljs.core.IStack = (function (){var obj7293 = {};
return obj7293;
})();

cljs.core._peek = (function _peek(coll){
if((function (){var and__4708__auto__ = coll;
if(and__4708__auto__){
return coll.cljs$core$IStack$_peek$arity$1;
} else {
return and__4708__auto__;
}
})()){
return coll.cljs$core$IStack$_peek$arity$1(coll);
} else {
var x__5364__auto__ = (((coll == null))?null:coll);
return (function (){var or__4720__auto__ = (cljs.core._peek[(function (){var G__7297 = x__5364__auto__;
return goog.typeOf(G__7297);
})()]);
if(or__4720__auto__){
return or__4720__auto__;
} else {
var or__4720__auto____$1 = (cljs.core._peek["_"]);
if(or__4720__auto____$1){
return or__4720__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-peek",coll);
}
}
})().call(null,coll);
}
});

cljs.core._pop = (function _pop(coll){
if((function (){var and__4708__auto__ = coll;
if(and__4708__auto__){
return coll.cljs$core$IStack$_pop$arity$1;
} else {
return and__4708__auto__;
}
})()){
return coll.cljs$core$IStack$_pop$arity$1(coll);
} else {
var x__5364__auto__ = (((coll == null))?null:coll);
return (function (){var or__4720__auto__ = (cljs.core._pop[(function (){var G__7301 = x__5364__auto__;
return goog.typeOf(G__7301);
})()]);
if(or__4720__auto__){
return or__4720__auto__;
} else {
var or__4720__auto____$1 = (cljs.core._pop["_"]);
if(or__4720__auto____$1){
return or__4720__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-pop",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IVector = (function (){var obj7303 = {};
return obj7303;
})();

cljs.core._assoc_n = (function _assoc_n(coll,n,val){
if((function (){var and__4708__auto__ = coll;
if(and__4708__auto__){
return coll.cljs$core$IVector$_assoc_n$arity$3;
} else {
return and__4708__auto__;
}
})()){
return coll.cljs$core$IVector$_assoc_n$arity$3(coll,n,val);
} else {
var x__5364__auto__ = (((coll == null))?null:coll);
return (function (){var or__4720__auto__ = (cljs.core._assoc_n[(function (){var G__7307 = x__5364__auto__;
return goog.typeOf(G__7307);
})()]);
if(or__4720__auto__){
return or__4720__auto__;
} else {
var or__4720__auto____$1 = (cljs.core._assoc_n["_"]);
if(or__4720__auto____$1){
return or__4720__auto____$1;
} else {
throw cljs.core.missing_protocol("IVector.-assoc-n",coll);
}
}
})().call(null,coll,n,val);
}
});


cljs.core.IDeref = (function (){var obj7309 = {};
return obj7309;
})();

cljs.core._deref = (function _deref(o){
if((function (){var and__4708__auto__ = o;
if(and__4708__auto__){
return o.cljs$core$IDeref$_deref$arity$1;
} else {
return and__4708__auto__;
}
})()){
return o.cljs$core$IDeref$_deref$arity$1(o);
} else {
var x__5364__auto__ = (((o == null))?null:o);
return (function (){var or__4720__auto__ = (cljs.core._deref[(function (){var G__7313 = x__5364__auto__;
return goog.typeOf(G__7313);
})()]);
if(or__4720__auto__){
return or__4720__auto__;
} else {
var or__4720__auto____$1 = (cljs.core._deref["_"]);
if(or__4720__auto____$1){
return or__4720__auto____$1;
} else {
throw cljs.core.missing_protocol("IDeref.-deref",o);
}
}
})().call(null,o);
}
});


cljs.core.IDerefWithTimeout = (function (){var obj7315 = {};
return obj7315;
})();

cljs.core._deref_with_timeout = (function _deref_with_timeout(o,msec,timeout_val){
if((function (){var and__4708__auto__ = o;
if(and__4708__auto__){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
} else {
return and__4708__auto__;
}
})()){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o,msec,timeout_val);
} else {
var x__5364__auto__ = (((o == null))?null:o);
return (function (){var or__4720__auto__ = (cljs.core._deref_with_timeout[(function (){var G__7319 = x__5364__auto__;
return goog.typeOf(G__7319);
})()]);
if(or__4720__auto__){
return or__4720__auto__;
} else {
var or__4720__auto____$1 = (cljs.core._deref_with_timeout["_"]);
if(or__4720__auto____$1){
return or__4720__auto____$1;
} else {
throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout",o);
}
}
})().call(null,o,msec,timeout_val);
}
});


cljs.core.IMeta = (function (){var obj7321 = {};
return obj7321;
})();

cljs.core._meta = (function _meta(o){
if((function (){var and__4708__auto__ = o;
if(and__4708__auto__){
return o.cljs$core$IMeta$_meta$arity$1;
} else {
return and__4708__auto__;
}
})()){
return o.cljs$core$IMeta$_meta$arity$1(o);
} else {
var x__5364__auto__ = (((o == null))?null:o);
return (function (){var or__4720__auto__ = (cljs.core._meta[(function (){var G__7325 = x__5364__auto__;
return goog.typeOf(G__7325);
})()]);
if(or__4720__auto__){
return or__4720__auto__;
} else {
var or__4720__auto____$1 = (cljs.core._meta["_"]);
if(or__4720__auto____$1){
return or__4720__auto____$1;
} else {
throw cljs.core.missing_protocol("IMeta.-meta",o);
}
}
})().call(null,o);
}
});


cljs.core.IWithMeta = (function (){var obj7327 = {};
return obj7327;
})();

cljs.core._with_meta = (function _with_meta(o,meta){
if((function (){var and__4708__auto__ = o;
if(and__4708__auto__){
return o.cljs$core$IWithMeta$_with_meta$arity$2;
} else {
return and__4708__auto__;
}
})()){
return o.cljs$core$IWithMeta$_with_meta$arity$2(o,meta);
} else {
var x__5364__auto__ = (((o == null))?null:o);
return (function (){var or__4720__auto__ = (cljs.core._with_meta[(function (){var G__7331 = x__5364__auto__;
return goog.typeOf(G__7331);
})()]);
if(or__4720__auto__){
return or__4720__auto__;
} else {
var or__4720__auto____$1 = (cljs.core._with_meta["_"]);
if(or__4720__auto____$1){
return or__4720__auto____$1;
} else {
throw cljs.core.missing_protocol("IWithMeta.-with-meta",o);
}
}
})().call(null,o,meta);
}
});


cljs.core.IReduce = (function (){var obj7333 = {};
return obj7333;
})();

cljs.core._reduce = (function() {
var _reduce = null;
var _reduce__2 = (function (coll,f){
if((function (){var and__4708__auto__ = coll;
if(and__4708__auto__){
return coll.cljs$core$IReduce$_reduce$arity$2;
} else {
return and__4708__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(coll,f);
} else {
var x__5364__auto__ = (((coll == null))?null:coll);
return (function (){var or__4720__auto__ = (cljs.core._reduce[(function (){var G__7339 = x__5364__auto__;
return goog.typeOf(G__7339);
})()]);
if(or__4720__auto__){
return or__4720__auto__;
} else {
var or__4720__auto____$1 = (cljs.core._reduce["_"]);
if(or__4720__auto____$1){
return or__4720__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f);
}
});
var _reduce__3 = (function (coll,f,start){
if((function (){var and__4708__auto__ = coll;
if(and__4708__auto__){
return coll.cljs$core$IReduce$_reduce$arity$3;
} else {
return and__4708__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(coll,f,start);
} else {
var x__5364__auto__ = (((coll == null))?null:coll);
return (function (){var or__4720__auto__ = (cljs.core._reduce[(function (){var G__7341 = x__5364__auto__;
return goog.typeOf(G__7341);
})()]);
if(or__4720__auto__){
return or__4720__auto__;
} else {
var or__4720__auto____$1 = (cljs.core._reduce["_"]);
if(or__4720__auto____$1){
return or__4720__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f,start);
}
});
_reduce = function(coll,f,start){
switch(arguments.length){
case 2:
return _reduce__2.call(this,coll,f);
case 3:
return _reduce__3.call(this,coll,f,start);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
_reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
return _reduce;
})()
;


cljs.core.IKVReduce = (function (){var obj7343 = {};
return obj7343;
})();

cljs.core._kv_reduce = (function _kv_reduce(coll,f,init){
if((function (){var and__4708__auto__ = coll;
if(and__4708__auto__){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
} else {
return and__4708__auto__;
}
})()){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll,f,init);
} else {
var x__5364__auto__ = (((coll == null))?null:coll);
return (function (){var or__4720__auto__ = (cljs.core._kv_reduce[(function (){var G__7347 = x__5364__auto__;
return goog.typeOf(G__7347);
})()]);
if(or__4720__auto__){
return or__4720__auto__;
} else {
var or__4720__auto____$1 = (cljs.core._kv_reduce["_"]);
if(or__4720__auto____$1){
return or__4720__auto____$1;
} else {
throw cljs.core.missing_protocol("IKVReduce.-kv-reduce",coll);
}
}
})().call(null,coll,f,init);
}
});


cljs.core.IEquiv = (function (){var obj7349 = {};
return obj7349;
})();

cljs.core._equiv = (function _equiv(o,other){
if((function (){var and__4708__auto__ = o;
if(and__4708__auto__){
return o.cljs$core$IEquiv$_equiv$arity$2;
} else {
return and__4708__auto__;
}
})()){
return o.cljs$core$IEquiv$_equiv$arity$2(o,other);
} else {
var x__5364__auto__ = (((o == null))?null:o);
return (function (){var or__4720__auto__ = (cljs.core._equiv[(function (){var G__7353 = x__5364__auto__;
return goog.typeOf(G__7353);
})()]);
if(or__4720__auto__){
return or__4720__auto__;
} else {
var or__4720__auto____$1 = (cljs.core._equiv["_"]);
if(or__4720__auto____$1){
return or__4720__auto____$1;
} else {
throw cljs.core.missing_protocol("IEquiv.-equiv",o);
}
}
})().call(null,o,other);
}
});


cljs.core.IHash = (function (){var obj7355 = {};
return obj7355;
})();

cljs.core._hash = (function _hash(o){
if((function (){var and__4708__auto__ = o;
if(and__4708__auto__){
return o.cljs$core$IHash$_hash$arity$1;
} else {
return and__4708__auto__;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(o);
} else {
var x__5364__auto__ = (((o == null))?null:o);
return (function (){var or__4720__auto__ = (cljs.core._hash[(function (){var G__7359 = x__5364__auto__;
return goog.typeOf(G__7359);
})()]);
if(or__4720__auto__){
return or__4720__auto__;
} else {
var or__4720__auto____$1 = (cljs.core._hash["_"]);
if(or__4720__auto____$1){
return or__4720__auto____$1;
} else {
throw cljs.core.missing_protocol("IHash.-hash",o);
}
}
})().call(null,o);
}
});


cljs.core.ISeqable = (function (){var obj7361 = {};
return obj7361;
})();

cljs.core._seq = (function _seq(o){
if((function (){var and__4708__auto__ = o;
if(and__4708__auto__){
return o.cljs$core$ISeqable$_seq$arity$1;
} else {
return and__4708__auto__;
}
})()){
return o.cljs$core$ISeqable$_seq$arity$1(o);
} else {
var x__5364__auto__ = (((o == null))?null:o);
return (function (){var or__4720__auto__ = (cljs.core._seq[(function (){var G__7365 = x__5364__auto__;
return goog.typeOf(G__7365);
})()]);
if(or__4720__auto__){
return or__4720__auto__;
} else {
var or__4720__auto____$1 = (cljs.core._seq["_"]);
if(or__4720__auto____$1){
return or__4720__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeqable.-seq",o);
}
}
})().call(null,o);
}
});


cljs.core.ISequential = (function (){var obj7367 = {};
return obj7367;
})();


cljs.core.IList = (function (){var obj7369 = {};
return obj7369;
})();


cljs.core.IRecord = (function (){var obj7371 = {};
return obj7371;
})();


cljs.core.IReversible = (function (){var obj7373 = {};
return obj7373;
})();

cljs.core._rseq = (function _rseq(coll){
if((function (){var and__4708__auto__ = coll;
if(and__4708__auto__){
return coll.cljs$core$IReversible$_rseq$arity$1;
} else {
return and__4708__auto__;
}
})()){
return coll.cljs$core$IReversible$_rseq$arity$1(coll);
} else {
var x__5364__auto__ = (((coll == null))?null:coll);
return (function (){var or__4720__auto__ = (cljs.core._rseq[(function (){var G__7377 = x__5364__auto__;
return goog.typeOf(G__7377);
})()]);
if(or__4720__auto__){
return or__4720__auto__;
} else {
var or__4720__auto____$1 = (cljs.core._rseq["_"]);
if(or__4720__auto____$1){
return or__4720__auto____$1;
} else {
throw cljs.core.missing_protocol("IReversible.-rseq",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISorted = (function (){var obj7379 = {};
return obj7379;
})();

cljs.core._sorted_seq = (function _sorted_seq(coll,ascending_QMARK_){
if((function (){var and__4708__auto__ = coll;
if(and__4708__auto__){
return coll.cljs$core$ISorted$_sorted_seq$arity$2;
} else {
return and__4708__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll,ascending_QMARK_);
} else {
var x__5364__auto__ = (((coll == null))?null:coll);
return (function (){var or__4720__auto__ = (cljs.core._sorted_seq[(function (){var G__7383 = x__5364__auto__;
return goog.typeOf(G__7383);
})()]);
if(or__4720__auto__){
return or__4720__auto__;
} else {
var or__4720__auto____$1 = (cljs.core._sorted_seq["_"]);
if(or__4720__auto____$1){
return or__4720__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq",coll);
}
}
})().call(null,coll,ascending_QMARK_);
}
});

cljs.core._sorted_seq_from = (function _sorted_seq_from(coll,k,ascending_QMARK_){
if((function (){var and__4708__auto__ = coll;
if(and__4708__auto__){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
} else {
return and__4708__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll,k,ascending_QMARK_);
} else {
var x__5364__auto__ = (((coll == null))?null:coll);
return (function (){var or__4720__auto__ = (cljs.core._sorted_seq_from[(function (){var G__7387 = x__5364__auto__;
return goog.typeOf(G__7387);
})()]);
if(or__4720__auto__){
return or__4720__auto__;
} else {
var or__4720__auto____$1 = (cljs.core._sorted_seq_from["_"]);
if(or__4720__auto____$1){
return or__4720__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq-from",coll);
}
}
})().call(null,coll,k,ascending_QMARK_);
}
});

cljs.core._entry_key = (function _entry_key(coll,entry){
if((function (){var and__4708__auto__ = coll;
if(and__4708__auto__){
return coll.cljs$core$ISorted$_entry_key$arity$2;
} else {
return and__4708__auto__;
}
})()){
return coll.cljs$core$ISorted$_entry_key$arity$2(coll,entry);
} else {
var x__5364__auto__ = (((coll == null))?null:coll);
return (function (){var or__4720__auto__ = (cljs.core._entry_key[(function (){var G__7391 = x__5364__auto__;
return goog.typeOf(G__7391);
})()]);
if(or__4720__auto__){
return or__4720__auto__;
} else {
var or__4720__auto____$1 = (cljs.core._entry_key["_"]);
if(or__4720__auto____$1){
return or__4720__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-entry-key",coll);
}
}
})().call(null,coll,entry);
}
});

cljs.core._comparator = (function _comparator(coll){
if((function (){var and__4708__auto__ = coll;
if(and__4708__auto__){
return coll.cljs$core$ISorted$_comparator$arity$1;
} else {
return and__4708__auto__;
}
})()){
return coll.cljs$core$ISorted$_comparator$arity$1(coll);
} else {
var x__5364__auto__ = (((coll == null))?null:coll);
return (function (){var or__4720__auto__ = (cljs.core._comparator[(function (){var G__7395 = x__5364__auto__;
return goog.typeOf(G__7395);
})()]);
if(or__4720__auto__){
return or__4720__auto__;
} else {
var or__4720__auto____$1 = (cljs.core._comparator["_"]);
if(or__4720__auto____$1){
return or__4720__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-comparator",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IWriter = (function (){var obj7397 = {};
return obj7397;
})();

cljs.core._write = (function _write(writer,s){
if((function (){var and__4708__auto__ = writer;
if(and__4708__auto__){
return writer.cljs$core$IWriter$_write$arity$2;
} else {
return and__4708__auto__;
}
})()){
return writer.cljs$core$IWriter$_write$arity$2(writer,s);
} else {
var x__5364__auto__ = (((writer == null))?null:writer);
return (function (){var or__4720__auto__ = (cljs.core._write[(function (){var G__7401 = x__5364__auto__;
return goog.typeOf(G__7401);
})()]);
if(or__4720__auto__){
return or__4720__auto__;
} else {
var or__4720__auto____$1 = (cljs.core._write["_"]);
if(or__4720__auto____$1){
return or__4720__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-write",writer);
}
}
})().call(null,writer,s);
}
});

cljs.core._flush = (function _flush(writer){
if((function (){var and__4708__auto__ = writer;
if(and__4708__auto__){
return writer.cljs$core$IWriter$_flush$arity$1;
} else {
return and__4708__auto__;
}
})()){
return writer.cljs$core$IWriter$_flush$arity$1(writer);
} else {
var x__5364__auto__ = (((writer == null))?null:writer);
return (function (){var or__4720__auto__ = (cljs.core._flush[(function (){var G__7405 = x__5364__auto__;
return goog.typeOf(G__7405);
})()]);
if(or__4720__auto__){
return or__4720__auto__;
} else {
var or__4720__auto____$1 = (cljs.core._flush["_"]);
if(or__4720__auto____$1){
return or__4720__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-flush",writer);
}
}
})().call(null,writer);
}
});


cljs.core.IPrintWithWriter = (function (){var obj7407 = {};
return obj7407;
})();

cljs.core._pr_writer = (function _pr_writer(o,writer,opts){
if((function (){var and__4708__auto__ = o;
if(and__4708__auto__){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
} else {
return and__4708__auto__;
}
})()){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o,writer,opts);
} else {
var x__5364__auto__ = (((o == null))?null:o);
return (function (){var or__4720__auto__ = (cljs.core._pr_writer[(function (){var G__7411 = x__5364__auto__;
return goog.typeOf(G__7411);
})()]);
if(or__4720__auto__){
return or__4720__auto__;
} else {
var or__4720__auto____$1 = (cljs.core._pr_writer["_"]);
if(or__4720__auto____$1){
return or__4720__auto____$1;
} else {
throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer",o);
}
}
})().call(null,o,writer,opts);
}
});


cljs.core.IPending = (function (){var obj7413 = {};
return obj7413;
})();

cljs.core._realized_QMARK_ = (function _realized_QMARK_(d){
if((function (){var and__4708__auto__ = d;
if(and__4708__auto__){
return d.cljs$core$IPending$_realized_QMARK_$arity$1;
} else {
return and__4708__auto__;
}
})()){
return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
} else {
var x__5364__auto__ = (((d == null))?null:d);
return (function (){var or__4720__auto__ = (cljs.core._realized_QMARK_[(function (){var G__7417 = x__5364__auto__;
return goog.typeOf(G__7417);
})()]);
if(or__4720__auto__){
return or__4720__auto__;
} else {
var or__4720__auto____$1 = (cljs.core._realized_QMARK_["_"]);
if(or__4720__auto____$1){
return or__4720__auto____$1;
} else {
throw cljs.core.missing_protocol("IPending.-realized?",d);
}
}
})().call(null,d);
}
});


cljs.core.IWatchable = (function (){var obj7419 = {};
return obj7419;
})();

cljs.core._notify_watches = (function _notify_watches(this$,oldval,newval){
if((function (){var and__4708__auto__ = this$;
if(and__4708__auto__){
return this$.cljs$core$IWatchable$_notify_watches$arity$3;
} else {
return and__4708__auto__;
}
})()){
return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$,oldval,newval);
} else {
var x__5364__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4720__auto__ = (cljs.core._notify_watches[(function (){var G__7423 = x__5364__auto__;
return goog.typeOf(G__7423);
})()]);
if(or__4720__auto__){
return or__4720__auto__;
} else {
var or__4720__auto____$1 = (cljs.core._notify_watches["_"]);
if(or__4720__auto____$1){
return or__4720__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-notify-watches",this$);
}
}
})().call(null,this$,oldval,newval);
}
});

cljs.core._add_watch = (function _add_watch(this$,key,f){
if((function (){var and__4708__auto__ = this$;
if(and__4708__auto__){
return this$.cljs$core$IWatchable$_add_watch$arity$3;
} else {
return and__4708__auto__;
}
})()){
return this$.cljs$core$IWatchable$_add_watch$arity$3(this$,key,f);
} else {
var x__5364__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4720__auto__ = (cljs.core._add_watch[(function (){var G__7427 = x__5364__auto__;
return goog.typeOf(G__7427);
})()]);
if(or__4720__auto__){
return or__4720__auto__;
} else {
var or__4720__auto____$1 = (cljs.core._add_watch["_"]);
if(or__4720__auto____$1){
return or__4720__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-add-watch",this$);
}
}
})().call(null,this$,key,f);
}
});

cljs.core._remove_watch = (function _remove_watch(this$,key){
if((function (){var and__4708__auto__ = this$;
if(and__4708__auto__){
return this$.cljs$core$IWatchable$_remove_watch$arity$2;
} else {
return and__4708__auto__;
}
})()){
return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$,key);
} else {
var x__5364__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4720__auto__ = (cljs.core._remove_watch[(function (){var G__7431 = x__5364__auto__;
return goog.typeOf(G__7431);
})()]);
if(or__4720__auto__){
return or__4720__auto__;
} else {
var or__4720__auto____$1 = (cljs.core._remove_watch["_"]);
if(or__4720__auto____$1){
return or__4720__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-remove-watch",this$);
}
}
})().call(null,this$,key);
}
});


cljs.core.IEditableCollection = (function (){var obj7433 = {};
return obj7433;
})();

cljs.core._as_transient = (function _as_transient(coll){
if((function (){var and__4708__auto__ = coll;
if(and__4708__auto__){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
} else {
return and__4708__auto__;
}
})()){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
} else {
var x__5364__auto__ = (((coll == null))?null:coll);
return (function (){var or__4720__auto__ = (cljs.core._as_transient[(function (){var G__7437 = x__5364__auto__;
return goog.typeOf(G__7437);
})()]);
if(or__4720__auto__){
return or__4720__auto__;
} else {
var or__4720__auto____$1 = (cljs.core._as_transient["_"]);
if(or__4720__auto____$1){
return or__4720__auto____$1;
} else {
throw cljs.core.missing_protocol("IEditableCollection.-as-transient",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ITransientCollection = (function (){var obj7439 = {};
return obj7439;
})();

cljs.core._conj_BANG_ = (function _conj_BANG_(tcoll,val){
if((function (){var and__4708__auto__ = tcoll;
if(and__4708__auto__){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
} else {
return and__4708__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll,val);
} else {
var x__5364__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__4720__auto__ = (cljs.core._conj_BANG_[(function (){var G__7443 = x__5364__auto__;
return goog.typeOf(G__7443);
})()]);
if(or__4720__auto__){
return or__4720__auto__;
} else {
var or__4720__auto____$1 = (cljs.core._conj_BANG_["_"]);
if(or__4720__auto____$1){
return or__4720__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-conj!",tcoll);
}
}
})().call(null,tcoll,val);
}
});

cljs.core._persistent_BANG_ = (function _persistent_BANG_(tcoll){
if((function (){var and__4708__auto__ = tcoll;
if(and__4708__auto__){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
} else {
return and__4708__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
} else {
var x__5364__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__4720__auto__ = (cljs.core._persistent_BANG_[(function (){var G__7447 = x__5364__auto__;
return goog.typeOf(G__7447);
})()]);
if(or__4720__auto__){
return or__4720__auto__;
} else {
var or__4720__auto____$1 = (cljs.core._persistent_BANG_["_"]);
if(or__4720__auto____$1){
return or__4720__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-persistent!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientAssociative = (function (){var obj7449 = {};
return obj7449;
})();

cljs.core._assoc_BANG_ = (function _assoc_BANG_(tcoll,key,val){
if((function (){var and__4708__auto__ = tcoll;
if(and__4708__auto__){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
} else {
return and__4708__auto__;
}
})()){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll,key,val);
} else {
var x__5364__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__4720__auto__ = (cljs.core._assoc_BANG_[(function (){var G__7453 = x__5364__auto__;
return goog.typeOf(G__7453);
})()]);
if(or__4720__auto__){
return or__4720__auto__;
} else {
var or__4720__auto____$1 = (cljs.core._assoc_BANG_["_"]);
if(or__4720__auto____$1){
return or__4720__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientAssociative.-assoc!",tcoll);
}
}
})().call(null,tcoll,key,val);
}
});


cljs.core.ITransientMap = (function (){var obj7455 = {};
return obj7455;
})();

cljs.core._dissoc_BANG_ = (function _dissoc_BANG_(tcoll,key){
if((function (){var and__4708__auto__ = tcoll;
if(and__4708__auto__){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
} else {
return and__4708__auto__;
}
})()){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll,key);
} else {
var x__5364__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__4720__auto__ = (cljs.core._dissoc_BANG_[(function (){var G__7459 = x__5364__auto__;
return goog.typeOf(G__7459);
})()]);
if(or__4720__auto__){
return or__4720__auto__;
} else {
var or__4720__auto____$1 = (cljs.core._dissoc_BANG_["_"]);
if(or__4720__auto____$1){
return or__4720__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientMap.-dissoc!",tcoll);
}
}
})().call(null,tcoll,key);
}
});


cljs.core.ITransientVector = (function (){var obj7461 = {};
return obj7461;
})();

cljs.core._assoc_n_BANG_ = (function _assoc_n_BANG_(tcoll,n,val){
if((function (){var and__4708__auto__ = tcoll;
if(and__4708__auto__){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
} else {
return and__4708__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll,n,val);
} else {
var x__5364__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__4720__auto__ = (cljs.core._assoc_n_BANG_[(function (){var G__7465 = x__5364__auto__;
return goog.typeOf(G__7465);
})()]);
if(or__4720__auto__){
return or__4720__auto__;
} else {
var or__4720__auto____$1 = (cljs.core._assoc_n_BANG_["_"]);
if(or__4720__auto____$1){
return or__4720__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-assoc-n!",tcoll);
}
}
})().call(null,tcoll,n,val);
}
});

cljs.core._pop_BANG_ = (function _pop_BANG_(tcoll){
if((function (){var and__4708__auto__ = tcoll;
if(and__4708__auto__){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
} else {
return and__4708__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
} else {
var x__5364__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__4720__auto__ = (cljs.core._pop_BANG_[(function (){var G__7469 = x__5364__auto__;
return goog.typeOf(G__7469);
})()]);
if(or__4720__auto__){
return or__4720__auto__;
} else {
var or__4720__auto____$1 = (cljs.core._pop_BANG_["_"]);
if(or__4720__auto____$1){
return or__4720__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-pop!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientSet = (function (){var obj7471 = {};
return obj7471;
})();

cljs.core._disjoin_BANG_ = (function _disjoin_BANG_(tcoll,v){
if((function (){var and__4708__auto__ = tcoll;
if(and__4708__auto__){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
} else {
return and__4708__auto__;
}
})()){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll,v);
} else {
var x__5364__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__4720__auto__ = (cljs.core._disjoin_BANG_[(function (){var G__7475 = x__5364__auto__;
return goog.typeOf(G__7475);
})()]);
if(or__4720__auto__){
return or__4720__auto__;
} else {
var or__4720__auto____$1 = (cljs.core._disjoin_BANG_["_"]);
if(or__4720__auto____$1){
return or__4720__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientSet.-disjoin!",tcoll);
}
}
})().call(null,tcoll,v);
}
});


cljs.core.IComparable = (function (){var obj7477 = {};
return obj7477;
})();

cljs.core._compare = (function _compare(x,y){
if((function (){var and__4708__auto__ = x;
if(and__4708__auto__){
return x.cljs$core$IComparable$_compare$arity$2;
} else {
return and__4708__auto__;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(x,y);
} else {
var x__5364__auto__ = (((x == null))?null:x);
return (function (){var or__4720__auto__ = (cljs.core._compare[(function (){var G__7481 = x__5364__auto__;
return goog.typeOf(G__7481);
})()]);
if(or__4720__auto__){
return or__4720__auto__;
} else {
var or__4720__auto____$1 = (cljs.core._compare["_"]);
if(or__4720__auto____$1){
return or__4720__auto____$1;
} else {
throw cljs.core.missing_protocol("IComparable.-compare",x);
}
}
})().call(null,x,y);
}
});


cljs.core.IChunk = (function (){var obj7483 = {};
return obj7483;
})();

cljs.core._drop_first = (function _drop_first(coll){
if((function (){var and__4708__auto__ = coll;
if(and__4708__auto__){
return coll.cljs$core$IChunk$_drop_first$arity$1;
} else {
return and__4708__auto__;
}
})()){
return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
} else {
var x__5364__auto__ = (((coll == null))?null:coll);
return (function (){var or__4720__auto__ = (cljs.core._drop_first[(function (){var G__7487 = x__5364__auto__;
return goog.typeOf(G__7487);
})()]);
if(or__4720__auto__){
return or__4720__auto__;
} else {
var or__4720__auto____$1 = (cljs.core._drop_first["_"]);
if(or__4720__auto____$1){
return or__4720__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunk.-drop-first",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedSeq = (function (){var obj7489 = {};
return obj7489;
})();

cljs.core._chunked_first = (function _chunked_first(coll){
if((function (){var and__4708__auto__ = coll;
if(and__4708__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
} else {
return and__4708__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
} else {
var x__5364__auto__ = (((coll == null))?null:coll);
return (function (){var or__4720__auto__ = (cljs.core._chunked_first[(function (){var G__7493 = x__5364__auto__;
return goog.typeOf(G__7493);
})()]);
if(or__4720__auto__){
return or__4720__auto__;
} else {
var or__4720__auto____$1 = (cljs.core._chunked_first["_"]);
if(or__4720__auto____$1){
return or__4720__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._chunked_rest = (function _chunked_rest(coll){
if((function (){var and__4708__auto__ = coll;
if(and__4708__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
} else {
return and__4708__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
} else {
var x__5364__auto__ = (((coll == null))?null:coll);
return (function (){var or__4720__auto__ = (cljs.core._chunked_rest[(function (){var G__7497 = x__5364__auto__;
return goog.typeOf(G__7497);
})()]);
if(or__4720__auto__){
return or__4720__auto__;
} else {
var or__4720__auto____$1 = (cljs.core._chunked_rest["_"]);
if(or__4720__auto____$1){
return or__4720__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedNext = (function (){var obj7499 = {};
return obj7499;
})();

cljs.core._chunked_next = (function _chunked_next(coll){
if((function (){var and__4708__auto__ = coll;
if(and__4708__auto__){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
} else {
return and__4708__auto__;
}
})()){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
} else {
var x__5364__auto__ = (((coll == null))?null:coll);
return (function (){var or__4720__auto__ = (cljs.core._chunked_next[(function (){var G__7503 = x__5364__auto__;
return goog.typeOf(G__7503);
})()]);
if(or__4720__auto__){
return or__4720__auto__;
} else {
var or__4720__auto____$1 = (cljs.core._chunked_next["_"]);
if(or__4720__auto____$1){
return or__4720__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedNext.-chunked-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INamed = (function (){var obj7505 = {};
return obj7505;
})();

cljs.core._name = (function _name(x){
if((function (){var and__4708__auto__ = x;
if(and__4708__auto__){
return x.cljs$core$INamed$_name$arity$1;
} else {
return and__4708__auto__;
}
})()){
return x.cljs$core$INamed$_name$arity$1(x);
} else {
var x__5364__auto__ = (((x == null))?null:x);
return (function (){var or__4720__auto__ = (cljs.core._name[(function (){var G__7509 = x__5364__auto__;
return goog.typeOf(G__7509);
})()]);
if(or__4720__auto__){
return or__4720__auto__;
} else {
var or__4720__auto____$1 = (cljs.core._name["_"]);
if(or__4720__auto____$1){
return or__4720__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-name",x);
}
}
})().call(null,x);
}
});

cljs.core._namespace = (function _namespace(x){
if((function (){var and__4708__auto__ = x;
if(and__4708__auto__){
return x.cljs$core$INamed$_namespace$arity$1;
} else {
return and__4708__auto__;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(x);
} else {
var x__5364__auto__ = (((x == null))?null:x);
return (function (){var or__4720__auto__ = (cljs.core._namespace[(function (){var G__7513 = x__5364__auto__;
return goog.typeOf(G__7513);
})()]);
if(or__4720__auto__){
return or__4720__auto__;
} else {
var or__4720__auto____$1 = (cljs.core._namespace["_"]);
if(or__4720__auto____$1){
return or__4720__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-namespace",x);
}
}
})().call(null,x);
}
});


cljs.core.IAtom = (function (){var obj7515 = {};
return obj7515;
})();


cljs.core.IReset = (function (){var obj7517 = {};
return obj7517;
})();

cljs.core._reset_BANG_ = (function _reset_BANG_(o,new_value){
if((function (){var and__4708__auto__ = o;
if(and__4708__auto__){
return o.cljs$core$IReset$_reset_BANG_$arity$2;
} else {
return and__4708__auto__;
}
})()){
return o.cljs$core$IReset$_reset_BANG_$arity$2(o,new_value);
} else {
var x__5364__auto__ = (((o == null))?null:o);
return (function (){var or__4720__auto__ = (cljs.core._reset_BANG_[(function (){var G__7521 = x__5364__auto__;
return goog.typeOf(G__7521);
})()]);
if(or__4720__auto__){
return or__4720__auto__;
} else {
var or__4720__auto____$1 = (cljs.core._reset_BANG_["_"]);
if(or__4720__auto____$1){
return or__4720__auto____$1;
} else {
throw cljs.core.missing_protocol("IReset.-reset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.ISwap = (function (){var obj7523 = {};
return obj7523;
})();

cljs.core._swap_BANG_ = (function() {
var _swap_BANG_ = null;
var _swap_BANG___2 = (function (o,f){
if((function (){var and__4708__auto__ = o;
if(and__4708__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$2;
} else {
return and__4708__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$2(o,f);
} else {
var x__5364__auto__ = (((o == null))?null:o);
return (function (){var or__4720__auto__ = (cljs.core._swap_BANG_[(function (){var G__7533 = x__5364__auto__;
return goog.typeOf(G__7533);
})()]);
if(or__4720__auto__){
return or__4720__auto__;
} else {
var or__4720__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__4720__auto____$1){
return or__4720__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f);
}
});
var _swap_BANG___3 = (function (o,f,a){
if((function (){var and__4708__auto__ = o;
if(and__4708__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$3;
} else {
return and__4708__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$3(o,f,a);
} else {
var x__5364__auto__ = (((o == null))?null:o);
return (function (){var or__4720__auto__ = (cljs.core._swap_BANG_[(function (){var G__7535 = x__5364__auto__;
return goog.typeOf(G__7535);
})()]);
if(or__4720__auto__){
return or__4720__auto__;
} else {
var or__4720__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__4720__auto____$1){
return or__4720__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a);
}
});
var _swap_BANG___4 = (function (o,f,a,b){
if((function (){var and__4708__auto__ = o;
if(and__4708__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$4;
} else {
return and__4708__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$4(o,f,a,b);
} else {
var x__5364__auto__ = (((o == null))?null:o);
return (function (){var or__4720__auto__ = (cljs.core._swap_BANG_[(function (){var G__7537 = x__5364__auto__;
return goog.typeOf(G__7537);
})()]);
if(or__4720__auto__){
return or__4720__auto__;
} else {
var or__4720__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__4720__auto____$1){
return or__4720__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b);
}
});
var _swap_BANG___5 = (function (o,f,a,b,xs){
if((function (){var and__4708__auto__ = o;
if(and__4708__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$5;
} else {
return and__4708__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$5(o,f,a,b,xs);
} else {
var x__5364__auto__ = (((o == null))?null:o);
return (function (){var or__4720__auto__ = (cljs.core._swap_BANG_[(function (){var G__7539 = x__5364__auto__;
return goog.typeOf(G__7539);
})()]);
if(or__4720__auto__){
return or__4720__auto__;
} else {
var or__4720__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__4720__auto____$1){
return or__4720__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b,xs);
}
});
_swap_BANG_ = function(o,f,a,b,xs){
switch(arguments.length){
case 2:
return _swap_BANG___2.call(this,o,f);
case 3:
return _swap_BANG___3.call(this,o,f,a);
case 4:
return _swap_BANG___4.call(this,o,f,a,b);
case 5:
return _swap_BANG___5.call(this,o,f,a,b,xs);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
_swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
_swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
_swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
return _swap_BANG_;
})()
;


cljs.core.IVolatile = (function (){var obj7541 = {};
return obj7541;
})();

cljs.core._vreset_BANG_ = (function _vreset_BANG_(o,new_value){
if((function (){var and__4708__auto__ = o;
if(and__4708__auto__){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
} else {
return and__4708__auto__;
}
})()){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o,new_value);
} else {
var x__5364__auto__ = (((o == null))?null:o);
return (function (){var or__4720__auto__ = (cljs.core._vreset_BANG_[(function (){var G__7545 = x__5364__auto__;
return goog.typeOf(G__7545);
})()]);
if(or__4720__auto__){
return or__4720__auto__;
} else {
var or__4720__auto____$1 = (cljs.core._vreset_BANG_["_"]);
if(or__4720__auto____$1){
return or__4720__auto____$1;
} else {
throw cljs.core.missing_protocol("IVolatile.-vreset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.IIterable = (function (){var obj7547 = {};
return obj7547;
})();

cljs.core._iterator = (function _iterator(coll){
if((function (){var and__4708__auto__ = coll;
if(and__4708__auto__){
return coll.cljs$core$IIterable$_iterator$arity$1;
} else {
return and__4708__auto__;
}
})()){
return coll.cljs$core$IIterable$_iterator$arity$1(coll);
} else {
var x__5364__auto__ = (((coll == null))?null:coll);
return (function (){var or__4720__auto__ = (cljs.core._iterator[(function (){var G__7551 = x__5364__auto__;
return goog.typeOf(G__7551);
})()]);
if(or__4720__auto__){
return or__4720__auto__;
} else {
var or__4720__auto____$1 = (cljs.core._iterator["_"]);
if(or__4720__auto____$1){
return or__4720__auto____$1;
} else {
throw cljs.core.missing_protocol("IIterable.-iterator",coll);
}
}
})().call(null,coll);
}
});


/**
* @constructor
*/
cljs.core.StringBufferWriter = (function (sb){
this.sb = sb;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 1073741824;
})
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = (function (_,s){
var self__ = this;
var ___$1 = this;
return self__.sb.append(s);
});

cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return null;
});

cljs.core.StringBufferWriter.cljs$lang$type = true;

cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";

cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = (function (this__5307__auto__,writer__5308__auto__,opt__5309__auto__){
return cljs.core._write(writer__5308__auto__,"cljs.core/StringBufferWriter");
});

cljs.core.__GT_StringBufferWriter = (function __GT_StringBufferWriter(sb){
return (new cljs.core.StringBufferWriter(sb));
});

/**
* Support so that collections can implement toString without
* loading all the printing machinery.
*/
cljs.core.pr_str_STAR_ = (function pr_str_STAR_(obj){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,cljs.core.pr_opts());

writer.cljs$core$IWriter$_flush$arity$1(null);

return [cljs.core.str(sb)].join('');
});
cljs.core.int_rotate_left = (function int_rotate_left(x,n){
return ((x << n) | (x >>> (- n)));
});
if((typeof Math.imul !== 'undefined') && (!(((function (){var G__7554 = (4294967295);
var G__7555 = (5);
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__7554,G__7555) : Math.imul.call(null,G__7554,G__7555));
})() === (0))))){
cljs.core.imul = (function imul(a,b){
var G__7558 = a;
var G__7559 = b;
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__7558,G__7559) : Math.imul.call(null,G__7558,G__7559));
});
} else {
cljs.core.imul = (function imul(a,b){
var ah = ((a >>> (16)) & (65535));
var al = (a & (65535));
var bh = ((b >>> (16)) & (65535));
var bl = (b & (65535));
return (((al * bl) + ((((ah * bl) + (al * bh)) << (16)) >>> (0))) | (0));
});
}
cljs.core.m3_seed = (0);
cljs.core.m3_C1 = (3432918353);
cljs.core.m3_C2 = (461845907);
cljs.core.m3_mix_K1 = (function m3_mix_K1(k1){
return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1,cljs.core.m3_C1),(15)),cljs.core.m3_C2);
});
cljs.core.m3_mix_H1 = (function m3_mix_H1(h1,k1){
return (cljs.core.imul(cljs.core.int_rotate_left((h1 ^ k1),(13)),(5)) + (3864292196));
});
cljs.core.m3_fmix = (function m3_fmix(h1,len){
var h1__$1 = h1;
var h1__$2 = (h1__$1 ^ len);
var h1__$3 = (h1__$2 ^ (h1__$2 >>> (16)));
var h1__$4 = cljs.core.imul(h1__$3,(2246822507));
var h1__$5 = (h1__$4 ^ (h1__$4 >>> (13)));
var h1__$6 = cljs.core.imul(h1__$5,(3266489909));
var h1__$7 = (h1__$6 ^ (h1__$6 >>> (16)));
return h1__$7;
});
cljs.core.m3_hash_int = (function m3_hash_int(in$){
if((in$ === (0))){
return in$;
} else {
var k1 = cljs.core.m3_mix_K1(in$);
var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed,k1);
return cljs.core.m3_fmix(h1,(4));
}
});
cljs.core.m3_hash_unencoded_chars = (function m3_hash_unencoded_chars(in$){
var h1 = (function (){var i = (1);
var h1 = cljs.core.m3_seed;
while(true){
if((i < in$.length)){
var G__7560 = (i + (2));
var G__7561 = cljs.core.m3_mix_H1(h1,cljs.core.m3_mix_K1((in$.charCodeAt((i - (1))) | (in$.charCodeAt(i) << (16)))));
i = G__7560;
h1 = G__7561;
continue;
} else {
return h1;
}
break;
}
})();
var h1__$1 = ((((in$.length & (1)) === (1)))?(h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt((in$.length - (1))))):h1);
return cljs.core.m3_fmix(h1__$1,cljs.core.imul((2),in$.length));
});



cljs.core.string_hash_cache = (function (){var obj7563 = {};
return obj7563;
})();
cljs.core.string_hash_cache_count = (0);
cljs.core.hash_string_STAR_ = (function hash_string_STAR_(s){
if(!((s == null))){
var len = s.length;
if((len > (0))){
var i = (0);
var hash = (0);
while(true){
if((i < len)){
var G__7564 = (i + (1));
var G__7565 = (cljs.core.imul((31),hash) + s.charCodeAt(i));
i = G__7564;
hash = G__7565;
continue;
} else {
return hash;
}
break;
}
} else {
return (0);
}
} else {
return (0);
}
});
cljs.core.add_to_string_hash_cache = (function add_to_string_hash_cache(k){
var h = cljs.core.hash_string_STAR_(k);
(cljs.core.string_hash_cache[k] = h);

cljs.core.string_hash_cache_count = (cljs.core.string_hash_cache_count + (1));

return h;
});
cljs.core.hash_string = (function hash_string(k){
if((cljs.core.string_hash_cache_count > (255))){
cljs.core.string_hash_cache = (function (){var obj7569 = {};
return obj7569;
})();

cljs.core.string_hash_cache_count = (0);
} else {
}

var h = (cljs.core.string_hash_cache[k]);
if(typeof h === 'number'){
return h;
} else {
return cljs.core.add_to_string_hash_cache(k);
}
});
cljs.core.hash = (function hash(o){
if((function (){var G__7572 = o;
if(G__7572){
var bit__5394__auto__ = (G__7572.cljs$lang$protocol_mask$partition0$ & (4194304));
if((bit__5394__auto__) || (G__7572.cljs$core$IHash$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(null);
} else {
if(typeof o === 'number'){
return ((function (){var G__7573 = o;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__7573) : Math.floor.call(null,G__7573));
})() % (2147483647));
} else {
if(o === true){
return (1);
} else {
if(o === false){
return (0);
} else {
if(typeof o === 'string'){
return cljs.core.m3_hash_int(cljs.core.hash_string(o));
} else {
if((o instanceof Date)){
return o.valueOf();
} else {
if((o == null)){
return (0);
} else {
return cljs.core._hash(o);

}
}
}
}
}
}
}
});
cljs.core.hash_combine = (function hash_combine(seed,hash){
return (seed ^ (((hash + (2654435769)) + (seed << (6))) + (seed >> (2))));
});
cljs.core.instance_QMARK_ = (function instance_QMARK_(t,o){
return (o instanceof t);
});
cljs.core.symbol_QMARK_ = (function symbol_QMARK_(x){
return (x instanceof cljs.core.Symbol);
});
cljs.core.hash_symbol = (function hash_symbol(sym){
return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name),cljs.core.hash_string(sym.ns));
});
cljs.core.compare_symbols = (function compare_symbols(a,b){
if((a.str === b.str)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__4708__auto__ = cljs.core.not(a.ns);
if(and__4708__auto__){
return b.ns;
} else {
return and__4708__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__7580 = a.ns;
var G__7581 = b.ns;
return goog.array.defaultCompare(G__7580,G__7581);
})();
if(((0) === nsc)){
var G__7582 = a.name;
var G__7583 = b.name;
return goog.array.defaultCompare(G__7582,G__7583);
} else {
return nsc;
}
}
} else {
var G__7584 = a.name;
var G__7585 = b.name;
return goog.array.defaultCompare(G__7584,G__7585);

}
}
}
});

/**
* @constructor
*/
cljs.core.Symbol = (function (ns,name,str,_hash,_meta){
this.ns = ns;
this.name = name;
this.str = str;
this._hash = _hash;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 2154168321;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,self__.str);
});

cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = (function (sym){
var self__ = this;
var sym__$1 = this;
var h__5141__auto__ = self__._hash;
if(!((h__5141__auto__ == null))){
return h__5141__auto__;
} else {
var h__5141__auto____$1 = cljs.core.hash_symbol(sym__$1);
self__._hash = h__5141__auto____$1;

return h__5141__auto____$1;
}
});

cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Symbol(self__.ns,self__.name,self__.str,self__._hash,new_meta));
});

cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Symbol.prototype.call = (function() {
var G__7587 = null;
var G__7587__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});
var G__7587__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});
G__7587 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__7587__2.call(this,self__,coll);
case 3:
return G__7587__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__7587.cljs$core$IFn$_invoke$arity$2 = G__7587__2;
G__7587.cljs$core$IFn$_invoke$arity$3 = G__7587__3;
return G__7587;
})()
;

cljs.core.Symbol.prototype.apply = (function (self__,args7586){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args7586)));
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});

cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Symbol)){
return (self__.str === other.str);
} else {
return false;
}
});

cljs.core.Symbol.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.str;
});

cljs.core.Symbol.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Symbol.cljs$lang$type = true;

cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";

cljs.core.Symbol.cljs$lang$ctorPrWriter = (function (this__5307__auto__,writer__5308__auto__,opt__5309__auto__){
return cljs.core._write(writer__5308__auto__,"cljs.core/Symbol");
});

cljs.core.__GT_Symbol = (function __GT_Symbol(ns,name,str,_hash,_meta){
return (new cljs.core.Symbol(ns,name,str,_hash,_meta));
});

cljs.core.symbol = (function() {
var symbol = null;
var symbol__1 = (function (name){
if((name instanceof cljs.core.Symbol)){
return name;
} else {
return symbol.cljs$core$IFn$_invoke$arity$2(null,name);
}
});
var symbol__2 = (function (ns,name){
var sym_str = ((!((ns == null)))?[cljs.core.str(ns),cljs.core.str("/"),cljs.core.str(name)].join(''):name);
return (new cljs.core.Symbol(ns,name,sym_str,null,null));
});
symbol = function(ns,name){
switch(arguments.length){
case 1:
return symbol__1.call(this,ns);
case 2:
return symbol__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
return symbol;
})()
;

/**
* @constructor
*/
cljs.core.Var = (function (val,sym,_meta){
this.val = val;
this.sym = sym;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 163841;
})
cljs.core.Var.prototype.call = (function() {
var G__7635 = null;
var G__7635__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});
var G__7635__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});
var G__7635__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});
var G__7635__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});
var G__7635__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});
var G__7635__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});
var G__7635__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});
var G__7635__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});
var G__7635__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});
var G__7635__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});
var G__7635__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});
var G__7635__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});
var G__7635__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});
var G__7635__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});
var G__7635__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});
var G__7635__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});
var G__7635__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});
var G__7635__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});
var G__7635__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});
var G__7635__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});
var G__7635__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});
var G__7635__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7591 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__7592 = a;
var G__7593 = b;
var G__7594 = c;
var G__7595 = d;
var G__7596 = e;
var G__7597 = f;
var G__7598 = g;
var G__7599 = h;
var G__7600 = i;
var G__7601 = j;
var G__7602 = k;
var G__7603 = l;
var G__7604 = m;
var G__7605 = n;
var G__7606 = o;
var G__7607 = p;
var G__7608 = q;
var G__7609 = r;
var G__7610 = s;
var G__7611 = t;
var G__7612 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__7591,G__7592,G__7593,G__7594,G__7595,G__7596,G__7597,G__7598,G__7599,G__7600,G__7601,G__7602,G__7603,G__7604,G__7605,G__7606,G__7607,G__7608,G__7609,G__7610,G__7611,G__7612) : cljs.core.apply.call(null,G__7591,G__7592,G__7593,G__7594,G__7595,G__7596,G__7597,G__7598,G__7599,G__7600,G__7601,G__7602,G__7603,G__7604,G__7605,G__7606,G__7607,G__7608,G__7609,G__7610,G__7611,G__7612));
});
G__7635 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__7635__1.call(this,self__);
case 2:
return G__7635__2.call(this,self__,a);
case 3:
return G__7635__3.call(this,self__,a,b);
case 4:
return G__7635__4.call(this,self__,a,b,c);
case 5:
return G__7635__5.call(this,self__,a,b,c,d);
case 6:
return G__7635__6.call(this,self__,a,b,c,d,e);
case 7:
return G__7635__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__7635__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__7635__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__7635__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__7635__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__7635__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__7635__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__7635__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__7635__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__7635__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__7635__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__7635__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__7635__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__7635__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__7635__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__7635__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__7635.cljs$core$IFn$_invoke$arity$1 = G__7635__1;
G__7635.cljs$core$IFn$_invoke$arity$2 = G__7635__2;
G__7635.cljs$core$IFn$_invoke$arity$3 = G__7635__3;
G__7635.cljs$core$IFn$_invoke$arity$4 = G__7635__4;
G__7635.cljs$core$IFn$_invoke$arity$5 = G__7635__5;
G__7635.cljs$core$IFn$_invoke$arity$6 = G__7635__6;
G__7635.cljs$core$IFn$_invoke$arity$7 = G__7635__7;
G__7635.cljs$core$IFn$_invoke$arity$8 = G__7635__8;
G__7635.cljs$core$IFn$_invoke$arity$9 = G__7635__9;
G__7635.cljs$core$IFn$_invoke$arity$10 = G__7635__10;
G__7635.cljs$core$IFn$_invoke$arity$11 = G__7635__11;
G__7635.cljs$core$IFn$_invoke$arity$12 = G__7635__12;
G__7635.cljs$core$IFn$_invoke$arity$13 = G__7635__13;
G__7635.cljs$core$IFn$_invoke$arity$14 = G__7635__14;
G__7635.cljs$core$IFn$_invoke$arity$15 = G__7635__15;
G__7635.cljs$core$IFn$_invoke$arity$16 = G__7635__16;
G__7635.cljs$core$IFn$_invoke$arity$17 = G__7635__17;
G__7635.cljs$core$IFn$_invoke$arity$18 = G__7635__18;
G__7635.cljs$core$IFn$_invoke$arity$19 = G__7635__19;
G__7635.cljs$core$IFn$_invoke$arity$20 = G__7635__20;
G__7635.cljs$core$IFn$_invoke$arity$21 = G__7635__21;
G__7635.cljs$core$IFn$_invoke$arity$22 = G__7635__22;
return G__7635;
})()
;

cljs.core.Var.prototype.apply = (function (self__,args7590){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args7590)));
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__7613 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__7614 = a;
var G__7615 = b;
var G__7616 = c;
var G__7617 = d;
var G__7618 = e;
var G__7619 = f;
var G__7620 = g;
var G__7621 = h;
var G__7622 = i;
var G__7623 = j;
var G__7624 = k;
var G__7625 = l;
var G__7626 = m;
var G__7627 = n;
var G__7628 = o;
var G__7629 = p;
var G__7630 = q;
var G__7631 = r;
var G__7632 = s;
var G__7633 = t;
var G__7634 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__7613,G__7614,G__7615,G__7616,G__7617,G__7618,G__7619,G__7620,G__7621,G__7622,G__7623,G__7624,G__7625,G__7626,G__7627,G__7628,G__7629,G__7630,G__7631,G__7632,G__7633,G__7634) : cljs.core.apply.call(null,G__7613,G__7614,G__7615,G__7616,G__7617,G__7618,G__7619,G__7620,G__7621,G__7622,G__7623,G__7624,G__7625,G__7626,G__7627,G__7628,G__7629,G__7630,G__7631,G__7632,G__7633,G__7634));
});

cljs.core.Var.prototype.cljs$core$Fn$ = true;

cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
});

cljs.core.Var.cljs$lang$type = true;

cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";

cljs.core.Var.cljs$lang$ctorPrWriter = (function (this__5307__auto__,writer__5308__auto__,opt__5309__auto__){
return cljs.core._write(writer__5308__auto__,"cljs.core/Var");
});

cljs.core.__GT_Var = (function __GT_Var(val,sym,_meta){
return (new cljs.core.Var(val,sym,_meta));
});



cljs.core.iterable_QMARK_ = (function iterable_QMARK_(x){
var G__7637 = x;
if(G__7637){
var bit__5401__auto__ = null;
if(cljs.core.truth_((function (){var or__4720__auto__ = bit__5401__auto__;
if(cljs.core.truth_(or__4720__auto__)){
return or__4720__auto__;
} else {
return G__7637.cljs$core$IIterable$;
}
})())){
return true;
} else {
if((!G__7637.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__7637);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__7637);
}
});
cljs.core.clone = (function clone(value){
return cljs.core._clone(value);
});
cljs.core.cloneable_QMARK_ = (function cloneable_QMARK_(value){
var G__7639 = value;
if(G__7639){
var bit__5401__auto__ = (G__7639.cljs$lang$protocol_mask$partition1$ & (8192));
if((bit__5401__auto__) || (G__7639.cljs$core$ICloneable$)){
return true;
} else {
if((!G__7639.cljs$lang$protocol_mask$partition1$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__7639);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__7639);
}
});
/**
* Returns a seq on the collection. If the collection is
* empty, returns nil.  (seq nil) returns nil. seq also works on
* Strings.
*/
cljs.core.seq = (function seq(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__7641 = coll;
if(G__7641){
var bit__5394__auto__ = (G__7641.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__5394__auto__) || (G__7641.cljs$core$ISeqable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeqable$_seq$arity$1(null);
} else {
if(coll instanceof Array){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(typeof coll === 'string'){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,coll)){
return cljs.core._seq(coll);
} else {
throw (new Error([cljs.core.str(coll),cljs.core.str(" is not ISeqable")].join('')));

}
}
}
}
}
});
/**
* Returns the first item in the collection. Calls seq on its
* argument. If coll is nil, returns nil.
*/
cljs.core.first = (function first(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__7643 = coll;
if(G__7643){
var bit__5394__auto__ = (G__7643.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__5394__auto__) || (G__7643.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if((s == null)){
return null;
} else {
return cljs.core._first(s);
}
}
}
});
/**
* Returns a possibly empty seq of the items after the first. Calls seq on its
* argument.
*/
cljs.core.rest = (function rest(coll){
if(!((coll == null))){
if((function (){var G__7645 = coll;
if(G__7645){
var bit__5394__auto__ = (G__7645.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__5394__auto__) || (G__7645.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if(s){
return cljs.core._rest(s);
} else {
return cljs.core.List.EMPTY;
}
}
} else {
return cljs.core.List.EMPTY;
}
});
/**
* Returns a seq of the items after the first. Calls seq on its
* argument.  If there are no more items, returns nil
*/
cljs.core.next = (function next(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__7647 = coll;
if(G__7647){
var bit__5394__auto__ = (G__7647.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__5394__auto__) || (G__7647.cljs$core$INext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$INext$_next$arity$1(null);
} else {
return cljs.core.seq(cljs.core.rest(coll));
}
}
});
/**
* Equality. Returns true if x equals y, false if not. Compares
* numbers and collections in a type-independent manner.  Clojure's immutable data
* structures define -equiv (and thus =) as a value, not an identity,
* comparison.
* @param {...*} var_args
*/
cljs.core._EQ_ = (function() {
var _EQ_ = null;
var _EQ___1 = (function (x){
return true;
});
var _EQ___2 = (function (x,y){
if((x == null)){
return (y == null);
} else {
return ((x === y)) || (cljs.core._equiv(x,y));
}
});
var _EQ___3 = (function() { 
var G__7652__delegate = function (x,y,more){
while(true){
if(_EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__7653 = y;
var G__7654 = cljs.core.first(more);
var G__7655 = cljs.core.next(more);
x = G__7653;
y = G__7654;
more = G__7655;
continue;
} else {
return _EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__7652 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7656__i = 0, G__7656__a = new Array(arguments.length -  2);
while (G__7656__i < G__7656__a.length) {G__7656__a[G__7656__i] = arguments[G__7656__i + 2]; ++G__7656__i;}
  more = new cljs.core.IndexedSeq(G__7656__a,0);
} 
return G__7652__delegate.call(this,x,y,more);};
G__7652.cljs$lang$maxFixedArity = 2;
G__7652.cljs$lang$applyTo = (function (arglist__7657){
var x = cljs.core.first(arglist__7657);
arglist__7657 = cljs.core.next(arglist__7657);
var y = cljs.core.first(arglist__7657);
var more = cljs.core.rest(arglist__7657);
return G__7652__delegate(x,y,more);
});
G__7652.cljs$core$IFn$_invoke$arity$variadic = G__7652__delegate;
return G__7652;
})()
;
_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ___1.call(this,x);
case 2:
return _EQ___2.call(this,x,y);
default:
var G__7658 = null;
if (arguments.length > 2) {
var G__7659__i = 0, G__7659__a = new Array(arguments.length -  2);
while (G__7659__i < G__7659__a.length) {G__7659__a[G__7659__i] = arguments[G__7659__i + 2]; ++G__7659__i;}
G__7658 = new cljs.core.IndexedSeq(G__7659__a,0);
}
return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7658);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ_.cljs$lang$maxFixedArity = 2;
_EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
_EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
_EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
_EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ_;
})()
;

/**
* @constructor
*/
cljs.core.ES6Iterator = (function (s){
this.s = s;
})
cljs.core.ES6Iterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": x};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6Iterator.cljs$lang$type = true;

cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";

cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = (function (this__5307__auto__,writer__5308__auto__,opt__5309__auto__){
return cljs.core._write(writer__5308__auto__,"cljs.core/ES6Iterator");
});

cljs.core.__GT_ES6Iterator = (function __GT_ES6Iterator(s){
return (new cljs.core.ES6Iterator(s));
});

cljs.core.es6_iterator = (function es6_iterator(coll){
return (new cljs.core.ES6Iterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6IteratorSeq = (function (value,iter,_rest){
this.value = value;
this.iter = iter;
this._rest = _rest;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 8388672;
})
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.value;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if((self__._rest == null)){
self__._rest = (function (){var G__7660 = self__.iter;
return (cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__7660) : cljs.core.es6_iterator_seq.call(null,G__7660));
})();
} else {
}

return self__._rest;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ES6IteratorSeq.cljs$lang$type = true;

cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";

cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = (function (this__5307__auto__,writer__5308__auto__,opt__5309__auto__){
return cljs.core._write(writer__5308__auto__,"cljs.core/ES6IteratorSeq");
});

cljs.core.__GT_ES6IteratorSeq = (function __GT_ES6IteratorSeq(value,iter,_rest){
return (new cljs.core.ES6IteratorSeq(value,iter,_rest));
});

cljs.core.es6_iterator_seq = (function es6_iterator_seq(iter){
var v = iter.next();
if(cljs.core.truth_(v.done)){
return cljs.core.List.EMPTY;
} else {
return (new cljs.core.ES6IteratorSeq(v.value,iter,null));
}
});
/**
* Mix final collection hash for ordered or unordered collections.
* hash-basis is the combined collection hash, count is the number
* of elements included in the basis. Note this is the hash code
* consistent with =, different from .hashCode.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.mix_collection_hash = (function mix_collection_hash(hash_basis,count){
var h1 = cljs.core.m3_seed;
var k1 = cljs.core.m3_mix_K1(hash_basis);
var h1__$1 = cljs.core.m3_mix_H1(h1,k1);
return cljs.core.m3_fmix(h1__$1,count);
});
/**
* Returns the hash code, consistent with =, for an external ordered
* collection implementing Iterable.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_ordered_coll = (function hash_ordered_coll(coll){
var n = (0);
var hash_code = (1);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__7661 = (n + (1));
var G__7662 = ((cljs.core.imul((31),hash_code) + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__7663 = cljs.core.next(coll__$1);
n = G__7661;
hash_code = G__7662;
coll__$1 = G__7663;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash((1),(0));
/**
* Returns the hash code, consistent with =, for an external unordered
* collection implementing Iterable. For maps, the iterator should
* return map entries whose hash is computed as
* (hash-ordered-coll [k v]).
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_unordered_coll = (function hash_unordered_coll(coll){
var n = (0);
var hash_code = (0);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__7664 = (n + (1));
var G__7665 = ((hash_code + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__7666 = cljs.core.next(coll__$1);
n = G__7664;
hash_code = G__7665;
coll__$1 = G__7666;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash((0),(0));


(cljs.core.ICounted["null"] = true);

(cljs.core._count["null"] = (function (_){
return (0);
}));
Date.prototype.cljs$core$IEquiv$ = true;

Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var o__$1 = this;
return ((other instanceof Date)) && ((o__$1.toString() === other.toString()));
});
(cljs.core.IEquiv["number"] = true);

(cljs.core._equiv["number"] = (function (x,o){
return (x === o);
}));
(cljs.core.IMeta["function"] = true);

(cljs.core._meta["function"] = (function (_){
return null;
}));

(cljs.core.Fn["function"] = true);
(cljs.core.IHash["_"] = true);

(cljs.core._hash["_"] = (function (o){
var G__7667 = o;
return goog.getUid(G__7667);
}));
/**
* Returns a number one greater than num.
*/
cljs.core.inc = (function inc(x){
return (x + (1));
});

/**
* @constructor
*/
cljs.core.Reduced = (function (val){
this.val = val;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = (function (o){
var self__ = this;
var o__$1 = this;
return self__.val;
});

cljs.core.Reduced.cljs$lang$type = true;

cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";

cljs.core.Reduced.cljs$lang$ctorPrWriter = (function (this__5307__auto__,writer__5308__auto__,opt__5309__auto__){
return cljs.core._write(writer__5308__auto__,"cljs.core/Reduced");
});

cljs.core.__GT_Reduced = (function __GT_Reduced(val){
return (new cljs.core.Reduced(val));
});

/**
* Wraps x in a way such that a reduce will terminate with the value x
*/
cljs.core.reduced = (function reduced(x){
return (new cljs.core.Reduced(x));
});
/**
* Returns true if x is the result of a call to reduced
*/
cljs.core.reduced_QMARK_ = (function reduced_QMARK_(r){
return (r instanceof cljs.core.Reduced);
});
/**
* If x is already reduced?, returns it, else returns (reduced x)
*/
cljs.core.ensure_reduced = (function ensure_reduced(x){
if(cljs.core.reduced_QMARK_(x)){
return x;
} else {
return cljs.core.reduced(x);
}
});
/**
* If x is reduced?, returns (deref x), else returns x
*/
cljs.core.unreduced = (function unreduced(x){
if(cljs.core.reduced_QMARK_(x)){
var G__7669 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__7669) : cljs.core.deref.call(null,G__7669));
} else {
return x;
}
});
cljs.core.deref = (function deref(o){
return cljs.core._deref(o);
});
/**
* Accepts any collection which satisfies the ICount and IIndexed protocols and
* reduces them without incurring seq initialization
*/
cljs.core.ci_reduce = (function() {
var ci_reduce = null;
var ci_reduce__2 = (function (cicoll,f){
var cnt = cljs.core._count(cicoll);
if((cnt === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,(0));
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__7676 = val;
var G__7677 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7676,G__7677) : f.call(null,G__7676,G__7677));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__7682 = nval;
var G__7683 = (n + (1));
val = G__7682;
n = G__7683;
continue;
}
} else {
return val;
}
break;
}
}
});
var ci_reduce__3 = (function (cicoll,f,val){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__7678 = val__$1;
var G__7679 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7678,G__7679) : f.call(null,G__7678,G__7679));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__7684 = nval;
var G__7685 = (n + (1));
val__$1 = G__7684;
n = G__7685;
continue;
}
} else {
return val__$1;
}
break;
}
});
var ci_reduce__4 = (function (cicoll,f,val,idx){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__7680 = val__$1;
var G__7681 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7680,G__7681) : f.call(null,G__7680,G__7681));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__7686 = nval;
var G__7687 = (n + (1));
val__$1 = G__7686;
n = G__7687;
continue;
}
} else {
return val__$1;
}
break;
}
});
ci_reduce = function(cicoll,f,val,idx){
switch(arguments.length){
case 2:
return ci_reduce__2.call(this,cicoll,f);
case 3:
return ci_reduce__3.call(this,cicoll,f,val);
case 4:
return ci_reduce__4.call(this,cicoll,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
return ci_reduce;
})()
;
cljs.core.array_reduce = (function() {
var array_reduce = null;
var array_reduce__2 = (function (arr,f){
var cnt = arr.length;
if((arr.length === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = (arr[(0)]);
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__7694 = val;
var G__7695 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7694,G__7695) : f.call(null,G__7694,G__7695));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__7700 = nval;
var G__7701 = (n + (1));
val = G__7700;
n = G__7701;
continue;
}
} else {
return val;
}
break;
}
}
});
var array_reduce__3 = (function (arr,f,val){
var cnt = arr.length;
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__7696 = val__$1;
var G__7697 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7696,G__7697) : f.call(null,G__7696,G__7697));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__7702 = nval;
var G__7703 = (n + (1));
val__$1 = G__7702;
n = G__7703;
continue;
}
} else {
return val__$1;
}
break;
}
});
var array_reduce__4 = (function (arr,f,val,idx){
var cnt = arr.length;
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__7698 = val__$1;
var G__7699 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7698,G__7699) : f.call(null,G__7698,G__7699));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__7704 = nval;
var G__7705 = (n + (1));
val__$1 = G__7704;
n = G__7705;
continue;
}
} else {
return val__$1;
}
break;
}
});
array_reduce = function(arr,f,val,idx){
switch(arguments.length){
case 2:
return array_reduce__2.call(this,arr,f);
case 3:
return array_reduce__3.call(this,arr,f,val);
case 4:
return array_reduce__4.call(this,arr,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
return array_reduce;
})()
;



/**
* Returns true if coll implements count in constant time
*/
cljs.core.counted_QMARK_ = (function counted_QMARK_(x){
var G__7707 = x;
if(G__7707){
var bit__5401__auto__ = (G__7707.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__5401__auto__) || (G__7707.cljs$core$ICounted$)){
return true;
} else {
if((!G__7707.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__7707);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__7707);
}
});
/**
* Returns true if coll implements nth in constant time
*/
cljs.core.indexed_QMARK_ = (function indexed_QMARK_(x){
var G__7709 = x;
if(G__7709){
var bit__5401__auto__ = (G__7709.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__5401__auto__) || (G__7709.cljs$core$IIndexed$)){
return true;
} else {
if((!G__7709.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__7709);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__7709);
}
});

/**
* @constructor
*/
cljs.core.IndexedSeqIterator = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.IndexedSeqIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.IndexedSeqIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.IndexedSeqIterator.cljs$lang$type = true;

cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";

cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = (function (this__5307__auto__,writer__5308__auto__,opt__5309__auto__){
return cljs.core._write(writer__5308__auto__,"cljs.core/IndexedSeqIterator");
});

cljs.core.__GT_IndexedSeqIterator = (function __GT_IndexedSeqIterator(arr,i){
return (new cljs.core.IndexedSeqIterator(arr,i));
});


/**
* @constructor
*/
cljs.core.IndexedSeq = (function (arr,i){
this.arr = arr;
this.i = i;
this.cljs$lang$protocol_mask$partition0$ = 166199550;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.IndexedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.IndexedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return not_found;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.IndexedSeqIterator(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.IndexedSeq(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr.length - self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var c = cljs.core._count(coll__$1);
if((c > (0))){
return (new cljs.core.RSeq(coll__$1,(c - (1)),null));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__7710 = coll__$1;
var G__7711 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__7710,G__7711) : cljs.core.equiv_sequential.call(null,G__7710,G__7711));
});

cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.i]),(self__.i + (1)));
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr[self__.i]);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__7712 = o;
var G__7713 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__7712,G__7713) : cljs.core.cons.call(null,G__7712,G__7713));
});

cljs.core.IndexedSeq.cljs$lang$type = true;

cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";

cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = (function (this__5307__auto__,writer__5308__auto__,opt__5309__auto__){
return cljs.core._write(writer__5308__auto__,"cljs.core/IndexedSeq");
});

cljs.core.__GT_IndexedSeq = (function __GT_IndexedSeq(arr,i){
return (new cljs.core.IndexedSeq(arr,i));
});

(cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5698__auto__ = this;
return cljs.core.es6_iterator(this__5698__auto__);
}));
cljs.core.prim_seq = (function() {
var prim_seq = null;
var prim_seq__1 = (function (prim){
return prim_seq.cljs$core$IFn$_invoke$arity$2(prim,(0));
});
var prim_seq__2 = (function (prim,i){
if((i < prim.length)){
return (new cljs.core.IndexedSeq(prim,i));
} else {
return null;
}
});
prim_seq = function(prim,i){
switch(arguments.length){
case 1:
return prim_seq__1.call(this,prim);
case 2:
return prim_seq__2.call(this,prim,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
return prim_seq;
})()
;
cljs.core.array_seq = (function() {
var array_seq = null;
var array_seq__1 = (function (array){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,(0));
});
var array_seq__2 = (function (array,i){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,i);
});
array_seq = function(array,i){
switch(arguments.length){
case 1:
return array_seq__1.call(this,array);
case 2:
return array_seq__2.call(this,array,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
return array_seq;
})()
;


/**
* @constructor
*/
cljs.core.RSeq = (function (ci,i,meta){
this.ci = ci;
this.i = i;
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.RSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.RSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,self__.meta));
});

cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return null;
}
});

cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.i + (1));
});

cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__7716 = coll__$1;
var G__7717 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__7716,G__7717) : cljs.core.equiv_sequential.call(null,G__7716,G__7717));
});

cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__7718 = cljs.core.List.EMPTY;
var G__7719 = self__.meta;
return (cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__7718,G__7719) : cljs.core.with_meta.call(null,G__7718,G__7719));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (col,f){
var self__ = this;
var col__$1 = this;
var G__7720 = f;
var G__7721 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__7720,G__7721) : cljs.core.seq_reduce.call(null,G__7720,G__7721));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (col,f,start){
var self__ = this;
var col__$1 = this;
var G__7722 = f;
var G__7723 = start;
var G__7724 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__7722,G__7723,G__7724) : cljs.core.seq_reduce.call(null,G__7722,G__7723,G__7724));
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci,self__.i);
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,new_meta));
});

cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__7725 = o;
var G__7726 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__7725,G__7726) : cljs.core.cons.call(null,G__7725,G__7726));
});

cljs.core.RSeq.cljs$lang$type = true;

cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";

cljs.core.RSeq.cljs$lang$ctorPrWriter = (function (this__5307__auto__,writer__5308__auto__,opt__5309__auto__){
return cljs.core._write(writer__5308__auto__,"cljs.core/RSeq");
});

cljs.core.__GT_RSeq = (function __GT_RSeq(ci,i,meta){
return (new cljs.core.RSeq(ci,i,meta));
});

(cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5698__auto__ = this;
return cljs.core.es6_iterator(this__5698__auto__);
}));
/**
* Same as (first (next x))
*/
cljs.core.second = (function second(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (first (first x))
*/
cljs.core.ffirst = (function ffirst(coll){
return cljs.core.first(cljs.core.first(coll));
});
/**
* Same as (next (first x))
*/
cljs.core.nfirst = (function nfirst(coll){
return cljs.core.next(cljs.core.first(coll));
});
/**
* Same as (first (next x))
*/
cljs.core.fnext = (function fnext(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (next (next x))
*/
cljs.core.nnext = (function nnext(coll){
return cljs.core.next(cljs.core.next(coll));
});
/**
* Return the last item in coll, in linear time
*/
cljs.core.last = (function last(s){
while(true){
var sn = cljs.core.next(s);
if(!((sn == null))){
var G__7727 = sn;
s = G__7727;
continue;
} else {
return cljs.core.first(s);
}
break;
}
});
(cljs.core.IEquiv["_"] = true);

(cljs.core._equiv["_"] = (function (x,o){
return (x === o);
}));
/**
* conj[oin]. Returns a new collection with the xs
* 'added'. (conj nil item) returns (item).  The 'addition' may
* happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj = (function() {
var conj = null;
var conj__0 = (function (){
return cljs.core.PersistentVector.EMPTY;
});
var conj__1 = (function (coll){
return coll;
});
var conj__2 = (function (coll,x){
if(!((coll == null))){
return cljs.core._conj(coll,x);
} else {
return cljs.core._conj(cljs.core.List.EMPTY,x);
}
});
var conj__3 = (function() { 
var G__7732__delegate = function (coll,x,xs){
while(true){
if(cljs.core.truth_(xs)){
var G__7733 = conj.cljs$core$IFn$_invoke$arity$2(coll,x);
var G__7734 = cljs.core.first(xs);
var G__7735 = cljs.core.next(xs);
coll = G__7733;
x = G__7734;
xs = G__7735;
continue;
} else {
return conj.cljs$core$IFn$_invoke$arity$2(coll,x);
}
break;
}
};
var G__7732 = function (coll,x,var_args){
var xs = null;
if (arguments.length > 2) {
var G__7736__i = 0, G__7736__a = new Array(arguments.length -  2);
while (G__7736__i < G__7736__a.length) {G__7736__a[G__7736__i] = arguments[G__7736__i + 2]; ++G__7736__i;}
  xs = new cljs.core.IndexedSeq(G__7736__a,0);
} 
return G__7732__delegate.call(this,coll,x,xs);};
G__7732.cljs$lang$maxFixedArity = 2;
G__7732.cljs$lang$applyTo = (function (arglist__7737){
var coll = cljs.core.first(arglist__7737);
arglist__7737 = cljs.core.next(arglist__7737);
var x = cljs.core.first(arglist__7737);
var xs = cljs.core.rest(arglist__7737);
return G__7732__delegate(coll,x,xs);
});
G__7732.cljs$core$IFn$_invoke$arity$variadic = G__7732__delegate;
return G__7732;
})()
;
conj = function(coll,x,var_args){
var xs = var_args;
switch(arguments.length){
case 0:
return conj__0.call(this);
case 1:
return conj__1.call(this,coll);
case 2:
return conj__2.call(this,coll,x);
default:
var G__7738 = null;
if (arguments.length > 2) {
var G__7739__i = 0, G__7739__a = new Array(arguments.length -  2);
while (G__7739__i < G__7739__a.length) {G__7739__a[G__7739__i] = arguments[G__7739__i + 2]; ++G__7739__i;}
G__7738 = new cljs.core.IndexedSeq(G__7739__a,0);
}
return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll,x, G__7738);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj.cljs$lang$maxFixedArity = 2;
conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
return conj;
})()
;
/**
* Returns an empty collection of the same category as coll, or nil
*/
cljs.core.empty = (function empty(coll){
if((coll == null)){
return null;
} else {
return cljs.core._empty(coll);
}
});
cljs.core.accumulating_seq_count = (function accumulating_seq_count(coll){
var s = cljs.core.seq(coll);
var acc = (0);
while(true){
if(cljs.core.counted_QMARK_(s)){
return (acc + cljs.core._count(s));
} else {
var G__7740 = cljs.core.next(s);
var G__7741 = (acc + (1));
s = G__7740;
acc = G__7741;
continue;
}
break;
}
});
/**
* Returns the number of items in the collection. (count nil) returns
* 0.  Also works on strings, arrays, and Maps
*/
cljs.core.count = (function count(coll){
if(!((coll == null))){
if((function (){var G__7743 = coll;
if(G__7743){
var bit__5394__auto__ = (G__7743.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__5394__auto__) || (G__7743.cljs$core$ICounted$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(null);
} else {
if(coll instanceof Array){
return coll.length;
} else {
if(typeof coll === 'string'){
return coll.length;
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,coll)){
return cljs.core._count(coll);
} else {
return cljs.core.accumulating_seq_count(coll);

}
}
}
}
} else {
return (0);
}
});
cljs.core.linear_traversal_nth = (function() {
var linear_traversal_nth = null;
var linear_traversal_nth__2 = (function (coll,n){
while(true){
if((coll == null)){
throw (new Error("Index out of bounds"));
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
throw (new Error("Index out of bounds"));
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if(cljs.core.seq(coll)){
var G__7744 = cljs.core.next(coll);
var G__7745 = (n - (1));
coll = G__7744;
n = G__7745;
continue;
} else {
throw (new Error("Index out of bounds"));

}
}
}
}
break;
}
});
var linear_traversal_nth__3 = (function (coll,n,not_found){
while(true){
if((coll == null)){
return not_found;
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
return not_found;
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
if(cljs.core.seq(coll)){
var G__7746 = cljs.core.next(coll);
var G__7747 = (n - (1));
var G__7748 = not_found;
coll = G__7746;
n = G__7747;
not_found = G__7748;
continue;
} else {
return not_found;

}
}
}
}
break;
}
});
linear_traversal_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return linear_traversal_nth__2.call(this,coll,n);
case 3:
return linear_traversal_nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
return linear_traversal_nth;
})()
;
/**
* Returns the value at the index. get returns nil if index out of
* bounds, nth throws an exception unless not-found is supplied.  nth
* also works for strings, arrays, regex Matchers and Lists, and,
* in O(n) time, for sequences.
*/
cljs.core.nth = (function() {
var nth = null;
var nth__2 = (function (coll,n){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number"));
} else {
if((coll == null)){
return coll;
} else {
if((function (){var G__7753 = coll;
if(G__7753){
var bit__5394__auto__ = (G__7753.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__5394__auto__) || (G__7753.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(null,n);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__7754 = coll;
if(G__7754){
var bit__5401__auto__ = (G__7754.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__5401__auto__) || (G__7754.cljs$core$ISeq$)){
return true;
} else {
if((!G__7754.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__7754);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__7754);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
var nth__3 = (function (coll,n,not_found){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number."));
} else {
if((coll == null)){
return not_found;
} else {
if((function (){var G__7755 = coll;
if(G__7755){
var bit__5394__auto__ = (G__7755.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__5394__auto__) || (G__7755.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(null,n,not_found);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__7756 = coll;
if(G__7756){
var bit__5401__auto__ = (G__7756.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__5401__auto__) || (G__7756.cljs$core$ISeq$)){
return true;
} else {
if((!G__7756.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__7756);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__7756);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return nth__2.call(this,coll,n);
case 3:
return nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
return nth;
})()
;
/**
* Returns the nth rest of coll, coll when n is 0.
*/
cljs.core.nthrest = (function nthrest(coll,n){
var n__$1 = n;
var xs = coll;
while(true){
if(((n__$1 > (0))) && (cljs.core.seq(xs))){
var G__7757 = (n__$1 - (1));
var G__7758 = cljs.core.rest(xs);
n__$1 = G__7757;
xs = G__7758;
continue;
} else {
return xs;
}
break;
}
});
/**
* Returns the value mapped to key, not-found or nil if key not present.
*/
cljs.core.get = (function() {
var get = null;
var get__2 = (function (o,k){
if((o == null)){
return null;
} else {
if((function (){var G__7761 = o;
if(G__7761){
var bit__5394__auto__ = (G__7761.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__5394__auto__) || (G__7761.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(null,k);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o,k);
} else {
return null;

}
}
}
}
}
});
var get__3 = (function (o,k,not_found){
if(!((o == null))){
if((function (){var G__7762 = o;
if(G__7762){
var bit__5394__auto__ = (G__7762.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__5394__auto__) || (G__7762.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o,k,not_found);
} else {
return not_found;

}
}
}
}
} else {
return not_found;
}
});
get = function(o,k,not_found){
switch(arguments.length){
case 2:
return get__2.call(this,o,k);
case 3:
return get__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get.cljs$core$IFn$_invoke$arity$2 = get__2;
get.cljs$core$IFn$_invoke$arity$3 = get__3;
return get;
})()
;
/**
* assoc[iate]. When applied to a map, returns a new map of the
* same (hashed/sorted) type, that contains the mapping of key(s) to
* val(s). When applied to a vector, returns a new vector that
* contains val at index.
* @param {...*} var_args
*/
cljs.core.assoc = (function() {
var assoc = null;
var assoc__3 = (function (coll,k,v){
if(!((coll == null))){
return cljs.core._assoc(coll,k,v);
} else {
return cljs.core.PersistentHashMap.fromArrays([k],[v]);
}
});
var assoc__4 = (function() { 
var G__7766__delegate = function (coll,k,v,kvs){
while(true){
var ret = assoc.cljs$core$IFn$_invoke$arity$3(coll,k,v);
if(cljs.core.truth_(kvs)){
var G__7767 = ret;
var G__7768 = cljs.core.first(kvs);
var G__7769 = cljs.core.second(kvs);
var G__7770 = cljs.core.nnext(kvs);
coll = G__7767;
k = G__7768;
v = G__7769;
kvs = G__7770;
continue;
} else {
return ret;
}
break;
}
};
var G__7766 = function (coll,k,v,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__7771__i = 0, G__7771__a = new Array(arguments.length -  3);
while (G__7771__i < G__7771__a.length) {G__7771__a[G__7771__i] = arguments[G__7771__i + 3]; ++G__7771__i;}
  kvs = new cljs.core.IndexedSeq(G__7771__a,0);
} 
return G__7766__delegate.call(this,coll,k,v,kvs);};
G__7766.cljs$lang$maxFixedArity = 3;
G__7766.cljs$lang$applyTo = (function (arglist__7772){
var coll = cljs.core.first(arglist__7772);
arglist__7772 = cljs.core.next(arglist__7772);
var k = cljs.core.first(arglist__7772);
arglist__7772 = cljs.core.next(arglist__7772);
var v = cljs.core.first(arglist__7772);
var kvs = cljs.core.rest(arglist__7772);
return G__7766__delegate(coll,k,v,kvs);
});
G__7766.cljs$core$IFn$_invoke$arity$variadic = G__7766__delegate;
return G__7766;
})()
;
assoc = function(coll,k,v,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc__3.call(this,coll,k,v);
default:
var G__7773 = null;
if (arguments.length > 3) {
var G__7774__i = 0, G__7774__a = new Array(arguments.length -  3);
while (G__7774__i < G__7774__a.length) {G__7774__a[G__7774__i] = arguments[G__7774__i + 3]; ++G__7774__i;}
G__7773 = new cljs.core.IndexedSeq(G__7774__a,0);
}
return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll,k,v, G__7773);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc.cljs$lang$maxFixedArity = 3;
assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
return assoc;
})()
;
/**
* dissoc[iate]. Returns a new map of the same (hashed/sorted) type,
* that does not contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc = (function() {
var dissoc = null;
var dissoc__1 = (function (coll){
return coll;
});
var dissoc__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._dissoc(coll,k);
}
});
var dissoc__3 = (function() { 
var G__7777__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = dissoc.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__7778 = ret;
var G__7779 = cljs.core.first(ks);
var G__7780 = cljs.core.next(ks);
coll = G__7778;
k = G__7779;
ks = G__7780;
continue;
} else {
return ret;
}
}
break;
}
};
var G__7777 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__7781__i = 0, G__7781__a = new Array(arguments.length -  2);
while (G__7781__i < G__7781__a.length) {G__7781__a[G__7781__i] = arguments[G__7781__i + 2]; ++G__7781__i;}
  ks = new cljs.core.IndexedSeq(G__7781__a,0);
} 
return G__7777__delegate.call(this,coll,k,ks);};
G__7777.cljs$lang$maxFixedArity = 2;
G__7777.cljs$lang$applyTo = (function (arglist__7782){
var coll = cljs.core.first(arglist__7782);
arglist__7782 = cljs.core.next(arglist__7782);
var k = cljs.core.first(arglist__7782);
var ks = cljs.core.rest(arglist__7782);
return G__7777__delegate(coll,k,ks);
});
G__7777.cljs$core$IFn$_invoke$arity$variadic = G__7777__delegate;
return G__7777;
})()
;
dissoc = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return dissoc__1.call(this,coll);
case 2:
return dissoc__2.call(this,coll,k);
default:
var G__7783 = null;
if (arguments.length > 2) {
var G__7784__i = 0, G__7784__a = new Array(arguments.length -  2);
while (G__7784__i < G__7784__a.length) {G__7784__a[G__7784__i] = arguments[G__7784__i + 2]; ++G__7784__i;}
G__7783 = new cljs.core.IndexedSeq(G__7784__a,0);
}
return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__7783);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc.cljs$lang$maxFixedArity = 2;
dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc;
})()
;
cljs.core.fn_QMARK_ = (function fn_QMARK_(f){
var or__4720__auto__ = (function (){var G__7789 = f;
return goog.isFunction(G__7789);
})();
if(cljs.core.truth_(or__4720__auto__)){
return or__4720__auto__;
} else {
var G__7790 = f;
if(G__7790){
var bit__5401__auto__ = null;
if(cljs.core.truth_((function (){var or__4720__auto____$1 = bit__5401__auto__;
if(cljs.core.truth_(or__4720__auto____$1)){
return or__4720__auto____$1;
} else {
return G__7790.cljs$core$Fn$;
}
})())){
return true;
} else {
if((!G__7790.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__7790);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__7790);
}
}
});

/**
* @constructor
*/
cljs.core.MetaFn = (function (afn,meta){
this.afn = afn;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393217;
})
cljs.core.MetaFn.prototype.call = (function() {
var G__8256 = null;
var G__8256__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});
var G__8256__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7792 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__7792) : self__.afn.call(null,G__7792));
});
var G__8256__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7793 = a;
var G__7794 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__7793,G__7794) : self__.afn.call(null,G__7793,G__7794));
});
var G__8256__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7795 = a;
var G__7796 = b;
var G__7797 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__7795,G__7796,G__7797) : self__.afn.call(null,G__7795,G__7796,G__7797));
});
var G__8256__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7798 = a;
var G__7799 = b;
var G__7800 = c;
var G__7801 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__7798,G__7799,G__7800,G__7801) : self__.afn.call(null,G__7798,G__7799,G__7800,G__7801));
});
var G__8256__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7802 = a;
var G__7803 = b;
var G__7804 = c;
var G__7805 = d;
var G__7806 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__7802,G__7803,G__7804,G__7805,G__7806) : self__.afn.call(null,G__7802,G__7803,G__7804,G__7805,G__7806));
});
var G__8256__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7807 = a;
var G__7808 = b;
var G__7809 = c;
var G__7810 = d;
var G__7811 = e;
var G__7812 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__7807,G__7808,G__7809,G__7810,G__7811,G__7812) : self__.afn.call(null,G__7807,G__7808,G__7809,G__7810,G__7811,G__7812));
});
var G__8256__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7813 = a;
var G__7814 = b;
var G__7815 = c;
var G__7816 = d;
var G__7817 = e;
var G__7818 = f;
var G__7819 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__7813,G__7814,G__7815,G__7816,G__7817,G__7818,G__7819) : self__.afn.call(null,G__7813,G__7814,G__7815,G__7816,G__7817,G__7818,G__7819));
});
var G__8256__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7820 = a;
var G__7821 = b;
var G__7822 = c;
var G__7823 = d;
var G__7824 = e;
var G__7825 = f;
var G__7826 = g;
var G__7827 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__7820,G__7821,G__7822,G__7823,G__7824,G__7825,G__7826,G__7827) : self__.afn.call(null,G__7820,G__7821,G__7822,G__7823,G__7824,G__7825,G__7826,G__7827));
});
var G__8256__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7828 = a;
var G__7829 = b;
var G__7830 = c;
var G__7831 = d;
var G__7832 = e;
var G__7833 = f;
var G__7834 = g;
var G__7835 = h;
var G__7836 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__7828,G__7829,G__7830,G__7831,G__7832,G__7833,G__7834,G__7835,G__7836) : self__.afn.call(null,G__7828,G__7829,G__7830,G__7831,G__7832,G__7833,G__7834,G__7835,G__7836));
});
var G__8256__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7837 = a;
var G__7838 = b;
var G__7839 = c;
var G__7840 = d;
var G__7841 = e;
var G__7842 = f;
var G__7843 = g;
var G__7844 = h;
var G__7845 = i;
var G__7846 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__7837,G__7838,G__7839,G__7840,G__7841,G__7842,G__7843,G__7844,G__7845,G__7846) : self__.afn.call(null,G__7837,G__7838,G__7839,G__7840,G__7841,G__7842,G__7843,G__7844,G__7845,G__7846));
});
var G__8256__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7847 = a;
var G__7848 = b;
var G__7849 = c;
var G__7850 = d;
var G__7851 = e;
var G__7852 = f;
var G__7853 = g;
var G__7854 = h;
var G__7855 = i;
var G__7856 = j;
var G__7857 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__7847,G__7848,G__7849,G__7850,G__7851,G__7852,G__7853,G__7854,G__7855,G__7856,G__7857) : self__.afn.call(null,G__7847,G__7848,G__7849,G__7850,G__7851,G__7852,G__7853,G__7854,G__7855,G__7856,G__7857));
});
var G__8256__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7858 = a;
var G__7859 = b;
var G__7860 = c;
var G__7861 = d;
var G__7862 = e;
var G__7863 = f;
var G__7864 = g;
var G__7865 = h;
var G__7866 = i;
var G__7867 = j;
var G__7868 = k;
var G__7869 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__7858,G__7859,G__7860,G__7861,G__7862,G__7863,G__7864,G__7865,G__7866,G__7867,G__7868,G__7869) : self__.afn.call(null,G__7858,G__7859,G__7860,G__7861,G__7862,G__7863,G__7864,G__7865,G__7866,G__7867,G__7868,G__7869));
});
var G__8256__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7870 = a;
var G__7871 = b;
var G__7872 = c;
var G__7873 = d;
var G__7874 = e;
var G__7875 = f;
var G__7876 = g;
var G__7877 = h;
var G__7878 = i;
var G__7879 = j;
var G__7880 = k;
var G__7881 = l;
var G__7882 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__7870,G__7871,G__7872,G__7873,G__7874,G__7875,G__7876,G__7877,G__7878,G__7879,G__7880,G__7881,G__7882) : self__.afn.call(null,G__7870,G__7871,G__7872,G__7873,G__7874,G__7875,G__7876,G__7877,G__7878,G__7879,G__7880,G__7881,G__7882));
});
var G__8256__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7883 = a;
var G__7884 = b;
var G__7885 = c;
var G__7886 = d;
var G__7887 = e;
var G__7888 = f;
var G__7889 = g;
var G__7890 = h;
var G__7891 = i;
var G__7892 = j;
var G__7893 = k;
var G__7894 = l;
var G__7895 = m;
var G__7896 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__7883,G__7884,G__7885,G__7886,G__7887,G__7888,G__7889,G__7890,G__7891,G__7892,G__7893,G__7894,G__7895,G__7896) : self__.afn.call(null,G__7883,G__7884,G__7885,G__7886,G__7887,G__7888,G__7889,G__7890,G__7891,G__7892,G__7893,G__7894,G__7895,G__7896));
});
var G__8256__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7897 = a;
var G__7898 = b;
var G__7899 = c;
var G__7900 = d;
var G__7901 = e;
var G__7902 = f;
var G__7903 = g;
var G__7904 = h;
var G__7905 = i;
var G__7906 = j;
var G__7907 = k;
var G__7908 = l;
var G__7909 = m;
var G__7910 = n;
var G__7911 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__7897,G__7898,G__7899,G__7900,G__7901,G__7902,G__7903,G__7904,G__7905,G__7906,G__7907,G__7908,G__7909,G__7910,G__7911) : self__.afn.call(null,G__7897,G__7898,G__7899,G__7900,G__7901,G__7902,G__7903,G__7904,G__7905,G__7906,G__7907,G__7908,G__7909,G__7910,G__7911));
});
var G__8256__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7912 = a;
var G__7913 = b;
var G__7914 = c;
var G__7915 = d;
var G__7916 = e;
var G__7917 = f;
var G__7918 = g;
var G__7919 = h;
var G__7920 = i;
var G__7921 = j;
var G__7922 = k;
var G__7923 = l;
var G__7924 = m;
var G__7925 = n;
var G__7926 = o;
var G__7927 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__7912,G__7913,G__7914,G__7915,G__7916,G__7917,G__7918,G__7919,G__7920,G__7921,G__7922,G__7923,G__7924,G__7925,G__7926,G__7927) : self__.afn.call(null,G__7912,G__7913,G__7914,G__7915,G__7916,G__7917,G__7918,G__7919,G__7920,G__7921,G__7922,G__7923,G__7924,G__7925,G__7926,G__7927));
});
var G__8256__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7928 = a;
var G__7929 = b;
var G__7930 = c;
var G__7931 = d;
var G__7932 = e;
var G__7933 = f;
var G__7934 = g;
var G__7935 = h;
var G__7936 = i;
var G__7937 = j;
var G__7938 = k;
var G__7939 = l;
var G__7940 = m;
var G__7941 = n;
var G__7942 = o;
var G__7943 = p;
var G__7944 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__7928,G__7929,G__7930,G__7931,G__7932,G__7933,G__7934,G__7935,G__7936,G__7937,G__7938,G__7939,G__7940,G__7941,G__7942,G__7943,G__7944) : self__.afn.call(null,G__7928,G__7929,G__7930,G__7931,G__7932,G__7933,G__7934,G__7935,G__7936,G__7937,G__7938,G__7939,G__7940,G__7941,G__7942,G__7943,G__7944));
});
var G__8256__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7945 = a;
var G__7946 = b;
var G__7947 = c;
var G__7948 = d;
var G__7949 = e;
var G__7950 = f;
var G__7951 = g;
var G__7952 = h;
var G__7953 = i;
var G__7954 = j;
var G__7955 = k;
var G__7956 = l;
var G__7957 = m;
var G__7958 = n;
var G__7959 = o;
var G__7960 = p;
var G__7961 = q;
var G__7962 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__7945,G__7946,G__7947,G__7948,G__7949,G__7950,G__7951,G__7952,G__7953,G__7954,G__7955,G__7956,G__7957,G__7958,G__7959,G__7960,G__7961,G__7962) : self__.afn.call(null,G__7945,G__7946,G__7947,G__7948,G__7949,G__7950,G__7951,G__7952,G__7953,G__7954,G__7955,G__7956,G__7957,G__7958,G__7959,G__7960,G__7961,G__7962));
});
var G__8256__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7963 = a;
var G__7964 = b;
var G__7965 = c;
var G__7966 = d;
var G__7967 = e;
var G__7968 = f;
var G__7969 = g;
var G__7970 = h;
var G__7971 = i;
var G__7972 = j;
var G__7973 = k;
var G__7974 = l;
var G__7975 = m;
var G__7976 = n;
var G__7977 = o;
var G__7978 = p;
var G__7979 = q;
var G__7980 = r;
var G__7981 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__7963,G__7964,G__7965,G__7966,G__7967,G__7968,G__7969,G__7970,G__7971,G__7972,G__7973,G__7974,G__7975,G__7976,G__7977,G__7978,G__7979,G__7980,G__7981) : self__.afn.call(null,G__7963,G__7964,G__7965,G__7966,G__7967,G__7968,G__7969,G__7970,G__7971,G__7972,G__7973,G__7974,G__7975,G__7976,G__7977,G__7978,G__7979,G__7980,G__7981));
});
var G__8256__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7982 = a;
var G__7983 = b;
var G__7984 = c;
var G__7985 = d;
var G__7986 = e;
var G__7987 = f;
var G__7988 = g;
var G__7989 = h;
var G__7990 = i;
var G__7991 = j;
var G__7992 = k;
var G__7993 = l;
var G__7994 = m;
var G__7995 = n;
var G__7996 = o;
var G__7997 = p;
var G__7998 = q;
var G__7999 = r;
var G__8000 = s;
var G__8001 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__7982,G__7983,G__7984,G__7985,G__7986,G__7987,G__7988,G__7989,G__7990,G__7991,G__7992,G__7993,G__7994,G__7995,G__7996,G__7997,G__7998,G__7999,G__8000,G__8001) : self__.afn.call(null,G__7982,G__7983,G__7984,G__7985,G__7986,G__7987,G__7988,G__7989,G__7990,G__7991,G__7992,G__7993,G__7994,G__7995,G__7996,G__7997,G__7998,G__7999,G__8000,G__8001));
});
var G__8256__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__8002 = self__.afn;
var G__8003 = a;
var G__8004 = b;
var G__8005 = c;
var G__8006 = d;
var G__8007 = e;
var G__8008 = f;
var G__8009 = g;
var G__8010 = h;
var G__8011 = i;
var G__8012 = j;
var G__8013 = k;
var G__8014 = l;
var G__8015 = m;
var G__8016 = n;
var G__8017 = o;
var G__8018 = p;
var G__8019 = q;
var G__8020 = r;
var G__8021 = s;
var G__8022 = t;
var G__8023 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__8002,G__8003,G__8004,G__8005,G__8006,G__8007,G__8008,G__8009,G__8010,G__8011,G__8012,G__8013,G__8014,G__8015,G__8016,G__8017,G__8018,G__8019,G__8020,G__8021,G__8022,G__8023) : cljs.core.apply.call(null,G__8002,G__8003,G__8004,G__8005,G__8006,G__8007,G__8008,G__8009,G__8010,G__8011,G__8012,G__8013,G__8014,G__8015,G__8016,G__8017,G__8018,G__8019,G__8020,G__8021,G__8022,G__8023));
});
G__8256 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__8256__1.call(this,self__);
case 2:
return G__8256__2.call(this,self__,a);
case 3:
return G__8256__3.call(this,self__,a,b);
case 4:
return G__8256__4.call(this,self__,a,b,c);
case 5:
return G__8256__5.call(this,self__,a,b,c,d);
case 6:
return G__8256__6.call(this,self__,a,b,c,d,e);
case 7:
return G__8256__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__8256__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__8256__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__8256__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__8256__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__8256__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__8256__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__8256__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__8256__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__8256__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__8256__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__8256__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__8256__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__8256__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__8256__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__8256__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8256.cljs$core$IFn$_invoke$arity$1 = G__8256__1;
G__8256.cljs$core$IFn$_invoke$arity$2 = G__8256__2;
G__8256.cljs$core$IFn$_invoke$arity$3 = G__8256__3;
G__8256.cljs$core$IFn$_invoke$arity$4 = G__8256__4;
G__8256.cljs$core$IFn$_invoke$arity$5 = G__8256__5;
G__8256.cljs$core$IFn$_invoke$arity$6 = G__8256__6;
G__8256.cljs$core$IFn$_invoke$arity$7 = G__8256__7;
G__8256.cljs$core$IFn$_invoke$arity$8 = G__8256__8;
G__8256.cljs$core$IFn$_invoke$arity$9 = G__8256__9;
G__8256.cljs$core$IFn$_invoke$arity$10 = G__8256__10;
G__8256.cljs$core$IFn$_invoke$arity$11 = G__8256__11;
G__8256.cljs$core$IFn$_invoke$arity$12 = G__8256__12;
G__8256.cljs$core$IFn$_invoke$arity$13 = G__8256__13;
G__8256.cljs$core$IFn$_invoke$arity$14 = G__8256__14;
G__8256.cljs$core$IFn$_invoke$arity$15 = G__8256__15;
G__8256.cljs$core$IFn$_invoke$arity$16 = G__8256__16;
G__8256.cljs$core$IFn$_invoke$arity$17 = G__8256__17;
G__8256.cljs$core$IFn$_invoke$arity$18 = G__8256__18;
G__8256.cljs$core$IFn$_invoke$arity$19 = G__8256__19;
G__8256.cljs$core$IFn$_invoke$arity$20 = G__8256__20;
G__8256.cljs$core$IFn$_invoke$arity$21 = G__8256__21;
G__8256.cljs$core$IFn$_invoke$arity$22 = G__8256__22;
return G__8256;
})()
;

cljs.core.MetaFn.prototype.apply = (function (self__,args7791){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args7791)));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
var G__8024 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__8024) : self__.afn.call(null,G__8024));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
var G__8025 = a;
var G__8026 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__8025,G__8026) : self__.afn.call(null,G__8025,G__8026));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
var G__8027 = a;
var G__8028 = b;
var G__8029 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__8027,G__8028,G__8029) : self__.afn.call(null,G__8027,G__8028,G__8029));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
var G__8030 = a;
var G__8031 = b;
var G__8032 = c;
var G__8033 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__8030,G__8031,G__8032,G__8033) : self__.afn.call(null,G__8030,G__8031,G__8032,G__8033));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
var G__8034 = a;
var G__8035 = b;
var G__8036 = c;
var G__8037 = d;
var G__8038 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__8034,G__8035,G__8036,G__8037,G__8038) : self__.afn.call(null,G__8034,G__8035,G__8036,G__8037,G__8038));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
var G__8039 = a;
var G__8040 = b;
var G__8041 = c;
var G__8042 = d;
var G__8043 = e;
var G__8044 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__8039,G__8040,G__8041,G__8042,G__8043,G__8044) : self__.afn.call(null,G__8039,G__8040,G__8041,G__8042,G__8043,G__8044));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
var G__8045 = a;
var G__8046 = b;
var G__8047 = c;
var G__8048 = d;
var G__8049 = e;
var G__8050 = f;
var G__8051 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__8045,G__8046,G__8047,G__8048,G__8049,G__8050,G__8051) : self__.afn.call(null,G__8045,G__8046,G__8047,G__8048,G__8049,G__8050,G__8051));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
var G__8052 = a;
var G__8053 = b;
var G__8054 = c;
var G__8055 = d;
var G__8056 = e;
var G__8057 = f;
var G__8058 = g;
var G__8059 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__8052,G__8053,G__8054,G__8055,G__8056,G__8057,G__8058,G__8059) : self__.afn.call(null,G__8052,G__8053,G__8054,G__8055,G__8056,G__8057,G__8058,G__8059));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
var G__8060 = a;
var G__8061 = b;
var G__8062 = c;
var G__8063 = d;
var G__8064 = e;
var G__8065 = f;
var G__8066 = g;
var G__8067 = h;
var G__8068 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__8060,G__8061,G__8062,G__8063,G__8064,G__8065,G__8066,G__8067,G__8068) : self__.afn.call(null,G__8060,G__8061,G__8062,G__8063,G__8064,G__8065,G__8066,G__8067,G__8068));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
var G__8069 = a;
var G__8070 = b;
var G__8071 = c;
var G__8072 = d;
var G__8073 = e;
var G__8074 = f;
var G__8075 = g;
var G__8076 = h;
var G__8077 = i;
var G__8078 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__8069,G__8070,G__8071,G__8072,G__8073,G__8074,G__8075,G__8076,G__8077,G__8078) : self__.afn.call(null,G__8069,G__8070,G__8071,G__8072,G__8073,G__8074,G__8075,G__8076,G__8077,G__8078));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
var G__8079 = a;
var G__8080 = b;
var G__8081 = c;
var G__8082 = d;
var G__8083 = e;
var G__8084 = f;
var G__8085 = g;
var G__8086 = h;
var G__8087 = i;
var G__8088 = j;
var G__8089 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__8079,G__8080,G__8081,G__8082,G__8083,G__8084,G__8085,G__8086,G__8087,G__8088,G__8089) : self__.afn.call(null,G__8079,G__8080,G__8081,G__8082,G__8083,G__8084,G__8085,G__8086,G__8087,G__8088,G__8089));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
var G__8090 = a;
var G__8091 = b;
var G__8092 = c;
var G__8093 = d;
var G__8094 = e;
var G__8095 = f;
var G__8096 = g;
var G__8097 = h;
var G__8098 = i;
var G__8099 = j;
var G__8100 = k;
var G__8101 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__8090,G__8091,G__8092,G__8093,G__8094,G__8095,G__8096,G__8097,G__8098,G__8099,G__8100,G__8101) : self__.afn.call(null,G__8090,G__8091,G__8092,G__8093,G__8094,G__8095,G__8096,G__8097,G__8098,G__8099,G__8100,G__8101));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
var G__8102 = a;
var G__8103 = b;
var G__8104 = c;
var G__8105 = d;
var G__8106 = e;
var G__8107 = f;
var G__8108 = g;
var G__8109 = h;
var G__8110 = i;
var G__8111 = j;
var G__8112 = k;
var G__8113 = l;
var G__8114 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__8102,G__8103,G__8104,G__8105,G__8106,G__8107,G__8108,G__8109,G__8110,G__8111,G__8112,G__8113,G__8114) : self__.afn.call(null,G__8102,G__8103,G__8104,G__8105,G__8106,G__8107,G__8108,G__8109,G__8110,G__8111,G__8112,G__8113,G__8114));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
var G__8115 = a;
var G__8116 = b;
var G__8117 = c;
var G__8118 = d;
var G__8119 = e;
var G__8120 = f;
var G__8121 = g;
var G__8122 = h;
var G__8123 = i;
var G__8124 = j;
var G__8125 = k;
var G__8126 = l;
var G__8127 = m;
var G__8128 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__8115,G__8116,G__8117,G__8118,G__8119,G__8120,G__8121,G__8122,G__8123,G__8124,G__8125,G__8126,G__8127,G__8128) : self__.afn.call(null,G__8115,G__8116,G__8117,G__8118,G__8119,G__8120,G__8121,G__8122,G__8123,G__8124,G__8125,G__8126,G__8127,G__8128));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
var G__8129 = a;
var G__8130 = b;
var G__8131 = c;
var G__8132 = d;
var G__8133 = e;
var G__8134 = f;
var G__8135 = g;
var G__8136 = h;
var G__8137 = i;
var G__8138 = j;
var G__8139 = k;
var G__8140 = l;
var G__8141 = m;
var G__8142 = n;
var G__8143 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__8129,G__8130,G__8131,G__8132,G__8133,G__8134,G__8135,G__8136,G__8137,G__8138,G__8139,G__8140,G__8141,G__8142,G__8143) : self__.afn.call(null,G__8129,G__8130,G__8131,G__8132,G__8133,G__8134,G__8135,G__8136,G__8137,G__8138,G__8139,G__8140,G__8141,G__8142,G__8143));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
var G__8144 = a;
var G__8145 = b;
var G__8146 = c;
var G__8147 = d;
var G__8148 = e;
var G__8149 = f;
var G__8150 = g;
var G__8151 = h;
var G__8152 = i;
var G__8153 = j;
var G__8154 = k;
var G__8155 = l;
var G__8156 = m;
var G__8157 = n;
var G__8158 = o;
var G__8159 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__8144,G__8145,G__8146,G__8147,G__8148,G__8149,G__8150,G__8151,G__8152,G__8153,G__8154,G__8155,G__8156,G__8157,G__8158,G__8159) : self__.afn.call(null,G__8144,G__8145,G__8146,G__8147,G__8148,G__8149,G__8150,G__8151,G__8152,G__8153,G__8154,G__8155,G__8156,G__8157,G__8158,G__8159));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
var G__8160 = a;
var G__8161 = b;
var G__8162 = c;
var G__8163 = d;
var G__8164 = e;
var G__8165 = f;
var G__8166 = g;
var G__8167 = h;
var G__8168 = i;
var G__8169 = j;
var G__8170 = k;
var G__8171 = l;
var G__8172 = m;
var G__8173 = n;
var G__8174 = o;
var G__8175 = p;
var G__8176 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__8160,G__8161,G__8162,G__8163,G__8164,G__8165,G__8166,G__8167,G__8168,G__8169,G__8170,G__8171,G__8172,G__8173,G__8174,G__8175,G__8176) : self__.afn.call(null,G__8160,G__8161,G__8162,G__8163,G__8164,G__8165,G__8166,G__8167,G__8168,G__8169,G__8170,G__8171,G__8172,G__8173,G__8174,G__8175,G__8176));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
var G__8177 = a;
var G__8178 = b;
var G__8179 = c;
var G__8180 = d;
var G__8181 = e;
var G__8182 = f;
var G__8183 = g;
var G__8184 = h;
var G__8185 = i;
var G__8186 = j;
var G__8187 = k;
var G__8188 = l;
var G__8189 = m;
var G__8190 = n;
var G__8191 = o;
var G__8192 = p;
var G__8193 = q;
var G__8194 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__8177,G__8178,G__8179,G__8180,G__8181,G__8182,G__8183,G__8184,G__8185,G__8186,G__8187,G__8188,G__8189,G__8190,G__8191,G__8192,G__8193,G__8194) : self__.afn.call(null,G__8177,G__8178,G__8179,G__8180,G__8181,G__8182,G__8183,G__8184,G__8185,G__8186,G__8187,G__8188,G__8189,G__8190,G__8191,G__8192,G__8193,G__8194));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
var G__8195 = a;
var G__8196 = b;
var G__8197 = c;
var G__8198 = d;
var G__8199 = e;
var G__8200 = f;
var G__8201 = g;
var G__8202 = h;
var G__8203 = i;
var G__8204 = j;
var G__8205 = k;
var G__8206 = l;
var G__8207 = m;
var G__8208 = n;
var G__8209 = o;
var G__8210 = p;
var G__8211 = q;
var G__8212 = r;
var G__8213 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__8195,G__8196,G__8197,G__8198,G__8199,G__8200,G__8201,G__8202,G__8203,G__8204,G__8205,G__8206,G__8207,G__8208,G__8209,G__8210,G__8211,G__8212,G__8213) : self__.afn.call(null,G__8195,G__8196,G__8197,G__8198,G__8199,G__8200,G__8201,G__8202,G__8203,G__8204,G__8205,G__8206,G__8207,G__8208,G__8209,G__8210,G__8211,G__8212,G__8213));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
var G__8214 = a;
var G__8215 = b;
var G__8216 = c;
var G__8217 = d;
var G__8218 = e;
var G__8219 = f;
var G__8220 = g;
var G__8221 = h;
var G__8222 = i;
var G__8223 = j;
var G__8224 = k;
var G__8225 = l;
var G__8226 = m;
var G__8227 = n;
var G__8228 = o;
var G__8229 = p;
var G__8230 = q;
var G__8231 = r;
var G__8232 = s;
var G__8233 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__8214,G__8215,G__8216,G__8217,G__8218,G__8219,G__8220,G__8221,G__8222,G__8223,G__8224,G__8225,G__8226,G__8227,G__8228,G__8229,G__8230,G__8231,G__8232,G__8233) : self__.afn.call(null,G__8214,G__8215,G__8216,G__8217,G__8218,G__8219,G__8220,G__8221,G__8222,G__8223,G__8224,G__8225,G__8226,G__8227,G__8228,G__8229,G__8230,G__8231,G__8232,G__8233));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__8234 = self__.afn;
var G__8235 = a;
var G__8236 = b;
var G__8237 = c;
var G__8238 = d;
var G__8239 = e;
var G__8240 = f;
var G__8241 = g;
var G__8242 = h;
var G__8243 = i;
var G__8244 = j;
var G__8245 = k;
var G__8246 = l;
var G__8247 = m;
var G__8248 = n;
var G__8249 = o;
var G__8250 = p;
var G__8251 = q;
var G__8252 = r;
var G__8253 = s;
var G__8254 = t;
var G__8255 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__8234,G__8235,G__8236,G__8237,G__8238,G__8239,G__8240,G__8241,G__8242,G__8243,G__8244,G__8245,G__8246,G__8247,G__8248,G__8249,G__8250,G__8251,G__8252,G__8253,G__8254,G__8255) : cljs.core.apply.call(null,G__8234,G__8235,G__8236,G__8237,G__8238,G__8239,G__8240,G__8241,G__8242,G__8243,G__8244,G__8245,G__8246,G__8247,G__8248,G__8249,G__8250,G__8251,G__8252,G__8253,G__8254,G__8255));
});

cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;

cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.MetaFn(self__.afn,new_meta));
});

cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.MetaFn.cljs$lang$type = true;

cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";

cljs.core.MetaFn.cljs$lang$ctorPrWriter = (function (this__5307__auto__,writer__5308__auto__,opt__5309__auto__){
return cljs.core._write(writer__5308__auto__,"cljs.core/MetaFn");
});

cljs.core.__GT_MetaFn = (function __GT_MetaFn(afn,meta){
return (new cljs.core.MetaFn(afn,meta));
});

/**
* Returns an object of the same type and value as obj, with
* map m as its metadata.
*/
cljs.core.with_meta = (function with_meta(o,meta){
if((cljs.core.fn_QMARK_(o)) && (!((function (){var G__8260 = o;
if(G__8260){
var bit__5401__auto__ = (G__8260.cljs$lang$protocol_mask$partition0$ & (262144));
if((bit__5401__auto__) || (G__8260.cljs$core$IWithMeta$)){
return true;
} else {
if((!G__8260.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__8260);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__8260);
}
})()))){
return (new cljs.core.MetaFn(o,meta));
} else {
if((o == null)){
return null;
} else {
return cljs.core._with_meta(o,meta);
}
}
});
/**
* Returns the metadata of obj, returns nil if there is no metadata.
*/
cljs.core.meta = (function meta(o){
if((function (){var and__4708__auto__ = !((o == null));
if(and__4708__auto__){
var G__8264 = o;
if(G__8264){
var bit__5401__auto__ = (G__8264.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__5401__auto__) || (G__8264.cljs$core$IMeta$)){
return true;
} else {
if((!G__8264.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__8264);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__8264);
}
} else {
return and__4708__auto__;
}
})()){
return cljs.core._meta(o);
} else {
return null;
}
});
/**
* For a list or queue, same as first, for a vector, same as, but much
* more efficient than, last. If the collection is empty, returns nil.
*/
cljs.core.peek = (function peek(coll){
if((coll == null)){
return null;
} else {
return cljs.core._peek(coll);
}
});
/**
* For a list or queue, returns a new list/queue without the first
* item, for a vector, returns a new vector without the last item.
* Note - not the same as next/butlast.
*/
cljs.core.pop = (function pop(coll){
if((coll == null)){
return null;
} else {
return cljs.core._pop(coll);
}
});
/**
* disj[oin]. Returns a new set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj = (function() {
var disj = null;
var disj__1 = (function (coll){
return coll;
});
var disj__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._disjoin(coll,k);
}
});
var disj__3 = (function() { 
var G__8267__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = disj.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__8268 = ret;
var G__8269 = cljs.core.first(ks);
var G__8270 = cljs.core.next(ks);
coll = G__8268;
k = G__8269;
ks = G__8270;
continue;
} else {
return ret;
}
}
break;
}
};
var G__8267 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__8271__i = 0, G__8271__a = new Array(arguments.length -  2);
while (G__8271__i < G__8271__a.length) {G__8271__a[G__8271__i] = arguments[G__8271__i + 2]; ++G__8271__i;}
  ks = new cljs.core.IndexedSeq(G__8271__a,0);
} 
return G__8267__delegate.call(this,coll,k,ks);};
G__8267.cljs$lang$maxFixedArity = 2;
G__8267.cljs$lang$applyTo = (function (arglist__8272){
var coll = cljs.core.first(arglist__8272);
arglist__8272 = cljs.core.next(arglist__8272);
var k = cljs.core.first(arglist__8272);
var ks = cljs.core.rest(arglist__8272);
return G__8267__delegate(coll,k,ks);
});
G__8267.cljs$core$IFn$_invoke$arity$variadic = G__8267__delegate;
return G__8267;
})()
;
disj = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return disj__1.call(this,coll);
case 2:
return disj__2.call(this,coll,k);
default:
var G__8273 = null;
if (arguments.length > 2) {
var G__8274__i = 0, G__8274__a = new Array(arguments.length -  2);
while (G__8274__i < G__8274__a.length) {G__8274__a[G__8274__i] = arguments[G__8274__i + 2]; ++G__8274__i;}
G__8273 = new cljs.core.IndexedSeq(G__8274__a,0);
}
return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__8273);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj.cljs$lang$maxFixedArity = 2;
disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
return disj;
})()
;
/**
* Returns true if coll has no items - same as (not (seq coll)).
* Please use the idiom (seq x) rather than (not (empty? x))
*/
cljs.core.empty_QMARK_ = (function empty_QMARK_(coll){
return ((coll == null)) || (cljs.core.not(cljs.core.seq(coll)));
});
/**
* Returns true if x satisfies ICollection
*/
cljs.core.coll_QMARK_ = (function coll_QMARK_(x){
if((x == null)){
return false;
} else {
var G__8276 = x;
if(G__8276){
var bit__5401__auto__ = (G__8276.cljs$lang$protocol_mask$partition0$ & (8));
if((bit__5401__auto__) || (G__8276.cljs$core$ICollection$)){
return true;
} else {
if((!G__8276.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__8276);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__8276);
}
}
});
/**
* Returns true if x satisfies ISet
*/
cljs.core.set_QMARK_ = (function set_QMARK_(x){
if((x == null)){
return false;
} else {
var G__8278 = x;
if(G__8278){
var bit__5401__auto__ = (G__8278.cljs$lang$protocol_mask$partition0$ & (4096));
if((bit__5401__auto__) || (G__8278.cljs$core$ISet$)){
return true;
} else {
if((!G__8278.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__8278);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__8278);
}
}
});
/**
* Returns true if coll implements Associative
*/
cljs.core.associative_QMARK_ = (function associative_QMARK_(x){
var G__8280 = x;
if(G__8280){
var bit__5401__auto__ = (G__8280.cljs$lang$protocol_mask$partition0$ & (512));
if((bit__5401__auto__) || (G__8280.cljs$core$IAssociative$)){
return true;
} else {
if((!G__8280.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__8280);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__8280);
}
});
/**
* Returns true if coll satisfies ISequential
*/
cljs.core.sequential_QMARK_ = (function sequential_QMARK_(x){
var G__8282 = x;
if(G__8282){
var bit__5401__auto__ = (G__8282.cljs$lang$protocol_mask$partition0$ & (16777216));
if((bit__5401__auto__) || (G__8282.cljs$core$ISequential$)){
return true;
} else {
if((!G__8282.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__8282);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__8282);
}
});
/**
* Returns true if coll satisfies ISorted
*/
cljs.core.sorted_QMARK_ = (function sorted_QMARK_(x){
var G__8284 = x;
if(G__8284){
var bit__5401__auto__ = (G__8284.cljs$lang$protocol_mask$partition0$ & (268435456));
if((bit__5401__auto__) || (G__8284.cljs$core$ISorted$)){
return true;
} else {
if((!G__8284.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__8284);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__8284);
}
});
/**
* Returns true if coll satisfies IReduce
*/
cljs.core.reduceable_QMARK_ = (function reduceable_QMARK_(x){
var G__8286 = x;
if(G__8286){
var bit__5401__auto__ = (G__8286.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__5401__auto__) || (G__8286.cljs$core$IReduce$)){
return true;
} else {
if((!G__8286.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__8286);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__8286);
}
});
/**
* Return true if x satisfies IMap
*/
cljs.core.map_QMARK_ = (function map_QMARK_(x){
if((x == null)){
return false;
} else {
var G__8288 = x;
if(G__8288){
var bit__5401__auto__ = (G__8288.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__5401__auto__) || (G__8288.cljs$core$IMap$)){
return true;
} else {
if((!G__8288.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__8288);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__8288);
}
}
});
/**
* Return true if x satisfies IVector
*/
cljs.core.vector_QMARK_ = (function vector_QMARK_(x){
var G__8290 = x;
if(G__8290){
var bit__5401__auto__ = (G__8290.cljs$lang$protocol_mask$partition0$ & (16384));
if((bit__5401__auto__) || (G__8290.cljs$core$IVector$)){
return true;
} else {
if((!G__8290.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__8290);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__8290);
}
});

cljs.core.chunked_seq_QMARK_ = (function chunked_seq_QMARK_(x){
var G__8292 = x;
if(G__8292){
var bit__5394__auto__ = (G__8292.cljs$lang$protocol_mask$partition1$ & (512));
if((bit__5394__auto__) || (G__8292.cljs$core$IChunkedSeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
});
/**
* @param {...*} var_args
*/
cljs.core.js_obj = (function() {
var js_obj = null;
var js_obj__0 = (function (){
var obj8298 = {};
return obj8298;
});
var js_obj__1 = (function() { 
var G__8301__delegate = function (keyvals){
var G__8299 = goog.object.create;
var G__8300 = keyvals;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__8299,G__8300) : cljs.core.apply.call(null,G__8299,G__8300));
};
var G__8301 = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__8302__i = 0, G__8302__a = new Array(arguments.length -  0);
while (G__8302__i < G__8302__a.length) {G__8302__a[G__8302__i] = arguments[G__8302__i + 0]; ++G__8302__i;}
  keyvals = new cljs.core.IndexedSeq(G__8302__a,0);
} 
return G__8301__delegate.call(this,keyvals);};
G__8301.cljs$lang$maxFixedArity = 0;
G__8301.cljs$lang$applyTo = (function (arglist__8303){
var keyvals = cljs.core.seq(arglist__8303);
return G__8301__delegate(keyvals);
});
G__8301.cljs$core$IFn$_invoke$arity$variadic = G__8301__delegate;
return G__8301;
})()
;
js_obj = function(var_args){
var keyvals = var_args;
switch(arguments.length){
case 0:
return js_obj__0.call(this);
default:
var G__8304 = null;
if (arguments.length > 0) {
var G__8305__i = 0, G__8305__a = new Array(arguments.length -  0);
while (G__8305__i < G__8305__a.length) {G__8305__a[G__8305__i] = arguments[G__8305__i + 0]; ++G__8305__i;}
G__8304 = new cljs.core.IndexedSeq(G__8305__a,0);
}
return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__8304);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js_obj.cljs$lang$maxFixedArity = 0;
js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
return js_obj;
})()
;
cljs.core.js_keys = (function js_keys(obj){
var keys = [];
var G__8308_8310 = obj;
var G__8309_8311 = ((function (G__8308_8310,keys){
return (function (val,key,obj__$1){
return keys.push(key);
});})(G__8308_8310,keys))
;
goog.object.forEach(G__8308_8310,G__8309_8311);

return keys;
});
cljs.core.js_delete = (function js_delete(obj,key){
return delete obj[key];
});
cljs.core.array_copy = (function array_copy(from,i,to,j,len){
var i__$1 = i;
var j__$1 = j;
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__8312 = (i__$1 + (1));
var G__8313 = (j__$1 + (1));
var G__8314 = (len__$1 - (1));
i__$1 = G__8312;
j__$1 = G__8313;
len__$1 = G__8314;
continue;
}
break;
}
});
cljs.core.array_copy_downward = (function array_copy_downward(from,i,to,j,len){
var i__$1 = (i + (len - (1)));
var j__$1 = (j + (len - (1)));
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__8315 = (i__$1 - (1));
var G__8316 = (j__$1 - (1));
var G__8317 = (len__$1 - (1));
i__$1 = G__8315;
j__$1 = G__8316;
len__$1 = G__8317;
continue;
}
break;
}
});
cljs.core.lookup_sentinel = (function (){var obj8319 = {};
return obj8319;
})();
/**
* Returns true if x is the value false, false otherwise.
*/
cljs.core.false_QMARK_ = (function false_QMARK_(x){
return x === false;
});
/**
* Returns true if x is the value true, false otherwise.
*/
cljs.core.true_QMARK_ = (function true_QMARK_(x){
return x === true;
});
cljs.core.undefined_QMARK_ = (function undefined_QMARK_(x){
return (void 0 === x);
});
/**
* Return true if s satisfies ISeq
*/
cljs.core.seq_QMARK_ = (function seq_QMARK_(s){
if((s == null)){
return false;
} else {
var G__8321 = s;
if(G__8321){
var bit__5401__auto__ = (G__8321.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__5401__auto__) || (G__8321.cljs$core$ISeq$)){
return true;
} else {
if((!G__8321.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__8321);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__8321);
}
}
});
/**
* Return true if s satisfies ISeqable
*/
cljs.core.seqable_QMARK_ = (function seqable_QMARK_(s){
var G__8323 = s;
if(G__8323){
var bit__5401__auto__ = (G__8323.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__5401__auto__) || (G__8323.cljs$core$ISeqable$)){
return true;
} else {
if((!G__8323.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__8323);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__8323);
}
});
cljs.core.boolean$ = (function boolean$(x){
if(cljs.core.truth_(x)){
return true;
} else {
return false;
}
});
cljs.core.ifn_QMARK_ = (function ifn_QMARK_(f){
var or__4720__auto__ = cljs.core.fn_QMARK_(f);
if(or__4720__auto__){
return or__4720__auto__;
} else {
var G__8327 = f;
if(G__8327){
var bit__5401__auto__ = (G__8327.cljs$lang$protocol_mask$partition0$ & (1));
if((bit__5401__auto__) || (G__8327.cljs$core$IFn$)){
return true;
} else {
if((!G__8327.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__8327);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__8327);
}
}
});
/**
* Returns true if n is an integer.
*/
cljs.core.integer_QMARK_ = (function integer_QMARK_(n){
return (typeof n === 'number') && (cljs.core.not((function (){var G__8340 = n;
return isNaN(G__8340);
})())) && (!((n === Infinity))) && (((function (){var G__8341 = n;
return parseFloat(G__8341);
})() === (function (){var G__8342 = n;
var G__8343 = (10);
return parseInt(G__8342,G__8343);
})()));
});
/**
* Returns true if key is present in the given collection, otherwise
* returns false.  Note that for numerically indexed collections like
* vectors and arrays, this tests if the numeric key is within the
* range of indexes. 'contains?' operates constant or logarithmic time;
* it will not perform a linear search for a value.  See also 'some'.
*/
cljs.core.contains_QMARK_ = (function contains_QMARK_(coll,v){
if((cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return false;
} else {
return true;
}
});
/**
* Returns the map entry for key, or nil if key not present.
*/
cljs.core.find = (function find(coll,k){
if((!((coll == null))) && (cljs.core.associative_QMARK_(coll)) && (cljs.core.contains_QMARK_(coll,k))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,k)], null);
} else {
return null;
}
});
/**
* Returns true if no two of the arguments are =
* @param {...*} var_args
*/
cljs.core.distinct_QMARK_ = (function() {
var distinct_QMARK_ = null;
var distinct_QMARK___1 = (function (x){
return true;
});
var distinct_QMARK___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var distinct_QMARK___3 = (function() { 
var G__8344__delegate = function (x,y,more){
if(!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y))){
var s = cljs.core.PersistentHashSet.fromArray([x,y], true);
var xs = more;
while(true){
var x__$1 = cljs.core.first(xs);
var etc = cljs.core.next(xs);
if(cljs.core.truth_(xs)){
if(cljs.core.contains_QMARK_(s,x__$1)){
return false;
} else {
var G__8345 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s,x__$1);
var G__8346 = etc;
s = G__8345;
xs = G__8346;
continue;
}
} else {
return true;
}
break;
}
} else {
return false;
}
};
var G__8344 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8347__i = 0, G__8347__a = new Array(arguments.length -  2);
while (G__8347__i < G__8347__a.length) {G__8347__a[G__8347__i] = arguments[G__8347__i + 2]; ++G__8347__i;}
  more = new cljs.core.IndexedSeq(G__8347__a,0);
} 
return G__8344__delegate.call(this,x,y,more);};
G__8344.cljs$lang$maxFixedArity = 2;
G__8344.cljs$lang$applyTo = (function (arglist__8348){
var x = cljs.core.first(arglist__8348);
arglist__8348 = cljs.core.next(arglist__8348);
var y = cljs.core.first(arglist__8348);
var more = cljs.core.rest(arglist__8348);
return G__8344__delegate(x,y,more);
});
G__8344.cljs$core$IFn$_invoke$arity$variadic = G__8344__delegate;
return G__8344;
})()
;
distinct_QMARK_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return distinct_QMARK___1.call(this,x);
case 2:
return distinct_QMARK___2.call(this,x,y);
default:
var G__8349 = null;
if (arguments.length > 2) {
var G__8350__i = 0, G__8350__a = new Array(arguments.length -  2);
while (G__8350__i < G__8350__a.length) {G__8350__a[G__8350__i] = arguments[G__8350__i + 2]; ++G__8350__i;}
G__8349 = new cljs.core.IndexedSeq(G__8350__a,0);
}
return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8349);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct_QMARK_.cljs$lang$maxFixedArity = 2;
distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
return distinct_QMARK_;
})()
;
/**
* Comparator. Returns a negative number, zero, or a positive number
* when x is logically 'less than', 'equal to', or 'greater than'
* y. Uses IComparable if available and google.array.defaultCompare for objects
* of the same type and special-cases nil to be less than any other object.
*/
cljs.core.compare = (function compare(x,y){
if((x === y)){
return (0);
} else {
if((x == null)){
return (-1);
} else {
if((y == null)){
return (1);
} else {
if((cljs.core.type(x) === cljs.core.type(y))){
if((function (){var G__8354 = x;
if(G__8354){
var bit__5394__auto__ = (G__8354.cljs$lang$protocol_mask$partition1$ & (2048));
if((bit__5394__auto__) || (G__8354.cljs$core$IComparable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(null,y);
} else {
var G__8355 = x;
var G__8356 = y;
return goog.array.defaultCompare(G__8355,G__8356);
}
} else {
throw (new Error("compare on non-nil objects of different types"));

}
}
}
}
});
/**
* Compare indexed collection.
*/
cljs.core.compare_indexed = (function() {
var compare_indexed = null;
var compare_indexed__2 = (function (xs,ys){
var xl = cljs.core.count(xs);
var yl = cljs.core.count(ys);
if((xl < yl)){
return (-1);
} else {
if((xl > yl)){
return (1);
} else {
return compare_indexed.cljs$core$IFn$_invoke$arity$4(xs,ys,xl,(0));

}
}
});
var compare_indexed__4 = (function (xs,ys,len,n){
while(true){
var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs,n),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys,n));
if(((d === (0))) && (((n + (1)) < len))){
var G__8361 = xs;
var G__8362 = ys;
var G__8363 = len;
var G__8364 = (n + (1));
xs = G__8361;
ys = G__8362;
len = G__8363;
n = G__8364;
continue;
} else {
return d;
}
break;
}
});
compare_indexed = function(xs,ys,len,n){
switch(arguments.length){
case 2:
return compare_indexed__2.call(this,xs,ys);
case 4:
return compare_indexed__4.call(this,xs,ys,len,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
return compare_indexed;
})()
;
/**
* Given a fn that might be boolean valued or a comparator,
* return a fn that is a comparator.
*/
cljs.core.fn__GT_comparator = (function fn__GT_comparator(f){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f,cljs.core.compare)){
return cljs.core.compare;
} else {
return (function (x,y){
var r = (function (){var G__8369 = x;
var G__8370 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8369,G__8370) : f.call(null,G__8369,G__8370));
})();
if(typeof r === 'number'){
return r;
} else {
if(cljs.core.truth_(r)){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__8371 = y;
var G__8372 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8371,G__8372) : f.call(null,G__8371,G__8372));
})())){
return (1);
} else {
return (0);
}
}
}
});
}
});
/**
* Returns a sorted sequence of the items in coll. Comp can be
* boolean-valued comparison function, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort = (function() {
var sort = null;
var sort__1 = (function (coll){
return sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare,coll);
});
var sort__2 = (function (comp,coll){
if(cljs.core.seq(coll)){
var a = (function (){var G__8378 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__8378) : cljs.core.to_array.call(null,G__8378));
})();
var G__8379_8381 = a;
var G__8380_8382 = cljs.core.fn__GT_comparator(comp);
goog.array.stableSort(G__8379_8381,G__8380_8382);

return cljs.core.seq(a);
} else {
return cljs.core.List.EMPTY;
}
});
sort = function(comp,coll){
switch(arguments.length){
case 1:
return sort__1.call(this,comp);
case 2:
return sort__2.call(this,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
return sort;
})()
;
/**
* Returns a sorted sequence of the items in coll, where the sort
* order is determined by comparing (keyfn item).  Comp can be
* boolean-valued comparison funcion, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort_by = (function() {
var sort_by = null;
var sort_by__2 = (function (keyfn,coll){
return sort_by.cljs$core$IFn$_invoke$arity$3(keyfn,cljs.core.compare,coll);
});
var sort_by__3 = (function (keyfn,comp,coll){
return cljs.core.sort.cljs$core$IFn$_invoke$arity$2((function (x,y){
return cljs.core.fn__GT_comparator(comp).call(null,(function (){var G__8388 = x;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__8388) : keyfn.call(null,G__8388));
})(),(function (){var G__8389 = y;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__8389) : keyfn.call(null,G__8389));
})());
}),coll);
});
sort_by = function(keyfn,comp,coll){
switch(arguments.length){
case 2:
return sort_by__2.call(this,keyfn,comp);
case 3:
return sort_by__3.call(this,keyfn,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
return sort_by;
})()
;
cljs.core.seq_reduce = (function() {
var seq_reduce = null;
var seq_reduce__2 = (function (f,coll){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
var G__8395 = f;
var G__8396 = cljs.core.first(s);
var G__8397 = cljs.core.next(s);
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__8395,G__8396,G__8397) : cljs.core.reduce.call(null,G__8395,G__8396,G__8397));
} else {
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
}
});
var seq_reduce__3 = (function (f,val,coll){
var val__$1 = val;
var coll__$1 = cljs.core.seq(coll);
while(true){
if(coll__$1){
var nval = (function (){var G__8398 = val__$1;
var G__8399 = cljs.core.first(coll__$1);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8398,G__8399) : f.call(null,G__8398,G__8399));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__8400 = nval;
var G__8401 = cljs.core.next(coll__$1);
val__$1 = G__8400;
coll__$1 = G__8401;
continue;
}
} else {
return val__$1;
}
break;
}
});
seq_reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return seq_reduce__2.call(this,f,val);
case 3:
return seq_reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
return seq_reduce;
})()
;
/**
* Return a random permutation of coll
*/
cljs.core.shuffle = (function shuffle(coll){
var a = (function (){var G__8405 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__8405) : cljs.core.to_array.call(null,G__8405));
})();
var G__8406_8408 = a;
goog.array.shuffle(G__8406_8408);

var G__8407 = a;
return (cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__8407) : cljs.core.vec.call(null,G__8407));
});
/**
* f should be a function of 2 arguments. If val is not supplied,
* returns the result of applying f to the first 2 items in coll, then
* applying f to that result and the 3rd item, etc. If coll contains no
* items, f must accept no arguments as well, and reduce returns the
* result of calling f with no arguments.  If coll has only 1 item, it
* is returned and f is not called.  If val is supplied, returns the
* result of applying f to val and the first item in coll, then
* applying f to that result and the 2nd item, etc. If coll contains no
* items, returns val and f is not called.
*/
cljs.core.reduce = (function() {
var reduce = null;
var reduce__2 = (function (f,coll){
if((function (){var G__8411 = coll;
if(G__8411){
var bit__5394__auto__ = (G__8411.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__5394__auto__) || (G__8411.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(null,f);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll);

}
}
}
}
});
var reduce__3 = (function (f,val,coll){
if((function (){var G__8412 = coll;
if(G__8412){
var bit__5394__auto__ = (G__8412.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__5394__auto__) || (G__8412.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(null,f,val);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,val,coll);

}
}
}
}
});
reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return reduce__2.call(this,f,val);
case 3:
return reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
return reduce;
})()
;
/**
* Reduces an associative collection. f should be a function of 3
* arguments. Returns the result of applying f to init, the first key
* and the first value in coll, then applying f to that result and the
* 2nd key and value, etc. If coll contains no entries, returns init
* and f is not called. Note that reduce-kv is supported on vectors,
* where the keys will be the ordinals.
*/
cljs.core.reduce_kv = (function reduce_kv(f,init,coll){
if(!((coll == null))){
return cljs.core._kv_reduce(coll,f,init);
} else {
return init;
}
});
cljs.core.identity = (function identity(x){
return x;
});
cljs.core.completing = (function() {
var completing = null;
var completing__1 = (function (f){
return completing.cljs$core$IFn$_invoke$arity$2(f,cljs.core.identity);
});
var completing__2 = (function (f,cf){
return (function() {
var G__8421 = null;
var G__8421__0 = (function (){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
});
var G__8421__1 = (function (x){
var G__8418 = x;
return (cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__8418) : cf.call(null,G__8418));
});
var G__8421__2 = (function (x,y){
var G__8419 = x;
var G__8420 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8419,G__8420) : f.call(null,G__8419,G__8420));
});
G__8421 = function(x,y){
switch(arguments.length){
case 0:
return G__8421__0.call(this);
case 1:
return G__8421__1.call(this,x);
case 2:
return G__8421__2.call(this,x,y);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8421.cljs$core$IFn$_invoke$arity$0 = G__8421__0;
G__8421.cljs$core$IFn$_invoke$arity$1 = G__8421__1;
G__8421.cljs$core$IFn$_invoke$arity$2 = G__8421__2;
return G__8421;
})()
});
completing = function(f,cf){
switch(arguments.length){
case 1:
return completing__1.call(this,f);
case 2:
return completing__2.call(this,f,cf);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
completing.cljs$core$IFn$_invoke$arity$1 = completing__1;
completing.cljs$core$IFn$_invoke$arity$2 = completing__2;
return completing;
})()
;
/**
* reduce with a transformation of f (xf). If init is not
* supplied, (f) will be called to produce it. f should be a reducing
* step function that accepts both 1 and 2 arguments, if it accepts
* only 2 you can add the arity-1 with 'completing'. Returns the result
* of applying (the transformed) xf to init and the first item in coll,
* then applying xf to that result and the 2nd item, etc. If coll
* contains no items, returns init and f is not called. Note that
* certain transforms may inject or skip items.
*/
cljs.core.transduce = (function() {
var transduce = null;
var transduce__3 = (function (xform,f,coll){
return transduce.cljs$core$IFn$_invoke$arity$4(xform,f,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),coll);
});
var transduce__4 = (function (xform,f,init,coll){
var f__$1 = (function (){var G__8428 = f;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__8428) : xform.call(null,G__8428));
})();
var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1,init,coll);
var G__8429 = ret;
return (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__8429) : f__$1.call(null,G__8429));
});
transduce = function(xform,f,init,coll){
switch(arguments.length){
case 3:
return transduce__3.call(this,xform,f,init);
case 4:
return transduce__4.call(this,xform,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
return transduce;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core._PLUS_ = (function() {
var _PLUS_ = null;
var _PLUS___0 = (function (){
return (0);
});
var _PLUS___1 = (function (x){
return x;
});
var _PLUS___2 = (function (x,y){
return (x + y);
});
var _PLUS___3 = (function() { 
var G__8430__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_PLUS_,(x + y),more);
};
var G__8430 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8431__i = 0, G__8431__a = new Array(arguments.length -  2);
while (G__8431__i < G__8431__a.length) {G__8431__a[G__8431__i] = arguments[G__8431__i + 2]; ++G__8431__i;}
  more = new cljs.core.IndexedSeq(G__8431__a,0);
} 
return G__8430__delegate.call(this,x,y,more);};
G__8430.cljs$lang$maxFixedArity = 2;
G__8430.cljs$lang$applyTo = (function (arglist__8432){
var x = cljs.core.first(arglist__8432);
arglist__8432 = cljs.core.next(arglist__8432);
var y = cljs.core.first(arglist__8432);
var more = cljs.core.rest(arglist__8432);
return G__8430__delegate(x,y,more);
});
G__8430.cljs$core$IFn$_invoke$arity$variadic = G__8430__delegate;
return G__8430;
})()
;
_PLUS_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _PLUS___0.call(this);
case 1:
return _PLUS___1.call(this,x);
case 2:
return _PLUS___2.call(this,x,y);
default:
var G__8433 = null;
if (arguments.length > 2) {
var G__8434__i = 0, G__8434__a = new Array(arguments.length -  2);
while (G__8434__i < G__8434__a.length) {G__8434__a[G__8434__i] = arguments[G__8434__i + 2]; ++G__8434__i;}
G__8433 = new cljs.core.IndexedSeq(G__8434__a,0);
}
return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8433);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_PLUS_.cljs$lang$maxFixedArity = 2;
_PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
_PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
_PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
_PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
_PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
return _PLUS_;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core._ = (function() {
var _ = null;
var ___1 = (function (x){
return (- x);
});
var ___2 = (function (x,y){
return (x - y);
});
var ___3 = (function() { 
var G__8435__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_,(x - y),more);
};
var G__8435 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8436__i = 0, G__8436__a = new Array(arguments.length -  2);
while (G__8436__i < G__8436__a.length) {G__8436__a[G__8436__i] = arguments[G__8436__i + 2]; ++G__8436__i;}
  more = new cljs.core.IndexedSeq(G__8436__a,0);
} 
return G__8435__delegate.call(this,x,y,more);};
G__8435.cljs$lang$maxFixedArity = 2;
G__8435.cljs$lang$applyTo = (function (arglist__8437){
var x = cljs.core.first(arglist__8437);
arglist__8437 = cljs.core.next(arglist__8437);
var y = cljs.core.first(arglist__8437);
var more = cljs.core.rest(arglist__8437);
return G__8435__delegate(x,y,more);
});
G__8435.cljs$core$IFn$_invoke$arity$variadic = G__8435__delegate;
return G__8435;
})()
;
_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return ___1.call(this,x);
case 2:
return ___2.call(this,x,y);
default:
var G__8438 = null;
if (arguments.length > 2) {
var G__8439__i = 0, G__8439__a = new Array(arguments.length -  2);
while (G__8439__i < G__8439__a.length) {G__8439__a[G__8439__i] = arguments[G__8439__i + 2]; ++G__8439__i;}
G__8438 = new cljs.core.IndexedSeq(G__8439__a,0);
}
return ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8438);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_.cljs$lang$maxFixedArity = 2;
_.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
_.cljs$core$IFn$_invoke$arity$1 = ___1;
_.cljs$core$IFn$_invoke$arity$2 = ___2;
_.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
return _;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core._STAR_ = (function() {
var _STAR_ = null;
var _STAR___0 = (function (){
return (1);
});
var _STAR___1 = (function (x){
return x;
});
var _STAR___2 = (function (x,y){
return (x * y);
});
var _STAR___3 = (function() { 
var G__8440__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_STAR_,(x * y),more);
};
var G__8440 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8441__i = 0, G__8441__a = new Array(arguments.length -  2);
while (G__8441__i < G__8441__a.length) {G__8441__a[G__8441__i] = arguments[G__8441__i + 2]; ++G__8441__i;}
  more = new cljs.core.IndexedSeq(G__8441__a,0);
} 
return G__8440__delegate.call(this,x,y,more);};
G__8440.cljs$lang$maxFixedArity = 2;
G__8440.cljs$lang$applyTo = (function (arglist__8442){
var x = cljs.core.first(arglist__8442);
arglist__8442 = cljs.core.next(arglist__8442);
var y = cljs.core.first(arglist__8442);
var more = cljs.core.rest(arglist__8442);
return G__8440__delegate(x,y,more);
});
G__8440.cljs$core$IFn$_invoke$arity$variadic = G__8440__delegate;
return G__8440;
})()
;
_STAR_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _STAR___0.call(this);
case 1:
return _STAR___1.call(this,x);
case 2:
return _STAR___2.call(this,x,y);
default:
var G__8443 = null;
if (arguments.length > 2) {
var G__8444__i = 0, G__8444__a = new Array(arguments.length -  2);
while (G__8444__i < G__8444__a.length) {G__8444__a[G__8444__i] = arguments[G__8444__i + 2]; ++G__8444__i;}
G__8443 = new cljs.core.IndexedSeq(G__8444__a,0);
}
return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8443);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_STAR_.cljs$lang$maxFixedArity = 2;
_STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
_STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
_STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
_STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
_STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
return _STAR_;
})()
;
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core._SLASH_ = (function() {
var _SLASH_ = null;
var _SLASH___1 = (function (x){
return _SLASH_.cljs$core$IFn$_invoke$arity$2((1),x);
});
var _SLASH___2 = (function (x,y){
return (x / y);
});
var _SLASH___3 = (function() { 
var G__8449__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_SLASH_,_SLASH_.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__8449 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8450__i = 0, G__8450__a = new Array(arguments.length -  2);
while (G__8450__i < G__8450__a.length) {G__8450__a[G__8450__i] = arguments[G__8450__i + 2]; ++G__8450__i;}
  more = new cljs.core.IndexedSeq(G__8450__a,0);
} 
return G__8449__delegate.call(this,x,y,more);};
G__8449.cljs$lang$maxFixedArity = 2;
G__8449.cljs$lang$applyTo = (function (arglist__8451){
var x = cljs.core.first(arglist__8451);
arglist__8451 = cljs.core.next(arglist__8451);
var y = cljs.core.first(arglist__8451);
var more = cljs.core.rest(arglist__8451);
return G__8449__delegate(x,y,more);
});
G__8449.cljs$core$IFn$_invoke$arity$variadic = G__8449__delegate;
return G__8449;
})()
;
_SLASH_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _SLASH___1.call(this,x);
case 2:
return _SLASH___2.call(this,x,y);
default:
var G__8452 = null;
if (arguments.length > 2) {
var G__8453__i = 0, G__8453__a = new Array(arguments.length -  2);
while (G__8453__i < G__8453__a.length) {G__8453__a[G__8453__i] = arguments[G__8453__i + 2]; ++G__8453__i;}
G__8452 = new cljs.core.IndexedSeq(G__8453__a,0);
}
return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8452);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_SLASH_.cljs$lang$maxFixedArity = 2;
_SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
_SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
_SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
_SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
return _SLASH_;
})()
;
/**
* Returns non-nil if nums are in monotonically increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT_ = (function() {
var _LT_ = null;
var _LT___1 = (function (x){
return true;
});
var _LT___2 = (function (x,y){
return (x < y);
});
var _LT___3 = (function() { 
var G__8454__delegate = function (x,y,more){
while(true){
if((x < y)){
if(cljs.core.next(more)){
var G__8455 = y;
var G__8456 = cljs.core.first(more);
var G__8457 = cljs.core.next(more);
x = G__8455;
y = G__8456;
more = G__8457;
continue;
} else {
return (y < cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__8454 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8458__i = 0, G__8458__a = new Array(arguments.length -  2);
while (G__8458__i < G__8458__a.length) {G__8458__a[G__8458__i] = arguments[G__8458__i + 2]; ++G__8458__i;}
  more = new cljs.core.IndexedSeq(G__8458__a,0);
} 
return G__8454__delegate.call(this,x,y,more);};
G__8454.cljs$lang$maxFixedArity = 2;
G__8454.cljs$lang$applyTo = (function (arglist__8459){
var x = cljs.core.first(arglist__8459);
arglist__8459 = cljs.core.next(arglist__8459);
var y = cljs.core.first(arglist__8459);
var more = cljs.core.rest(arglist__8459);
return G__8454__delegate(x,y,more);
});
G__8454.cljs$core$IFn$_invoke$arity$variadic = G__8454__delegate;
return G__8454;
})()
;
_LT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT___1.call(this,x);
case 2:
return _LT___2.call(this,x,y);
default:
var G__8460 = null;
if (arguments.length > 2) {
var G__8461__i = 0, G__8461__a = new Array(arguments.length -  2);
while (G__8461__i < G__8461__a.length) {G__8461__a[G__8461__i] = arguments[G__8461__i + 2]; ++G__8461__i;}
G__8460 = new cljs.core.IndexedSeq(G__8461__a,0);
}
return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8460);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT_.cljs$lang$maxFixedArity = 2;
_LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
_LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
_LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
_LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT__EQ_ = (function() {
var _LT__EQ_ = null;
var _LT__EQ___1 = (function (x){
return true;
});
var _LT__EQ___2 = (function (x,y){
return (x <= y);
});
var _LT__EQ___3 = (function() { 
var G__8462__delegate = function (x,y,more){
while(true){
if((x <= y)){
if(cljs.core.next(more)){
var G__8463 = y;
var G__8464 = cljs.core.first(more);
var G__8465 = cljs.core.next(more);
x = G__8463;
y = G__8464;
more = G__8465;
continue;
} else {
return (y <= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__8462 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8466__i = 0, G__8466__a = new Array(arguments.length -  2);
while (G__8466__i < G__8466__a.length) {G__8466__a[G__8466__i] = arguments[G__8466__i + 2]; ++G__8466__i;}
  more = new cljs.core.IndexedSeq(G__8466__a,0);
} 
return G__8462__delegate.call(this,x,y,more);};
G__8462.cljs$lang$maxFixedArity = 2;
G__8462.cljs$lang$applyTo = (function (arglist__8467){
var x = cljs.core.first(arglist__8467);
arglist__8467 = cljs.core.next(arglist__8467);
var y = cljs.core.first(arglist__8467);
var more = cljs.core.rest(arglist__8467);
return G__8462__delegate(x,y,more);
});
G__8462.cljs$core$IFn$_invoke$arity$variadic = G__8462__delegate;
return G__8462;
})()
;
_LT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT__EQ___1.call(this,x);
case 2:
return _LT__EQ___2.call(this,x,y);
default:
var G__8468 = null;
if (arguments.length > 2) {
var G__8469__i = 0, G__8469__a = new Array(arguments.length -  2);
while (G__8469__i < G__8469__a.length) {G__8469__a[G__8469__i] = arguments[G__8469__i + 2]; ++G__8469__i;}
G__8468 = new cljs.core.IndexedSeq(G__8469__a,0);
}
return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8468);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT__EQ_.cljs$lang$maxFixedArity = 2;
_LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
_LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
_LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
_LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT__EQ_;
})()
;
/**
* Returns non-nil if nums are in monotonically decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT_ = (function() {
var _GT_ = null;
var _GT___1 = (function (x){
return true;
});
var _GT___2 = (function (x,y){
return (x > y);
});
var _GT___3 = (function() { 
var G__8470__delegate = function (x,y,more){
while(true){
if((x > y)){
if(cljs.core.next(more)){
var G__8471 = y;
var G__8472 = cljs.core.first(more);
var G__8473 = cljs.core.next(more);
x = G__8471;
y = G__8472;
more = G__8473;
continue;
} else {
return (y > cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__8470 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8474__i = 0, G__8474__a = new Array(arguments.length -  2);
while (G__8474__i < G__8474__a.length) {G__8474__a[G__8474__i] = arguments[G__8474__i + 2]; ++G__8474__i;}
  more = new cljs.core.IndexedSeq(G__8474__a,0);
} 
return G__8470__delegate.call(this,x,y,more);};
G__8470.cljs$lang$maxFixedArity = 2;
G__8470.cljs$lang$applyTo = (function (arglist__8475){
var x = cljs.core.first(arglist__8475);
arglist__8475 = cljs.core.next(arglist__8475);
var y = cljs.core.first(arglist__8475);
var more = cljs.core.rest(arglist__8475);
return G__8470__delegate(x,y,more);
});
G__8470.cljs$core$IFn$_invoke$arity$variadic = G__8470__delegate;
return G__8470;
})()
;
_GT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT___1.call(this,x);
case 2:
return _GT___2.call(this,x,y);
default:
var G__8476 = null;
if (arguments.length > 2) {
var G__8477__i = 0, G__8477__a = new Array(arguments.length -  2);
while (G__8477__i < G__8477__a.length) {G__8477__a[G__8477__i] = arguments[G__8477__i + 2]; ++G__8477__i;}
G__8476 = new cljs.core.IndexedSeq(G__8477__a,0);
}
return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8476);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT_.cljs$lang$maxFixedArity = 2;
_GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
_GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
_GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
_GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT__EQ_ = (function() {
var _GT__EQ_ = null;
var _GT__EQ___1 = (function (x){
return true;
});
var _GT__EQ___2 = (function (x,y){
return (x >= y);
});
var _GT__EQ___3 = (function() { 
var G__8478__delegate = function (x,y,more){
while(true){
if((x >= y)){
if(cljs.core.next(more)){
var G__8479 = y;
var G__8480 = cljs.core.first(more);
var G__8481 = cljs.core.next(more);
x = G__8479;
y = G__8480;
more = G__8481;
continue;
} else {
return (y >= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__8478 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8482__i = 0, G__8482__a = new Array(arguments.length -  2);
while (G__8482__i < G__8482__a.length) {G__8482__a[G__8482__i] = arguments[G__8482__i + 2]; ++G__8482__i;}
  more = new cljs.core.IndexedSeq(G__8482__a,0);
} 
return G__8478__delegate.call(this,x,y,more);};
G__8478.cljs$lang$maxFixedArity = 2;
G__8478.cljs$lang$applyTo = (function (arglist__8483){
var x = cljs.core.first(arglist__8483);
arglist__8483 = cljs.core.next(arglist__8483);
var y = cljs.core.first(arglist__8483);
var more = cljs.core.rest(arglist__8483);
return G__8478__delegate(x,y,more);
});
G__8478.cljs$core$IFn$_invoke$arity$variadic = G__8478__delegate;
return G__8478;
})()
;
_GT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT__EQ___1.call(this,x);
case 2:
return _GT__EQ___2.call(this,x,y);
default:
var G__8484 = null;
if (arguments.length > 2) {
var G__8485__i = 0, G__8485__a = new Array(arguments.length -  2);
while (G__8485__i < G__8485__a.length) {G__8485__a[G__8485__i] = arguments[G__8485__i + 2]; ++G__8485__i;}
G__8484 = new cljs.core.IndexedSeq(G__8485__a,0);
}
return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8484);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT__EQ_.cljs$lang$maxFixedArity = 2;
_GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
_GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
_GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
_GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT__EQ_;
})()
;
/**
* Returns a number one less than num.
*/
cljs.core.dec = (function dec(x){
return (x - (1));
});
/**
* Returns the greatest of the nums.
* @param {...*} var_args
*/
cljs.core.max = (function() {
var max = null;
var max__1 = (function (x){
return x;
});
var max__2 = (function (x,y){
var x__5037__auto__ = x;
var y__5038__auto__ = y;
return ((x__5037__auto__ > y__5038__auto__) ? x__5037__auto__ : y__5038__auto__);
});
var max__3 = (function() { 
var G__8486__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(max,(function (){var x__5037__auto__ = x;
var y__5038__auto__ = y;
return ((x__5037__auto__ > y__5038__auto__) ? x__5037__auto__ : y__5038__auto__);
})(),more);
};
var G__8486 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8487__i = 0, G__8487__a = new Array(arguments.length -  2);
while (G__8487__i < G__8487__a.length) {G__8487__a[G__8487__i] = arguments[G__8487__i + 2]; ++G__8487__i;}
  more = new cljs.core.IndexedSeq(G__8487__a,0);
} 
return G__8486__delegate.call(this,x,y,more);};
G__8486.cljs$lang$maxFixedArity = 2;
G__8486.cljs$lang$applyTo = (function (arglist__8488){
var x = cljs.core.first(arglist__8488);
arglist__8488 = cljs.core.next(arglist__8488);
var y = cljs.core.first(arglist__8488);
var more = cljs.core.rest(arglist__8488);
return G__8486__delegate(x,y,more);
});
G__8486.cljs$core$IFn$_invoke$arity$variadic = G__8486__delegate;
return G__8486;
})()
;
max = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return max__1.call(this,x);
case 2:
return max__2.call(this,x,y);
default:
var G__8489 = null;
if (arguments.length > 2) {
var G__8490__i = 0, G__8490__a = new Array(arguments.length -  2);
while (G__8490__i < G__8490__a.length) {G__8490__a[G__8490__i] = arguments[G__8490__i + 2]; ++G__8490__i;}
G__8489 = new cljs.core.IndexedSeq(G__8490__a,0);
}
return max__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8489);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max.cljs$lang$maxFixedArity = 2;
max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
max.cljs$core$IFn$_invoke$arity$1 = max__1;
max.cljs$core$IFn$_invoke$arity$2 = max__2;
max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
return max;
})()
;
/**
* Returns the least of the nums.
* @param {...*} var_args
*/
cljs.core.min = (function() {
var min = null;
var min__1 = (function (x){
return x;
});
var min__2 = (function (x,y){
var x__5044__auto__ = x;
var y__5045__auto__ = y;
return ((x__5044__auto__ < y__5045__auto__) ? x__5044__auto__ : y__5045__auto__);
});
var min__3 = (function() { 
var G__8491__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(min,(function (){var x__5044__auto__ = x;
var y__5045__auto__ = y;
return ((x__5044__auto__ < y__5045__auto__) ? x__5044__auto__ : y__5045__auto__);
})(),more);
};
var G__8491 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8492__i = 0, G__8492__a = new Array(arguments.length -  2);
while (G__8492__i < G__8492__a.length) {G__8492__a[G__8492__i] = arguments[G__8492__i + 2]; ++G__8492__i;}
  more = new cljs.core.IndexedSeq(G__8492__a,0);
} 
return G__8491__delegate.call(this,x,y,more);};
G__8491.cljs$lang$maxFixedArity = 2;
G__8491.cljs$lang$applyTo = (function (arglist__8493){
var x = cljs.core.first(arglist__8493);
arglist__8493 = cljs.core.next(arglist__8493);
var y = cljs.core.first(arglist__8493);
var more = cljs.core.rest(arglist__8493);
return G__8491__delegate(x,y,more);
});
G__8491.cljs$core$IFn$_invoke$arity$variadic = G__8491__delegate;
return G__8491;
})()
;
min = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return min__1.call(this,x);
case 2:
return min__2.call(this,x,y);
default:
var G__8494 = null;
if (arguments.length > 2) {
var G__8495__i = 0, G__8495__a = new Array(arguments.length -  2);
while (G__8495__i < G__8495__a.length) {G__8495__a[G__8495__i] = arguments[G__8495__i + 2]; ++G__8495__i;}
G__8494 = new cljs.core.IndexedSeq(G__8495__a,0);
}
return min__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8494);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min.cljs$lang$maxFixedArity = 2;
min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
min.cljs$core$IFn$_invoke$arity$1 = min__1;
min.cljs$core$IFn$_invoke$arity$2 = min__2;
min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
return min;
})()
;
cljs.core.byte$ = (function byte$(x){
return x;
});
/**
* Coerce to char
*/
cljs.core.char$ = (function char$(x){
if(typeof x === 'number'){
return String.fromCharCode(x);
} else {
if((typeof x === 'string') && ((x.length === (1)))){
return x;
} else {
throw (new Error("Argument to char must be a character or number"));

}
}
});
cljs.core.short$ = (function short$(x){
return x;
});
cljs.core.float$ = (function float$(x){
return x;
});
cljs.core.double$ = (function double$(x){
return x;
});
cljs.core.unchecked_byte = (function unchecked_byte(x){
return x;
});
cljs.core.unchecked_char = (function unchecked_char(x){
return x;
});
cljs.core.unchecked_short = (function unchecked_short(x){
return x;
});
cljs.core.unchecked_float = (function unchecked_float(x){
return x;
});
cljs.core.unchecked_double = (function unchecked_double(x){
return x;
});
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add = (function() {
var unchecked_add = null;
var unchecked_add__0 = (function (){
return (0);
});
var unchecked_add__1 = (function (x){
return x;
});
var unchecked_add__2 = (function (x,y){
return (x + y);
});
var unchecked_add__3 = (function() { 
var G__8496__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add,(x + y),more);
};
var G__8496 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8497__i = 0, G__8497__a = new Array(arguments.length -  2);
while (G__8497__i < G__8497__a.length) {G__8497__a[G__8497__i] = arguments[G__8497__i + 2]; ++G__8497__i;}
  more = new cljs.core.IndexedSeq(G__8497__a,0);
} 
return G__8496__delegate.call(this,x,y,more);};
G__8496.cljs$lang$maxFixedArity = 2;
G__8496.cljs$lang$applyTo = (function (arglist__8498){
var x = cljs.core.first(arglist__8498);
arglist__8498 = cljs.core.next(arglist__8498);
var y = cljs.core.first(arglist__8498);
var more = cljs.core.rest(arglist__8498);
return G__8496__delegate(x,y,more);
});
G__8496.cljs$core$IFn$_invoke$arity$variadic = G__8496__delegate;
return G__8496;
})()
;
unchecked_add = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add__0.call(this);
case 1:
return unchecked_add__1.call(this,x);
case 2:
return unchecked_add__2.call(this,x,y);
default:
var G__8499 = null;
if (arguments.length > 2) {
var G__8500__i = 0, G__8500__a = new Array(arguments.length -  2);
while (G__8500__i < G__8500__a.length) {G__8500__a[G__8500__i] = arguments[G__8500__i + 2]; ++G__8500__i;}
G__8499 = new cljs.core.IndexedSeq(G__8500__a,0);
}
return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8499);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add.cljs$lang$maxFixedArity = 2;
unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add_int = (function() {
var unchecked_add_int = null;
var unchecked_add_int__0 = (function (){
return (0);
});
var unchecked_add_int__1 = (function (x){
return x;
});
var unchecked_add_int__2 = (function (x,y){
return (x + y);
});
var unchecked_add_int__3 = (function() { 
var G__8501__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add_int,(x + y),more);
};
var G__8501 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8502__i = 0, G__8502__a = new Array(arguments.length -  2);
while (G__8502__i < G__8502__a.length) {G__8502__a[G__8502__i] = arguments[G__8502__i + 2]; ++G__8502__i;}
  more = new cljs.core.IndexedSeq(G__8502__a,0);
} 
return G__8501__delegate.call(this,x,y,more);};
G__8501.cljs$lang$maxFixedArity = 2;
G__8501.cljs$lang$applyTo = (function (arglist__8503){
var x = cljs.core.first(arglist__8503);
arglist__8503 = cljs.core.next(arglist__8503);
var y = cljs.core.first(arglist__8503);
var more = cljs.core.rest(arglist__8503);
return G__8501__delegate(x,y,more);
});
G__8501.cljs$core$IFn$_invoke$arity$variadic = G__8501__delegate;
return G__8501;
})()
;
unchecked_add_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add_int__0.call(this);
case 1:
return unchecked_add_int__1.call(this,x);
case 2:
return unchecked_add_int__2.call(this,x,y);
default:
var G__8504 = null;
if (arguments.length > 2) {
var G__8505__i = 0, G__8505__a = new Array(arguments.length -  2);
while (G__8505__i < G__8505__a.length) {G__8505__a[G__8505__i] = arguments[G__8505__i + 2]; ++G__8505__i;}
G__8504 = new cljs.core.IndexedSeq(G__8505__a,0);
}
return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8504);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add_int.cljs$lang$maxFixedArity = 2;
unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add_int;
})()
;
cljs.core.unchecked_dec = (function unchecked_dec(x){
return (x - (1));
});
cljs.core.unchecked_dec_int = (function unchecked_dec_int(x){
return (x - (1));
});
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core.unchecked_divide_int = (function() {
var unchecked_divide_int = null;
var unchecked_divide_int__1 = (function (x){
return unchecked_divide_int.cljs$core$IFn$_invoke$arity$2((1),x);
});
var unchecked_divide_int__2 = (function (x,y){
return (x / y);
});
var unchecked_divide_int__3 = (function() { 
var G__8510__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_divide_int,unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__8510 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8511__i = 0, G__8511__a = new Array(arguments.length -  2);
while (G__8511__i < G__8511__a.length) {G__8511__a[G__8511__i] = arguments[G__8511__i + 2]; ++G__8511__i;}
  more = new cljs.core.IndexedSeq(G__8511__a,0);
} 
return G__8510__delegate.call(this,x,y,more);};
G__8510.cljs$lang$maxFixedArity = 2;
G__8510.cljs$lang$applyTo = (function (arglist__8512){
var x = cljs.core.first(arglist__8512);
arglist__8512 = cljs.core.next(arglist__8512);
var y = cljs.core.first(arglist__8512);
var more = cljs.core.rest(arglist__8512);
return G__8510__delegate(x,y,more);
});
G__8510.cljs$core$IFn$_invoke$arity$variadic = G__8510__delegate;
return G__8510;
})()
;
unchecked_divide_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_divide_int__1.call(this,x);
case 2:
return unchecked_divide_int__2.call(this,x,y);
default:
var G__8513 = null;
if (arguments.length > 2) {
var G__8514__i = 0, G__8514__a = new Array(arguments.length -  2);
while (G__8514__i < G__8514__a.length) {G__8514__a[G__8514__i] = arguments[G__8514__i + 2]; ++G__8514__i;}
G__8513 = new cljs.core.IndexedSeq(G__8514__a,0);
}
return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8513);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_divide_int.cljs$lang$maxFixedArity = 2;
unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_divide_int;
})()
;
cljs.core.unchecked_inc = (function unchecked_inc(x){
return (x + (1));
});
cljs.core.unchecked_inc_int = (function unchecked_inc_int(x){
return (x + (1));
});
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply = (function() {
var unchecked_multiply = null;
var unchecked_multiply__0 = (function (){
return (1);
});
var unchecked_multiply__1 = (function (x){
return x;
});
var unchecked_multiply__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply__3 = (function() { 
var G__8515__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply,(x * y),more);
};
var G__8515 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8516__i = 0, G__8516__a = new Array(arguments.length -  2);
while (G__8516__i < G__8516__a.length) {G__8516__a[G__8516__i] = arguments[G__8516__i + 2]; ++G__8516__i;}
  more = new cljs.core.IndexedSeq(G__8516__a,0);
} 
return G__8515__delegate.call(this,x,y,more);};
G__8515.cljs$lang$maxFixedArity = 2;
G__8515.cljs$lang$applyTo = (function (arglist__8517){
var x = cljs.core.first(arglist__8517);
arglist__8517 = cljs.core.next(arglist__8517);
var y = cljs.core.first(arglist__8517);
var more = cljs.core.rest(arglist__8517);
return G__8515__delegate(x,y,more);
});
G__8515.cljs$core$IFn$_invoke$arity$variadic = G__8515__delegate;
return G__8515;
})()
;
unchecked_multiply = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply__0.call(this);
case 1:
return unchecked_multiply__1.call(this,x);
case 2:
return unchecked_multiply__2.call(this,x,y);
default:
var G__8518 = null;
if (arguments.length > 2) {
var G__8519__i = 0, G__8519__a = new Array(arguments.length -  2);
while (G__8519__i < G__8519__a.length) {G__8519__a[G__8519__i] = arguments[G__8519__i + 2]; ++G__8519__i;}
G__8518 = new cljs.core.IndexedSeq(G__8519__a,0);
}
return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8518);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply.cljs$lang$maxFixedArity = 2;
unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply_int = (function() {
var unchecked_multiply_int = null;
var unchecked_multiply_int__0 = (function (){
return (1);
});
var unchecked_multiply_int__1 = (function (x){
return x;
});
var unchecked_multiply_int__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply_int__3 = (function() { 
var G__8520__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply_int,(x * y),more);
};
var G__8520 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8521__i = 0, G__8521__a = new Array(arguments.length -  2);
while (G__8521__i < G__8521__a.length) {G__8521__a[G__8521__i] = arguments[G__8521__i + 2]; ++G__8521__i;}
  more = new cljs.core.IndexedSeq(G__8521__a,0);
} 
return G__8520__delegate.call(this,x,y,more);};
G__8520.cljs$lang$maxFixedArity = 2;
G__8520.cljs$lang$applyTo = (function (arglist__8522){
var x = cljs.core.first(arglist__8522);
arglist__8522 = cljs.core.next(arglist__8522);
var y = cljs.core.first(arglist__8522);
var more = cljs.core.rest(arglist__8522);
return G__8520__delegate(x,y,more);
});
G__8520.cljs$core$IFn$_invoke$arity$variadic = G__8520__delegate;
return G__8520;
})()
;
unchecked_multiply_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply_int__0.call(this);
case 1:
return unchecked_multiply_int__1.call(this,x);
case 2:
return unchecked_multiply_int__2.call(this,x,y);
default:
var G__8523 = null;
if (arguments.length > 2) {
var G__8524__i = 0, G__8524__a = new Array(arguments.length -  2);
while (G__8524__i < G__8524__a.length) {G__8524__a[G__8524__i] = arguments[G__8524__i + 2]; ++G__8524__i;}
G__8523 = new cljs.core.IndexedSeq(G__8524__a,0);
}
return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8523);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply_int;
})()
;
cljs.core.unchecked_negate = (function unchecked_negate(x){
return (- x);
});
cljs.core.unchecked_negate_int = (function unchecked_negate_int(x){
return (- x);
});
cljs.core.unchecked_remainder_int = (function unchecked_remainder_int(x,n){
var G__8527 = x;
var G__8528 = n;
return (cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__8527,G__8528) : cljs.core.mod.call(null,G__8527,G__8528));
});
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract = (function() {
var unchecked_subtract = null;
var unchecked_subtract__1 = (function (x){
return (- x);
});
var unchecked_subtract__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract__3 = (function() { 
var G__8529__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract,(x - y),more);
};
var G__8529 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8530__i = 0, G__8530__a = new Array(arguments.length -  2);
while (G__8530__i < G__8530__a.length) {G__8530__a[G__8530__i] = arguments[G__8530__i + 2]; ++G__8530__i;}
  more = new cljs.core.IndexedSeq(G__8530__a,0);
} 
return G__8529__delegate.call(this,x,y,more);};
G__8529.cljs$lang$maxFixedArity = 2;
G__8529.cljs$lang$applyTo = (function (arglist__8531){
var x = cljs.core.first(arglist__8531);
arglist__8531 = cljs.core.next(arglist__8531);
var y = cljs.core.first(arglist__8531);
var more = cljs.core.rest(arglist__8531);
return G__8529__delegate(x,y,more);
});
G__8529.cljs$core$IFn$_invoke$arity$variadic = G__8529__delegate;
return G__8529;
})()
;
unchecked_subtract = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract__1.call(this,x);
case 2:
return unchecked_subtract__2.call(this,x,y);
default:
var G__8532 = null;
if (arguments.length > 2) {
var G__8533__i = 0, G__8533__a = new Array(arguments.length -  2);
while (G__8533__i < G__8533__a.length) {G__8533__a[G__8533__i] = arguments[G__8533__i + 2]; ++G__8533__i;}
G__8532 = new cljs.core.IndexedSeq(G__8533__a,0);
}
return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8532);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract.cljs$lang$maxFixedArity = 2;
unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract_int = (function() {
var unchecked_subtract_int = null;
var unchecked_subtract_int__1 = (function (x){
return (- x);
});
var unchecked_subtract_int__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract_int__3 = (function() { 
var G__8534__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract_int,(x - y),more);
};
var G__8534 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8535__i = 0, G__8535__a = new Array(arguments.length -  2);
while (G__8535__i < G__8535__a.length) {G__8535__a[G__8535__i] = arguments[G__8535__i + 2]; ++G__8535__i;}
  more = new cljs.core.IndexedSeq(G__8535__a,0);
} 
return G__8534__delegate.call(this,x,y,more);};
G__8534.cljs$lang$maxFixedArity = 2;
G__8534.cljs$lang$applyTo = (function (arglist__8536){
var x = cljs.core.first(arglist__8536);
arglist__8536 = cljs.core.next(arglist__8536);
var y = cljs.core.first(arglist__8536);
var more = cljs.core.rest(arglist__8536);
return G__8534__delegate(x,y,more);
});
G__8534.cljs$core$IFn$_invoke$arity$variadic = G__8534__delegate;
return G__8534;
})()
;
unchecked_subtract_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract_int__1.call(this,x);
case 2:
return unchecked_subtract_int__2.call(this,x,y);
default:
var G__8537 = null;
if (arguments.length > 2) {
var G__8538__i = 0, G__8538__a = new Array(arguments.length -  2);
while (G__8538__i < G__8538__a.length) {G__8538__a[G__8538__i] = arguments[G__8538__i + 2]; ++G__8538__i;}
G__8537 = new cljs.core.IndexedSeq(G__8538__a,0);
}
return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8537);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract_int;
})()
;
cljs.core.fix = (function fix(q){
if((q >= (0))){
var G__8541 = q;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__8541) : Math.floor.call(null,G__8541));
} else {
var G__8542 = q;
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__8542) : Math.ceil.call(null,G__8542));
}
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.int$ = (function int$(x){
return (x | (0));
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.unchecked_int = (function unchecked_int(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.long$ = (function long$(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.unchecked_long = (function unchecked_long(x){
return cljs.core.fix(x);
});
cljs.core.booleans = (function booleans(x){
return x;
});
cljs.core.bytes = (function bytes(x){
return x;
});
cljs.core.chars = (function chars(x){
return x;
});
cljs.core.shorts = (function shorts(x){
return x;
});
cljs.core.ints = (function ints(x){
return x;
});
cljs.core.floats = (function floats(x){
return x;
});
cljs.core.doubles = (function doubles(x){
return x;
});
cljs.core.longs = (function longs(x){
return x;
});
/**
* Modulus of num and div with original javascript behavior. i.e. bug for negative numbers
*/
cljs.core.js_mod = (function js_mod(n,d){
return (n % d);
});
/**
* Modulus of num and div. Truncates toward negative infinity.
*/
cljs.core.mod = (function mod(n,d){
return (((n % d) + d) % d);
});
/**
* quot[ient] of dividing numerator by denominator.
*/
cljs.core.quot = (function quot(n,d){
var rem = (n % d);
return cljs.core.fix(((n - rem) / d));
});
/**
* remainder of dividing numerator by denominator.
*/
cljs.core.rem = (function rem(n,d){
var q = cljs.core.quot(n,d);
return (n - (d * q));
});
/**
* Bitwise exclusive or
* @param {...*} var_args
*/
cljs.core.bit_xor = (function() {
var bit_xor = null;
var bit_xor__2 = (function (x,y){
return (x ^ y);
});
var bit_xor__3 = (function() { 
var G__8543__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_xor,(x ^ y),more);
};
var G__8543 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8544__i = 0, G__8544__a = new Array(arguments.length -  2);
while (G__8544__i < G__8544__a.length) {G__8544__a[G__8544__i] = arguments[G__8544__i + 2]; ++G__8544__i;}
  more = new cljs.core.IndexedSeq(G__8544__a,0);
} 
return G__8543__delegate.call(this,x,y,more);};
G__8543.cljs$lang$maxFixedArity = 2;
G__8543.cljs$lang$applyTo = (function (arglist__8545){
var x = cljs.core.first(arglist__8545);
arglist__8545 = cljs.core.next(arglist__8545);
var y = cljs.core.first(arglist__8545);
var more = cljs.core.rest(arglist__8545);
return G__8543__delegate(x,y,more);
});
G__8543.cljs$core$IFn$_invoke$arity$variadic = G__8543__delegate;
return G__8543;
})()
;
bit_xor = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_xor__2.call(this,x,y);
default:
var G__8546 = null;
if (arguments.length > 2) {
var G__8547__i = 0, G__8547__a = new Array(arguments.length -  2);
while (G__8547__i < G__8547__a.length) {G__8547__a[G__8547__i] = arguments[G__8547__i + 2]; ++G__8547__i;}
G__8546 = new cljs.core.IndexedSeq(G__8547__a,0);
}
return bit_xor__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8546);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_xor.cljs$lang$maxFixedArity = 2;
bit_xor.cljs$lang$applyTo = bit_xor__3.cljs$lang$applyTo;
bit_xor.cljs$core$IFn$_invoke$arity$2 = bit_xor__2;
bit_xor.cljs$core$IFn$_invoke$arity$variadic = bit_xor__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_xor;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and = (function() {
var bit_and = null;
var bit_and__2 = (function (x,y){
return (x & y);
});
var bit_and__3 = (function() { 
var G__8548__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and,(x & y),more);
};
var G__8548 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8549__i = 0, G__8549__a = new Array(arguments.length -  2);
while (G__8549__i < G__8549__a.length) {G__8549__a[G__8549__i] = arguments[G__8549__i + 2]; ++G__8549__i;}
  more = new cljs.core.IndexedSeq(G__8549__a,0);
} 
return G__8548__delegate.call(this,x,y,more);};
G__8548.cljs$lang$maxFixedArity = 2;
G__8548.cljs$lang$applyTo = (function (arglist__8550){
var x = cljs.core.first(arglist__8550);
arglist__8550 = cljs.core.next(arglist__8550);
var y = cljs.core.first(arglist__8550);
var more = cljs.core.rest(arglist__8550);
return G__8548__delegate(x,y,more);
});
G__8548.cljs$core$IFn$_invoke$arity$variadic = G__8548__delegate;
return G__8548;
})()
;
bit_and = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and__2.call(this,x,y);
default:
var G__8551 = null;
if (arguments.length > 2) {
var G__8552__i = 0, G__8552__a = new Array(arguments.length -  2);
while (G__8552__i < G__8552__a.length) {G__8552__a[G__8552__i] = arguments[G__8552__i + 2]; ++G__8552__i;}
G__8551 = new cljs.core.IndexedSeq(G__8552__a,0);
}
return bit_and__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8551);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and.cljs$lang$maxFixedArity = 2;
bit_and.cljs$lang$applyTo = bit_and__3.cljs$lang$applyTo;
bit_and.cljs$core$IFn$_invoke$arity$2 = bit_and__2;
bit_and.cljs$core$IFn$_invoke$arity$variadic = bit_and__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and;
})()
;
/**
* Bitwise or
* @param {...*} var_args
*/
cljs.core.bit_or = (function() {
var bit_or = null;
var bit_or__2 = (function (x,y){
return (x | y);
});
var bit_or__3 = (function() { 
var G__8553__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_or,(x | y),more);
};
var G__8553 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8554__i = 0, G__8554__a = new Array(arguments.length -  2);
while (G__8554__i < G__8554__a.length) {G__8554__a[G__8554__i] = arguments[G__8554__i + 2]; ++G__8554__i;}
  more = new cljs.core.IndexedSeq(G__8554__a,0);
} 
return G__8553__delegate.call(this,x,y,more);};
G__8553.cljs$lang$maxFixedArity = 2;
G__8553.cljs$lang$applyTo = (function (arglist__8555){
var x = cljs.core.first(arglist__8555);
arglist__8555 = cljs.core.next(arglist__8555);
var y = cljs.core.first(arglist__8555);
var more = cljs.core.rest(arglist__8555);
return G__8553__delegate(x,y,more);
});
G__8553.cljs$core$IFn$_invoke$arity$variadic = G__8553__delegate;
return G__8553;
})()
;
bit_or = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_or__2.call(this,x,y);
default:
var G__8556 = null;
if (arguments.length > 2) {
var G__8557__i = 0, G__8557__a = new Array(arguments.length -  2);
while (G__8557__i < G__8557__a.length) {G__8557__a[G__8557__i] = arguments[G__8557__i + 2]; ++G__8557__i;}
G__8556 = new cljs.core.IndexedSeq(G__8557__a,0);
}
return bit_or__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8556);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_or.cljs$lang$maxFixedArity = 2;
bit_or.cljs$lang$applyTo = bit_or__3.cljs$lang$applyTo;
bit_or.cljs$core$IFn$_invoke$arity$2 = bit_or__2;
bit_or.cljs$core$IFn$_invoke$arity$variadic = bit_or__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_or;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and_not = (function() {
var bit_and_not = null;
var bit_and_not__2 = (function (x,y){
return (x & ~y);
});
var bit_and_not__3 = (function() { 
var G__8558__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and_not,(x & ~y),more);
};
var G__8558 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8559__i = 0, G__8559__a = new Array(arguments.length -  2);
while (G__8559__i < G__8559__a.length) {G__8559__a[G__8559__i] = arguments[G__8559__i + 2]; ++G__8559__i;}
  more = new cljs.core.IndexedSeq(G__8559__a,0);
} 
return G__8558__delegate.call(this,x,y,more);};
G__8558.cljs$lang$maxFixedArity = 2;
G__8558.cljs$lang$applyTo = (function (arglist__8560){
var x = cljs.core.first(arglist__8560);
arglist__8560 = cljs.core.next(arglist__8560);
var y = cljs.core.first(arglist__8560);
var more = cljs.core.rest(arglist__8560);
return G__8558__delegate(x,y,more);
});
G__8558.cljs$core$IFn$_invoke$arity$variadic = G__8558__delegate;
return G__8558;
})()
;
bit_and_not = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and_not__2.call(this,x,y);
default:
var G__8561 = null;
if (arguments.length > 2) {
var G__8562__i = 0, G__8562__a = new Array(arguments.length -  2);
while (G__8562__i < G__8562__a.length) {G__8562__a[G__8562__i] = arguments[G__8562__i + 2]; ++G__8562__i;}
G__8561 = new cljs.core.IndexedSeq(G__8562__a,0);
}
return bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8561);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and_not.cljs$lang$maxFixedArity = 2;
bit_and_not.cljs$lang$applyTo = bit_and_not__3.cljs$lang$applyTo;
bit_and_not.cljs$core$IFn$_invoke$arity$2 = bit_and_not__2;
bit_and_not.cljs$core$IFn$_invoke$arity$variadic = bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and_not;
})()
;
/**
* Clear bit at index n
*/
cljs.core.bit_clear = (function bit_clear(x,n){
return (x & ~(1 << n));
});
/**
* Flip bit at index n
*/
cljs.core.bit_flip = (function bit_flip(x,n){
return (x ^ (1 << n));
});
/**
* Bitwise complement
*/
cljs.core.bit_not = (function bit_not(x){
return (~ x);
});
/**
* Set bit at index n
*/
cljs.core.bit_set = (function bit_set(x,n){
return (x | (1 << n));
});
/**
* Test bit at index n
*/
cljs.core.bit_test = (function bit_test(x,n){
return ((x & (1 << n)) != 0);
});
/**
* Bitwise shift left
*/
cljs.core.bit_shift_left = (function bit_shift_left(x,n){
return (x << n);
});
/**
* Bitwise shift right
*/
cljs.core.bit_shift_right = (function bit_shift_right(x,n){
return (x >> n);
});
/**
* DEPRECATED: Bitwise shift right with zero fill
*/
cljs.core.bit_shift_right_zero_fill = (function bit_shift_right_zero_fill(x,n){
return (x >>> n);
});
/**
* Bitwise shift right with zero fill
*/
cljs.core.unsigned_bit_shift_right = (function unsigned_bit_shift_right(x,n){
return (x >>> n);
});
/**
* Counts the number of bits set in n
*/
cljs.core.bit_count = (function bit_count(v){
var v__$1 = (v - ((v >> (1)) & (1431655765)));
var v__$2 = ((v__$1 & (858993459)) + ((v__$1 >> (2)) & (858993459)));
return ((((v__$2 + (v__$2 >> (4))) & (252645135)) * (16843009)) >> (24));
});
/**
* Returns non-nil if nums all have the equivalent
* value, otherwise false. Behavior on non nums is
* undefined.
* @param {...*} var_args
*/
cljs.core._EQ__EQ_ = (function() {
var _EQ__EQ_ = null;
var _EQ__EQ___1 = (function (x){
return true;
});
var _EQ__EQ___2 = (function (x,y){
return cljs.core._equiv(x,y);
});
var _EQ__EQ___3 = (function() { 
var G__8567__delegate = function (x,y,more){
while(true){
if(_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__8568 = y;
var G__8569 = cljs.core.first(more);
var G__8570 = cljs.core.next(more);
x = G__8568;
y = G__8569;
more = G__8570;
continue;
} else {
return _EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__8567 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8571__i = 0, G__8571__a = new Array(arguments.length -  2);
while (G__8571__i < G__8571__a.length) {G__8571__a[G__8571__i] = arguments[G__8571__i + 2]; ++G__8571__i;}
  more = new cljs.core.IndexedSeq(G__8571__a,0);
} 
return G__8567__delegate.call(this,x,y,more);};
G__8567.cljs$lang$maxFixedArity = 2;
G__8567.cljs$lang$applyTo = (function (arglist__8572){
var x = cljs.core.first(arglist__8572);
arglist__8572 = cljs.core.next(arglist__8572);
var y = cljs.core.first(arglist__8572);
var more = cljs.core.rest(arglist__8572);
return G__8567__delegate(x,y,more);
});
G__8567.cljs$core$IFn$_invoke$arity$variadic = G__8567__delegate;
return G__8567;
})()
;
_EQ__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ__EQ___1.call(this,x);
case 2:
return _EQ__EQ___2.call(this,x,y);
default:
var G__8573 = null;
if (arguments.length > 2) {
var G__8574__i = 0, G__8574__a = new Array(arguments.length -  2);
while (G__8574__i < G__8574__a.length) {G__8574__a[G__8574__i] = arguments[G__8574__i + 2]; ++G__8574__i;}
G__8573 = new cljs.core.IndexedSeq(G__8574__a,0);
}
return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8573);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ__EQ_.cljs$lang$maxFixedArity = 2;
_EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ__EQ_;
})()
;
/**
* Returns true if num is greater than zero, else false
*/
cljs.core.pos_QMARK_ = (function pos_QMARK_(n){
return (n > (0));
});
cljs.core.zero_QMARK_ = (function zero_QMARK_(n){
return (n === (0));
});
/**
* Returns true if num is less than zero, else false
*/
cljs.core.neg_QMARK_ = (function neg_QMARK_(x){
return (x < (0));
});
/**
* Returns the nth next of coll, (seq coll) when n is 0.
*/
cljs.core.nthnext = (function nthnext(coll,n){
var n__$1 = n;
var xs = cljs.core.seq(coll);
while(true){
if((xs) && ((n__$1 > (0)))){
var G__8575 = (n__$1 - (1));
var G__8576 = cljs.core.next(xs);
n__$1 = G__8575;
xs = G__8576;
continue;
} else {
return xs;
}
break;
}
});
/**
* With no args, returns the empty string. With one arg x, returns
* x.toString().  (str nil) returns the empty string. With more than
* one arg, returns the concatenation of the str values of the args.
* @param {...*} var_args
*/
cljs.core.str = (function() {
var str = null;
var str__0 = (function (){
return "";
});
var str__1 = (function (x){
if((x == null)){
return "";
} else {
var G__8580 = x;
return goog.string.buildString(G__8580);
}
});
var str__2 = (function() { 
var G__8581__delegate = function (x,ys){
var sb = (new goog.string.StringBuffer(str.cljs$core$IFn$_invoke$arity$1(x)));
var more = ys;
while(true){
if(cljs.core.truth_(more)){
var G__8582 = sb.append(str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
var G__8583 = cljs.core.next(more);
sb = G__8582;
more = G__8583;
continue;
} else {
return sb.toString();
}
break;
}
};
var G__8581 = function (x,var_args){
var ys = null;
if (arguments.length > 1) {
var G__8584__i = 0, G__8584__a = new Array(arguments.length -  1);
while (G__8584__i < G__8584__a.length) {G__8584__a[G__8584__i] = arguments[G__8584__i + 1]; ++G__8584__i;}
  ys = new cljs.core.IndexedSeq(G__8584__a,0);
} 
return G__8581__delegate.call(this,x,ys);};
G__8581.cljs$lang$maxFixedArity = 1;
G__8581.cljs$lang$applyTo = (function (arglist__8585){
var x = cljs.core.first(arglist__8585);
var ys = cljs.core.rest(arglist__8585);
return G__8581__delegate(x,ys);
});
G__8581.cljs$core$IFn$_invoke$arity$variadic = G__8581__delegate;
return G__8581;
})()
;
str = function(x,var_args){
var ys = var_args;
switch(arguments.length){
case 0:
return str__0.call(this);
case 1:
return str__1.call(this,x);
default:
var G__8586 = null;
if (arguments.length > 1) {
var G__8587__i = 0, G__8587__a = new Array(arguments.length -  1);
while (G__8587__i < G__8587__a.length) {G__8587__a[G__8587__i] = arguments[G__8587__i + 1]; ++G__8587__i;}
G__8586 = new cljs.core.IndexedSeq(G__8587__a,0);
}
return str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__8586);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
str.cljs$lang$maxFixedArity = 1;
str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
str.cljs$core$IFn$_invoke$arity$0 = str__0;
str.cljs$core$IFn$_invoke$arity$1 = str__1;
str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
return str;
})()
;
/**
* Returns the substring of s beginning at start inclusive, and ending
* at end (defaults to length of string), exclusive.
*/
cljs.core.subs = (function() {
var subs = null;
var subs__2 = (function (s,start){
return s.substring(start);
});
var subs__3 = (function (s,start,end){
return s.substring(start,end);
});
subs = function(s,start,end){
switch(arguments.length){
case 2:
return subs__2.call(this,s,start);
case 3:
return subs__3.call(this,s,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
return subs;
})()
;

/**
* Assumes x is sequential. Returns true if x equals y, otherwise
* returns false.
*/
cljs.core.equiv_sequential = (function equiv_sequential(x,y){
return cljs.core.boolean$(((cljs.core.sequential_QMARK_(y))?(((cljs.core.counted_QMARK_(x)) && (cljs.core.counted_QMARK_(y)) && (!((cljs.core.count(x) === cljs.core.count(y)))))?false:(function (){var xs = cljs.core.seq(x);
var ys = cljs.core.seq(y);
while(true){
if((xs == null)){
return (ys == null);
} else {
if((ys == null)){
return false;
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs),cljs.core.first(ys))){
var G__8588 = cljs.core.next(xs);
var G__8589 = cljs.core.next(ys);
xs = G__8588;
ys = G__8589;
continue;
} else {
return false;

}
}
}
break;
}
})()):null));
});
cljs.core.hash_coll = (function hash_coll(coll){
if(cljs.core.seq(coll)){
var res = cljs.core.hash(cljs.core.first(coll));
var s = cljs.core.next(coll);
while(true){
if((s == null)){
return res;
} else {
var G__8590 = cljs.core.hash_combine(res,cljs.core.hash(cljs.core.first(s)));
var G__8591 = cljs.core.next(s);
res = G__8590;
s = G__8591;
continue;
}
break;
}
} else {
return (0);
}
});

cljs.core.hash_imap = (function hash_imap(m){
var h = (0);
var s = cljs.core.seq(m);
while(true){
if(s){
var e = cljs.core.first(s);
var G__8596 = ((h + (cljs.core.hash((function (){var G__8594 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__8594) : cljs.core.key.call(null,G__8594));
})()) ^ cljs.core.hash((function (){var G__8595 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__8595) : cljs.core.val.call(null,G__8595));
})()))) % (4503599627370496));
var G__8597 = cljs.core.next(s);
h = G__8596;
s = G__8597;
continue;
} else {
return h;
}
break;
}
});
cljs.core.hash_iset = (function hash_iset(s){
var h = (0);
var s__$1 = cljs.core.seq(s);
while(true){
if(s__$1){
var e = cljs.core.first(s__$1);
var G__8598 = ((h + cljs.core.hash(e)) % (4503599627370496));
var G__8599 = cljs.core.next(s__$1);
h = G__8598;
s__$1 = G__8599;
continue;
} else {
return h;
}
break;
}
});


/**
* Takes a JavaScript object and a map of names to functions and
* attaches said functions as methods on the object.  Any references to
* JavaScript's implicit this (via the this-as macro) will resolve to the
* object that the function is attached.
*/
cljs.core.extend_object_BANG_ = (function extend_object_BANG_(obj,fn_map){
var seq__8610_8620 = cljs.core.seq(fn_map);
var chunk__8611_8621 = null;
var count__8612_8622 = (0);
var i__8613_8623 = (0);
while(true){
if((i__8613_8623 < count__8612_8622)){
var vec__8614_8624 = chunk__8611_8621.cljs$core$IIndexed$_nth$arity$2(null,i__8613_8623);
var key_name_8625 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8614_8624,(0),null);
var f_8626 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8614_8624,(1),null);
var str_name_8627 = (function (){var G__8615 = key_name_8625;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__8615) : cljs.core.name.call(null,G__8615));
})();
(obj[str_name_8627] = f_8626);

var G__8628 = seq__8610_8620;
var G__8629 = chunk__8611_8621;
var G__8630 = count__8612_8622;
var G__8631 = (i__8613_8623 + (1));
seq__8610_8620 = G__8628;
chunk__8611_8621 = G__8629;
count__8612_8622 = G__8630;
i__8613_8623 = G__8631;
continue;
} else {
var temp__4126__auto___8632 = cljs.core.seq(seq__8610_8620);
if(temp__4126__auto___8632){
var seq__8610_8633__$1 = temp__4126__auto___8632;
if(cljs.core.chunked_seq_QMARK_(seq__8610_8633__$1)){
var c__5507__auto___8634 = (function (){var G__8616 = seq__8610_8633__$1;
return (cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__8616) : cljs.core.chunk_first.call(null,G__8616));
})();
var G__8635 = (function (){var G__8617 = seq__8610_8633__$1;
return (cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__8617) : cljs.core.chunk_rest.call(null,G__8617));
})();
var G__8636 = c__5507__auto___8634;
var G__8637 = cljs.core.count(c__5507__auto___8634);
var G__8638 = (0);
seq__8610_8620 = G__8635;
chunk__8611_8621 = G__8636;
count__8612_8622 = G__8637;
i__8613_8623 = G__8638;
continue;
} else {
var vec__8618_8639 = cljs.core.first(seq__8610_8633__$1);
var key_name_8640 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8618_8639,(0),null);
var f_8641 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8618_8639,(1),null);
var str_name_8642 = (function (){var G__8619 = key_name_8640;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__8619) : cljs.core.name.call(null,G__8619));
})();
(obj[str_name_8642] = f_8641);

var G__8643 = cljs.core.next(seq__8610_8633__$1);
var G__8644 = null;
var G__8645 = (0);
var G__8646 = (0);
seq__8610_8620 = G__8643;
chunk__8611_8621 = G__8644;
count__8612_8622 = G__8645;
i__8613_8623 = G__8646;
continue;
}
} else {
}
}
break;
}

return obj;
});

/**
* @constructor
*/
cljs.core.List = (function (meta,first,rest,count,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.count = count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65937646;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.List.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.List.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.List(self__.meta,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return null;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._rest(coll__$1);
});

cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__5141__auto__ = self__.__hash;
if(!((h__5141__auto__ == null))){
return h__5141__auto__;
} else {
var h__5141__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__5141__auto____$1;

return h__5141__auto____$1;
}
});

cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(meta__$1,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,coll__$1,(self__.count + (1)),null));
});

cljs.core.List.cljs$lang$type = true;

cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";

cljs.core.List.cljs$lang$ctorPrWriter = (function (this__5307__auto__,writer__5308__auto__,opt__5309__auto__){
return cljs.core._write(writer__5308__auto__,"cljs.core/List");
});

cljs.core.__GT_List = (function __GT_List(meta,first,rest,count,__hash){
return (new cljs.core.List(meta,first,rest,count,__hash));
});

(cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5698__auto__ = this;
return cljs.core.es6_iterator(this__5698__auto__);
}));

/**
* @constructor
*/
cljs.core.EmptyList = (function (meta){
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 65937614;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.EmptyList.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.EmptyList.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.EmptyList(self__.meta));
});

cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
throw (new Error("Can't pop empty list"));
});

cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.empty_ordered_hash;
});

cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.EmptyList(meta__$1));
});

cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,null,(1),null));
});

cljs.core.EmptyList.cljs$lang$type = true;

cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";

cljs.core.EmptyList.cljs$lang$ctorPrWriter = (function (this__5307__auto__,writer__5308__auto__,opt__5309__auto__){
return cljs.core._write(writer__5308__auto__,"cljs.core/EmptyList");
});

cljs.core.__GT_EmptyList = (function __GT_EmptyList(meta){
return (new cljs.core.EmptyList(meta));
});

cljs.core.List.EMPTY = (new cljs.core.EmptyList(null));
(cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5698__auto__ = this;
return cljs.core.es6_iterator(this__5698__auto__);
}));
cljs.core.reversible_QMARK_ = (function reversible_QMARK_(coll){
var G__8648 = coll;
if(G__8648){
var bit__5401__auto__ = (G__8648.cljs$lang$protocol_mask$partition0$ & (134217728));
if((bit__5401__auto__) || (G__8648.cljs$core$IReversible$)){
return true;
} else {
if((!G__8648.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__8648);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__8648);
}
});
cljs.core.rseq = (function rseq(coll){
return cljs.core._rseq(coll);
});
/**
* Returns a seq of the items in coll in reverse order. Not lazy.
*/
cljs.core.reverse = (function reverse(coll){
if(cljs.core.reversible_QMARK_(coll)){
return cljs.core.rseq(coll);
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,coll);
}
});
/**
* @param {...*} var_args
*/
cljs.core.list = (function() { 
var list__delegate = function (xs){
var arr = ((((xs instanceof cljs.core.IndexedSeq)) && ((xs.i === (0))))?xs.arr:(function (){var arr = [];
var xs__$1 = xs;
while(true){
if(!((xs__$1 == null))){
arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));

var G__8649 = xs__$1.cljs$core$INext$_next$arity$1(null);
xs__$1 = G__8649;
continue;
} else {
return arr;
}
break;
}
})());
var i = arr.length;
var r = cljs.core.List.EMPTY;
while(true){
if((i > (0))){
var G__8650 = (i - (1));
var G__8651 = r.cljs$core$ICollection$_conj$arity$2(null,(arr[(i - (1))]));
i = G__8650;
r = G__8651;
continue;
} else {
return r;
}
break;
}
};
var list = function (var_args){
var xs = null;
if (arguments.length > 0) {
var G__8652__i = 0, G__8652__a = new Array(arguments.length -  0);
while (G__8652__i < G__8652__a.length) {G__8652__a[G__8652__i] = arguments[G__8652__i + 0]; ++G__8652__i;}
  xs = new cljs.core.IndexedSeq(G__8652__a,0);
} 
return list__delegate.call(this,xs);};
list.cljs$lang$maxFixedArity = 0;
list.cljs$lang$applyTo = (function (arglist__8653){
var xs = cljs.core.seq(arglist__8653);
return list__delegate(xs);
});
list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
return list;
})()
;

/**
* @constructor
*/
cljs.core.Cons = (function (meta,first,rest,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65929452;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Cons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Cons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Cons(self__.meta,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return null;
} else {
return cljs.core.seq(self__.rest);
}
});

cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__5141__auto__ = self__.__hash;
if(!((h__5141__auto__ == null))){
return h__5141__auto__;
} else {
var h__5141__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__5141__auto____$1;

return h__5141__auto____$1;
}
});

cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(meta__$1,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(null,o,coll__$1,self__.__hash));
});

cljs.core.Cons.cljs$lang$type = true;

cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";

cljs.core.Cons.cljs$lang$ctorPrWriter = (function (this__5307__auto__,writer__5308__auto__,opt__5309__auto__){
return cljs.core._write(writer__5308__auto__,"cljs.core/Cons");
});

cljs.core.__GT_Cons = (function __GT_Cons(meta,first,rest,__hash){
return (new cljs.core.Cons(meta,first,rest,__hash));
});

(cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5698__auto__ = this;
return cljs.core.es6_iterator(this__5698__auto__);
}));
/**
* Returns a new seq where x is the first element and seq is the rest.
*/
cljs.core.cons = (function cons(x,coll){
if((function (){var or__4720__auto__ = (coll == null);
if(or__4720__auto__){
return or__4720__auto__;
} else {
var G__8657 = coll;
if(G__8657){
var bit__5394__auto__ = (G__8657.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__5394__auto__) || (G__8657.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
}
})()){
return (new cljs.core.Cons(null,x,coll,null));
} else {
return (new cljs.core.Cons(null,x,cljs.core.seq(coll),null));
}
});
cljs.core.list_QMARK_ = (function list_QMARK_(x){
var G__8659 = x;
if(G__8659){
var bit__5401__auto__ = (G__8659.cljs$lang$protocol_mask$partition0$ & (33554432));
if((bit__5401__auto__) || (G__8659.cljs$core$IList$)){
return true;
} else {
if((!G__8659.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__8659);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__8659);
}
});
cljs.core.hash_keyword = (function hash_keyword(k){
return ((cljs.core.hash_symbol(k) + (2654435769)) | (0));
});
cljs.core.compare_keywords = (function compare_keywords(a,b){
if((a.fqn === b.fqn)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__4708__auto__ = cljs.core.not(a.ns);
if(and__4708__auto__){
return b.ns;
} else {
return and__4708__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__8666 = a.ns;
var G__8667 = b.ns;
return goog.array.defaultCompare(G__8666,G__8667);
})();
if(((0) === nsc)){
var G__8668 = a.name;
var G__8669 = b.name;
return goog.array.defaultCompare(G__8668,G__8669);
} else {
return nsc;
}
}
} else {
var G__8670 = a.name;
var G__8671 = b.name;
return goog.array.defaultCompare(G__8670,G__8671);

}
}
}
});

/**
* @constructor
*/
cljs.core.Keyword = (function (ns,name,fqn,_hash){
this.ns = ns;
this.name = name;
this.fqn = fqn;
this._hash = _hash;
this.cljs$lang$protocol_mask$partition0$ = 2153775105;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,[cljs.core.str(":"),cljs.core.str(self__.fqn)].join(''));
});

cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var h__5141__auto__ = self__._hash;
if(!((h__5141__auto__ == null))){
return h__5141__auto__;
} else {
var h__5141__auto____$1 = cljs.core.hash_keyword(this$__$1);
self__._hash = h__5141__auto____$1;

return h__5141__auto____$1;
}
});

cljs.core.Keyword.prototype.call = (function() {
var G__8673 = null;
var G__8673__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});
var G__8673__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});
G__8673 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__8673__2.call(this,self__,coll);
case 3:
return G__8673__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8673.cljs$core$IFn$_invoke$arity$2 = G__8673__2;
G__8673.cljs$core$IFn$_invoke$arity$3 = G__8673__3;
return G__8673;
})()
;

cljs.core.Keyword.prototype.apply = (function (self__,args8672){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args8672)));
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});

cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Keyword)){
return (self__.fqn === other.fqn);
} else {
return false;
}
});

cljs.core.Keyword.prototype.toString = (function (){
var self__ = this;
var _ = this;
return [cljs.core.str(":"),cljs.core.str(self__.fqn)].join('');
});

cljs.core.Keyword.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Keyword.cljs$lang$type = true;

cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";

cljs.core.Keyword.cljs$lang$ctorPrWriter = (function (this__5307__auto__,writer__5308__auto__,opt__5309__auto__){
return cljs.core._write(writer__5308__auto__,"cljs.core/Keyword");
});

cljs.core.__GT_Keyword = (function __GT_Keyword(ns,name,fqn,_hash){
return (new cljs.core.Keyword(ns,name,fqn,_hash));
});

cljs.core.keyword_QMARK_ = (function keyword_QMARK_(x){
return (x instanceof cljs.core.Keyword);
});
cljs.core.keyword_identical_QMARK_ = (function keyword_identical_QMARK_(x,y){
if((x === y)){
return true;
} else {
if(((x instanceof cljs.core.Keyword)) && ((y instanceof cljs.core.Keyword))){
return (x.fqn === y.fqn);
} else {
return false;
}
}
});
/**
* Returns the namespace String of a symbol or keyword, or nil if not present.
*/
cljs.core.namespace = (function namespace(x){
if((function (){var G__8675 = x;
if(G__8675){
var bit__5394__auto__ = (G__8675.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__5394__auto__) || (G__8675.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(null);
} else {
throw (new Error([cljs.core.str("Doesn't support namespace: "),cljs.core.str(x)].join('')));
}
});
/**
* Returns a Keyword with the given namespace and name.  Do not use :
* in the keyword strings, it will be added automatically.
*/
cljs.core.keyword = (function() {
var keyword = null;
var keyword__1 = (function (name){
if((name instanceof cljs.core.Keyword)){
return name;
} else {
if((name instanceof cljs.core.Symbol)){
return (new cljs.core.Keyword(cljs.core.namespace(name),(function (){var G__8677 = name;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__8677) : cljs.core.name.call(null,G__8677));
})(),name.str,null));
} else {
if(typeof name === 'string'){
var parts = name.split("/");
if((parts.length === (2))){
return (new cljs.core.Keyword((parts[(0)]),(parts[(1)]),name,null));
} else {
return (new cljs.core.Keyword(null,(parts[(0)]),name,null));
}
} else {
return null;
}
}
}
});
var keyword__2 = (function (ns,name){
return (new cljs.core.Keyword(ns,name,[cljs.core.str((cljs.core.truth_(ns)?[cljs.core.str(ns),cljs.core.str("/")].join(''):null)),cljs.core.str(name)].join(''),null));
});
keyword = function(ns,name){
switch(arguments.length){
case 1:
return keyword__1.call(this,ns);
case 2:
return keyword__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
return keyword;
})()
;

/**
* @constructor
*/
cljs.core.LazySeq = (function (meta,fn,s,__hash){
this.meta = meta;
this.fn = fn;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.LazySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.LazySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.LazySeq.prototype.sval = (function (){
var self__ = this;
var coll = this;
if((self__.fn == null)){
return self__.s;
} else {
self__.s = (function (){return (self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null));
})();

self__.fn = null;

return self__.s;
}
});

cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.next(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__5141__auto__ = self__.__hash;
if(!((h__5141__auto__ == null))){
return h__5141__auto__;
} else {
var h__5141__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__5141__auto____$1;

return h__5141__auto____$1;
}
});

cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if(!((self__.s == null))){
return cljs.core.rest(self__.s);
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
coll__$1.sval();

if((self__.s == null)){
return null;
} else {
var ls = self__.s;
while(true){
if((ls instanceof cljs.core.LazySeq)){
var G__8678 = ls.sval();
ls = G__8678;
continue;
} else {
self__.s = ls;

return cljs.core.seq(self__.s);
}
break;
}
}
});

cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.LazySeq(meta__$1,self__.fn,self__.s,self__.__hash));
});

cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.LazySeq.cljs$lang$type = true;

cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";

cljs.core.LazySeq.cljs$lang$ctorPrWriter = (function (this__5307__auto__,writer__5308__auto__,opt__5309__auto__){
return cljs.core._write(writer__5308__auto__,"cljs.core/LazySeq");
});

cljs.core.__GT_LazySeq = (function __GT_LazySeq(meta,fn,s,__hash){
return (new cljs.core.LazySeq(meta,fn,s,__hash));
});

(cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5698__auto__ = this;
return cljs.core.es6_iterator(this__5698__auto__);
}));

/**
* @constructor
*/
cljs.core.ChunkBuffer = (function (buf,end){
this.buf = buf;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2;
})
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.end;
});

cljs.core.ChunkBuffer.prototype.add = (function (o){
var self__ = this;
var _ = this;
(self__.buf[self__.end] = o);

return self__.end = (self__.end + (1));
});

cljs.core.ChunkBuffer.prototype.chunk = (function (o){
var self__ = this;
var _ = this;
var ret = (new cljs.core.ArrayChunk(self__.buf,(0),self__.end));
self__.buf = null;

return ret;
});

cljs.core.ChunkBuffer.cljs$lang$type = true;

cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";

cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = (function (this__5307__auto__,writer__5308__auto__,opt__5309__auto__){
return cljs.core._write(writer__5308__auto__,"cljs.core/ChunkBuffer");
});

cljs.core.__GT_ChunkBuffer = (function __GT_ChunkBuffer(buf,end){
return (new cljs.core.ChunkBuffer(buf,end));
});

cljs.core.chunk_buffer = (function chunk_buffer(capacity){
return (new cljs.core.ChunkBuffer((new Array(capacity)),(0)));
});

/**
* @constructor
*/
cljs.core.ArrayChunk = (function (arr,off,end){
this.arr = arr;
this.off = off;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 524306;
})
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.off]),(self__.off + (1)));
});

cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.off);
});

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.off === self__.end)){
throw (new Error("-drop-first of empty chunk"));
} else {
return (new cljs.core.ArrayChunk(self__.arr,(self__.off + (1)),self__.end));
}
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,i){
var self__ = this;
var coll__$1 = this;
return (self__.arr[(self__.off + i)]);
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,i,not_found){
var self__ = this;
var coll__$1 = this;
if(((i >= (0))) && ((i < (self__.end - self__.off)))){
return (self__.arr[(self__.off + i)]);
} else {
return not_found;
}
});

cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.end - self__.off);
});

cljs.core.ArrayChunk.cljs$lang$type = true;

cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";

cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = (function (this__5307__auto__,writer__5308__auto__,opt__5309__auto__){
return cljs.core._write(writer__5308__auto__,"cljs.core/ArrayChunk");
});

cljs.core.__GT_ArrayChunk = (function __GT_ArrayChunk(arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});

cljs.core.array_chunk = (function() {
var array_chunk = null;
var array_chunk__1 = (function (arr){
return (new cljs.core.ArrayChunk(arr,(0),arr.length));
});
var array_chunk__2 = (function (arr,off){
return (new cljs.core.ArrayChunk(arr,off,arr.length));
});
var array_chunk__3 = (function (arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});
array_chunk = function(arr,off,end){
switch(arguments.length){
case 1:
return array_chunk__1.call(this,arr);
case 2:
return array_chunk__2.call(this,arr,off);
case 3:
return array_chunk__3.call(this,arr,off,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
return array_chunk;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedCons = (function (chunk,more,meta,__hash){
this.chunk = chunk;
this.more = more;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31850732;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedCons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedCons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
var more__$1 = cljs.core._seq(self__.more);
if((more__$1 == null)){
return null;
} else {
return more__$1;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__5141__auto__ = self__.__hash;
if(!((h__5141__auto__ == null))){
return h__5141__auto__;
} else {
var h__5141__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__5141__auto____$1;

return h__5141__auto____$1;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk,(0));
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.chunk;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ChunkedCons(self__.chunk,self__.more,m,self__.__hash));
});

cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,this$__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return null;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.cljs$lang$type = true;

cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";

cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = (function (this__5307__auto__,writer__5308__auto__,opt__5309__auto__){
return cljs.core._write(writer__5308__auto__,"cljs.core/ChunkedCons");
});

cljs.core.__GT_ChunkedCons = (function __GT_ChunkedCons(chunk,more,meta,__hash){
return (new cljs.core.ChunkedCons(chunk,more,meta,__hash));
});

(cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5698__auto__ = this;
return cljs.core.es6_iterator(this__5698__auto__);
}));
cljs.core.chunk_cons = (function chunk_cons(chunk,rest){
if((cljs.core._count(chunk) === (0))){
return rest;
} else {
return (new cljs.core.ChunkedCons(chunk,rest,null,null));
}
});
cljs.core.chunk_append = (function chunk_append(b,x){
return b.add(x);
});
cljs.core.chunk = (function chunk(b){
return b.chunk();
});
cljs.core.chunk_first = (function chunk_first(s){
return cljs.core._chunked_first(s);
});
cljs.core.chunk_rest = (function chunk_rest(s){
return cljs.core._chunked_rest(s);
});
cljs.core.chunk_next = (function chunk_next(s){
if((function (){var G__8680 = s;
if(G__8680){
var bit__5394__auto__ = (G__8680.cljs$lang$protocol_mask$partition1$ & (1024));
if((bit__5394__auto__) || (G__8680.cljs$core$IChunkedNext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core._chunked_next(s);
} else {
return cljs.core.seq(cljs.core._chunked_rest(s));
}
});
/**
* Naive impl of to-array as a start.
*/
cljs.core.to_array = (function to_array(s){
var ary = [];
var s__$1 = s;
while(true){
if(cljs.core.seq(s__$1)){
ary.push(cljs.core.first(s__$1));

var G__8681 = cljs.core.next(s__$1);
s__$1 = G__8681;
continue;
} else {
return ary;
}
break;
}
});
/**
* Returns a (potentially-ragged) 2-dimensional array
* containing the contents of coll.
*/
cljs.core.to_array_2d = (function to_array_2d(coll){
var ret = (new Array(cljs.core.count(coll)));
var i_8682 = (0);
var xs_8683 = cljs.core.seq(coll);
while(true){
if(xs_8683){
(ret[i_8682] = cljs.core.to_array(cljs.core.first(xs_8683)));

var G__8684 = (i_8682 + (1));
var G__8685 = cljs.core.next(xs_8683);
i_8682 = G__8684;
xs_8683 = G__8685;
continue;
} else {
}
break;
}

return ret;
});
cljs.core.int_array = (function() {
var int_array = null;
var int_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var int_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__8688 = (i + (1));
var G__8689 = cljs.core.next(s__$1);
i = G__8688;
s__$1 = G__8689;
continue;
} else {
return a;
}
break;
}
} else {
var n__5607__auto___8690 = size;
var i_8691 = (0);
while(true){
if((i_8691 < n__5607__auto___8690)){
(a[i_8691] = init_val_or_seq);

var G__8692 = (i_8691 + (1));
i_8691 = G__8692;
continue;
} else {
}
break;
}

return a;
}
});
int_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return int_array__1.call(this,size);
case 2:
return int_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
return int_array;
})()
;
cljs.core.long_array = (function() {
var long_array = null;
var long_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var long_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__8695 = (i + (1));
var G__8696 = cljs.core.next(s__$1);
i = G__8695;
s__$1 = G__8696;
continue;
} else {
return a;
}
break;
}
} else {
var n__5607__auto___8697 = size;
var i_8698 = (0);
while(true){
if((i_8698 < n__5607__auto___8697)){
(a[i_8698] = init_val_or_seq);

var G__8699 = (i_8698 + (1));
i_8698 = G__8699;
continue;
} else {
}
break;
}

return a;
}
});
long_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return long_array__1.call(this,size);
case 2:
return long_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
return long_array;
})()
;
cljs.core.double_array = (function() {
var double_array = null;
var double_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var double_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__8702 = (i + (1));
var G__8703 = cljs.core.next(s__$1);
i = G__8702;
s__$1 = G__8703;
continue;
} else {
return a;
}
break;
}
} else {
var n__5607__auto___8704 = size;
var i_8705 = (0);
while(true){
if((i_8705 < n__5607__auto___8704)){
(a[i_8705] = init_val_or_seq);

var G__8706 = (i_8705 + (1));
i_8705 = G__8706;
continue;
} else {
}
break;
}

return a;
}
});
double_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return double_array__1.call(this,size);
case 2:
return double_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
return double_array;
})()
;
cljs.core.object_array = (function() {
var object_array = null;
var object_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var object_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__8709 = (i + (1));
var G__8710 = cljs.core.next(s__$1);
i = G__8709;
s__$1 = G__8710;
continue;
} else {
return a;
}
break;
}
} else {
var n__5607__auto___8711 = size;
var i_8712 = (0);
while(true){
if((i_8712 < n__5607__auto___8711)){
(a[i_8712] = init_val_or_seq);

var G__8713 = (i_8712 + (1));
i_8712 = G__8713;
continue;
} else {
}
break;
}

return a;
}
});
object_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return object_array__1.call(this,size);
case 2:
return object_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
return object_array;
})()
;
cljs.core.bounded_count = (function bounded_count(s,n){
if(cljs.core.counted_QMARK_(s)){
return cljs.core.count(s);
} else {
var s__$1 = s;
var i = n;
var sum = (0);
while(true){
if(((i > (0))) && (cljs.core.seq(s__$1))){
var G__8714 = cljs.core.next(s__$1);
var G__8715 = (i - (1));
var G__8716 = (sum + (1));
s__$1 = G__8714;
i = G__8715;
sum = G__8716;
continue;
} else {
return sum;
}
break;
}
}
});
cljs.core.spread = (function spread(arglist){
if((arglist == null)){
return null;
} else {
if((cljs.core.next(arglist) == null)){
return cljs.core.seq(cljs.core.first(arglist));
} else {
return cljs.core.cons(cljs.core.first(arglist),spread(cljs.core.next(arglist)));

}
}
});
/**
* Returns a lazy seq representing the concatenation of the elements in the supplied colls.
* @param {...*} var_args
*/
cljs.core.concat = (function() {
var concat = null;
var concat__0 = (function (){
return (new cljs.core.LazySeq(null,(function (){
return null;
}),null,null));
});
var concat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return x;
}),null,null));
});
var concat__2 = (function (x,y){
return (new cljs.core.LazySeq(null,(function (){
var s = cljs.core.seq(x);
if(s){
if(cljs.core.chunked_seq_QMARK_(s)){
return cljs.core.chunk_cons(cljs.core.chunk_first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s),y));
} else {
return cljs.core.cons(cljs.core.first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s),y));
}
} else {
return y;
}
}),null,null));
});
var concat__3 = (function() { 
var G__8736__delegate = function (x,y,zs){
var cat = (function cat(xys,zs__$1){
return (new cljs.core.LazySeq(null,(function (){
var xys__$1 = cljs.core.seq(xys);
if(xys__$1){
if(cljs.core.chunked_seq_QMARK_(xys__$1)){
return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1),cat(cljs.core.chunk_rest(xys__$1),zs__$1));
} else {
return cljs.core.cons(cljs.core.first(xys__$1),cat(cljs.core.rest(xys__$1),zs__$1));
}
} else {
if(cljs.core.truth_(zs__$1)){
return cat(cljs.core.first(zs__$1),cljs.core.next(zs__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(concat.cljs$core$IFn$_invoke$arity$2(x,y),zs);
};
var G__8736 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__8737__i = 0, G__8737__a = new Array(arguments.length -  2);
while (G__8737__i < G__8737__a.length) {G__8737__a[G__8737__i] = arguments[G__8737__i + 2]; ++G__8737__i;}
  zs = new cljs.core.IndexedSeq(G__8737__a,0);
} 
return G__8736__delegate.call(this,x,y,zs);};
G__8736.cljs$lang$maxFixedArity = 2;
G__8736.cljs$lang$applyTo = (function (arglist__8738){
var x = cljs.core.first(arglist__8738);
arglist__8738 = cljs.core.next(arglist__8738);
var y = cljs.core.first(arglist__8738);
var zs = cljs.core.rest(arglist__8738);
return G__8736__delegate(x,y,zs);
});
G__8736.cljs$core$IFn$_invoke$arity$variadic = G__8736__delegate;
return G__8736;
})()
;
concat = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return concat__0.call(this);
case 1:
return concat__1.call(this,x);
case 2:
return concat__2.call(this,x,y);
default:
var G__8739 = null;
if (arguments.length > 2) {
var G__8740__i = 0, G__8740__a = new Array(arguments.length -  2);
while (G__8740__i < G__8740__a.length) {G__8740__a[G__8740__i] = arguments[G__8740__i + 2]; ++G__8740__i;}
G__8739 = new cljs.core.IndexedSeq(G__8740__a,0);
}
return concat__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8739);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
concat.cljs$lang$maxFixedArity = 2;
concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
return concat;
})()
;
/**
* Creates a new list containing the items prepended to the rest, the
* last of which will be treated as a sequence.
* @param {...*} var_args
*/
cljs.core.list_STAR_ = (function() {
var list_STAR_ = null;
var list_STAR___1 = (function (args){
return cljs.core.seq(args);
});
var list_STAR___2 = (function (a,args){
return cljs.core.cons(a,args);
});
var list_STAR___3 = (function (a,b,args){
return cljs.core.cons(a,cljs.core.cons(b,args));
});
var list_STAR___4 = (function (a,b,c,args){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,args)));
});
var list_STAR___5 = (function() { 
var G__8741__delegate = function (a,b,c,d,more){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(more)))));
};
var G__8741 = function (a,b,c,d,var_args){
var more = null;
if (arguments.length > 4) {
var G__8742__i = 0, G__8742__a = new Array(arguments.length -  4);
while (G__8742__i < G__8742__a.length) {G__8742__a[G__8742__i] = arguments[G__8742__i + 4]; ++G__8742__i;}
  more = new cljs.core.IndexedSeq(G__8742__a,0);
} 
return G__8741__delegate.call(this,a,b,c,d,more);};
G__8741.cljs$lang$maxFixedArity = 4;
G__8741.cljs$lang$applyTo = (function (arglist__8743){
var a = cljs.core.first(arglist__8743);
arglist__8743 = cljs.core.next(arglist__8743);
var b = cljs.core.first(arglist__8743);
arglist__8743 = cljs.core.next(arglist__8743);
var c = cljs.core.first(arglist__8743);
arglist__8743 = cljs.core.next(arglist__8743);
var d = cljs.core.first(arglist__8743);
var more = cljs.core.rest(arglist__8743);
return G__8741__delegate(a,b,c,d,more);
});
G__8741.cljs$core$IFn$_invoke$arity$variadic = G__8741__delegate;
return G__8741;
})()
;
list_STAR_ = function(a,b,c,d,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return list_STAR___1.call(this,a);
case 2:
return list_STAR___2.call(this,a,b);
case 3:
return list_STAR___3.call(this,a,b,c);
case 4:
return list_STAR___4.call(this,a,b,c,d);
default:
var G__8744 = null;
if (arguments.length > 4) {
var G__8745__i = 0, G__8745__a = new Array(arguments.length -  4);
while (G__8745__i < G__8745__a.length) {G__8745__a[G__8745__i] = arguments[G__8745__i + 4]; ++G__8745__i;}
G__8744 = new cljs.core.IndexedSeq(G__8745__a,0);
}
return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a,b,c,d, G__8744);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
list_STAR_.cljs$lang$maxFixedArity = 4;
list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
return list_STAR_;
})()
;
/**
* Returns a new, transient version of the collection, in constant time.
*/
cljs.core.transient$ = (function transient$(coll){
return cljs.core._as_transient(coll);
});
/**
* Returns a new, persistent version of the transient collection, in
* constant time. The transient collection cannot be used after this
* call, any such use will throw an exception.
*/
cljs.core.persistent_BANG_ = (function persistent_BANG_(tcoll){
return cljs.core._persistent_BANG_(tcoll);
});
/**
* Adds x to the transient collection, and return coll. The 'addition'
* may happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj_BANG_ = (function() {
var conj_BANG_ = null;
var conj_BANG___0 = (function (){
return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
});
var conj_BANG___1 = (function (coll){
return coll;
});
var conj_BANG___2 = (function (tcoll,val){
return cljs.core._conj_BANG_(tcoll,val);
});
var conj_BANG___3 = (function() { 
var G__8746__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._conj_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__8747 = ntcoll;
var G__8748 = cljs.core.first(vals);
var G__8749 = cljs.core.next(vals);
tcoll = G__8747;
val = G__8748;
vals = G__8749;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__8746 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__8750__i = 0, G__8750__a = new Array(arguments.length -  2);
while (G__8750__i < G__8750__a.length) {G__8750__a[G__8750__i] = arguments[G__8750__i + 2]; ++G__8750__i;}
  vals = new cljs.core.IndexedSeq(G__8750__a,0);
} 
return G__8746__delegate.call(this,tcoll,val,vals);};
G__8746.cljs$lang$maxFixedArity = 2;
G__8746.cljs$lang$applyTo = (function (arglist__8751){
var tcoll = cljs.core.first(arglist__8751);
arglist__8751 = cljs.core.next(arglist__8751);
var val = cljs.core.first(arglist__8751);
var vals = cljs.core.rest(arglist__8751);
return G__8746__delegate(tcoll,val,vals);
});
G__8746.cljs$core$IFn$_invoke$arity$variadic = G__8746__delegate;
return G__8746;
})()
;
conj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 0:
return conj_BANG___0.call(this);
case 1:
return conj_BANG___1.call(this,tcoll);
case 2:
return conj_BANG___2.call(this,tcoll,val);
default:
var G__8752 = null;
if (arguments.length > 2) {
var G__8753__i = 0, G__8753__a = new Array(arguments.length -  2);
while (G__8753__i < G__8753__a.length) {G__8753__a[G__8753__i] = arguments[G__8753__i + 2]; ++G__8753__i;}
G__8752 = new cljs.core.IndexedSeq(G__8753__a,0);
}
return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__8752);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj_BANG_.cljs$lang$maxFixedArity = 2;
conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return conj_BANG_;
})()
;
/**
* When applied to a transient map, adds mapping of key(s) to
* val(s). When applied to a transient vector, sets the val at index.
* Note - index must be <= (count vector). Returns coll.
* @param {...*} var_args
*/
cljs.core.assoc_BANG_ = (function() {
var assoc_BANG_ = null;
var assoc_BANG___3 = (function (tcoll,key,val){
return cljs.core._assoc_BANG_(tcoll,key,val);
});
var assoc_BANG___4 = (function() { 
var G__8754__delegate = function (tcoll,key,val,kvs){
while(true){
var ntcoll = cljs.core._assoc_BANG_(tcoll,key,val);
if(cljs.core.truth_(kvs)){
var G__8755 = ntcoll;
var G__8756 = cljs.core.first(kvs);
var G__8757 = cljs.core.second(kvs);
var G__8758 = cljs.core.nnext(kvs);
tcoll = G__8755;
key = G__8756;
val = G__8757;
kvs = G__8758;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__8754 = function (tcoll,key,val,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__8759__i = 0, G__8759__a = new Array(arguments.length -  3);
while (G__8759__i < G__8759__a.length) {G__8759__a[G__8759__i] = arguments[G__8759__i + 3]; ++G__8759__i;}
  kvs = new cljs.core.IndexedSeq(G__8759__a,0);
} 
return G__8754__delegate.call(this,tcoll,key,val,kvs);};
G__8754.cljs$lang$maxFixedArity = 3;
G__8754.cljs$lang$applyTo = (function (arglist__8760){
var tcoll = cljs.core.first(arglist__8760);
arglist__8760 = cljs.core.next(arglist__8760);
var key = cljs.core.first(arglist__8760);
arglist__8760 = cljs.core.next(arglist__8760);
var val = cljs.core.first(arglist__8760);
var kvs = cljs.core.rest(arglist__8760);
return G__8754__delegate(tcoll,key,val,kvs);
});
G__8754.cljs$core$IFn$_invoke$arity$variadic = G__8754__delegate;
return G__8754;
})()
;
assoc_BANG_ = function(tcoll,key,val,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc_BANG___3.call(this,tcoll,key,val);
default:
var G__8761 = null;
if (arguments.length > 3) {
var G__8762__i = 0, G__8762__a = new Array(arguments.length -  3);
while (G__8762__i < G__8762__a.length) {G__8762__a[G__8762__i] = arguments[G__8762__i + 3]; ++G__8762__i;}
G__8761 = new cljs.core.IndexedSeq(G__8762__a,0);
}
return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll,key,val, G__8761);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc_BANG_.cljs$lang$maxFixedArity = 3;
assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
return assoc_BANG_;
})()
;
/**
* Returns a transient map that doesn't contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc_BANG_ = (function() {
var dissoc_BANG_ = null;
var dissoc_BANG___2 = (function (tcoll,key){
return cljs.core._dissoc_BANG_(tcoll,key);
});
var dissoc_BANG___3 = (function() { 
var G__8763__delegate = function (tcoll,key,ks){
while(true){
var ntcoll = cljs.core._dissoc_BANG_(tcoll,key);
if(cljs.core.truth_(ks)){
var G__8764 = ntcoll;
var G__8765 = cljs.core.first(ks);
var G__8766 = cljs.core.next(ks);
tcoll = G__8764;
key = G__8765;
ks = G__8766;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__8763 = function (tcoll,key,var_args){
var ks = null;
if (arguments.length > 2) {
var G__8767__i = 0, G__8767__a = new Array(arguments.length -  2);
while (G__8767__i < G__8767__a.length) {G__8767__a[G__8767__i] = arguments[G__8767__i + 2]; ++G__8767__i;}
  ks = new cljs.core.IndexedSeq(G__8767__a,0);
} 
return G__8763__delegate.call(this,tcoll,key,ks);};
G__8763.cljs$lang$maxFixedArity = 2;
G__8763.cljs$lang$applyTo = (function (arglist__8768){
var tcoll = cljs.core.first(arglist__8768);
arglist__8768 = cljs.core.next(arglist__8768);
var key = cljs.core.first(arglist__8768);
var ks = cljs.core.rest(arglist__8768);
return G__8763__delegate(tcoll,key,ks);
});
G__8763.cljs$core$IFn$_invoke$arity$variadic = G__8763__delegate;
return G__8763;
})()
;
dissoc_BANG_ = function(tcoll,key,var_args){
var ks = var_args;
switch(arguments.length){
case 2:
return dissoc_BANG___2.call(this,tcoll,key);
default:
var G__8769 = null;
if (arguments.length > 2) {
var G__8770__i = 0, G__8770__a = new Array(arguments.length -  2);
while (G__8770__i < G__8770__a.length) {G__8770__a[G__8770__i] = arguments[G__8770__i + 2]; ++G__8770__i;}
G__8769 = new cljs.core.IndexedSeq(G__8770__a,0);
}
return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,key, G__8769);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc_BANG_.cljs$lang$maxFixedArity = 2;
dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc_BANG_;
})()
;
/**
* Removes the last item from a transient vector. If
* the collection is empty, throws an exception. Returns coll
*/
cljs.core.pop_BANG_ = (function pop_BANG_(tcoll){
return cljs.core._pop_BANG_(tcoll);
});
/**
* disj[oin]. Returns a transient set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj_BANG_ = (function() {
var disj_BANG_ = null;
var disj_BANG___2 = (function (tcoll,val){
return cljs.core._disjoin_BANG_(tcoll,val);
});
var disj_BANG___3 = (function() { 
var G__8771__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._disjoin_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__8772 = ntcoll;
var G__8773 = cljs.core.first(vals);
var G__8774 = cljs.core.next(vals);
tcoll = G__8772;
val = G__8773;
vals = G__8774;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__8771 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__8775__i = 0, G__8775__a = new Array(arguments.length -  2);
while (G__8775__i < G__8775__a.length) {G__8775__a[G__8775__i] = arguments[G__8775__i + 2]; ++G__8775__i;}
  vals = new cljs.core.IndexedSeq(G__8775__a,0);
} 
return G__8771__delegate.call(this,tcoll,val,vals);};
G__8771.cljs$lang$maxFixedArity = 2;
G__8771.cljs$lang$applyTo = (function (arglist__8776){
var tcoll = cljs.core.first(arglist__8776);
arglist__8776 = cljs.core.next(arglist__8776);
var val = cljs.core.first(arglist__8776);
var vals = cljs.core.rest(arglist__8776);
return G__8771__delegate(tcoll,val,vals);
});
G__8771.cljs$core$IFn$_invoke$arity$variadic = G__8771__delegate;
return G__8771;
})()
;
disj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 2:
return disj_BANG___2.call(this,tcoll,val);
default:
var G__8777 = null;
if (arguments.length > 2) {
var G__8778__i = 0, G__8778__a = new Array(arguments.length -  2);
while (G__8778__i < G__8778__a.length) {G__8778__a[G__8778__i] = arguments[G__8778__i + 2]; ++G__8778__i;}
G__8777 = new cljs.core.IndexedSeq(G__8778__a,0);
}
return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__8777);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj_BANG_.cljs$lang$maxFixedArity = 2;
disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return disj_BANG_;
})()
;

cljs.core.apply_to = (function apply_to(f,argc,args){
var args__$1 = cljs.core.seq(args);
if((argc === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var a5651 = cljs.core._first(args__$1);
var args__$2 = cljs.core._rest(args__$1);
if((argc === (1))){
if(f.cljs$core$IFn$_invoke$arity$1){
return f.cljs$core$IFn$_invoke$arity$1(a5651);
} else {
var G__8989 = a5651;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8989) : f.call(null,G__8989));
}
} else {
var b5652 = cljs.core._first(args__$2);
var args__$3 = cljs.core._rest(args__$2);
if((argc === (2))){
if(f.cljs$core$IFn$_invoke$arity$2){
return f.cljs$core$IFn$_invoke$arity$2(a5651,b5652);
} else {
var G__8990 = a5651;
var G__8991 = b5652;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8990,G__8991) : f.call(null,G__8990,G__8991));
}
} else {
var c5653 = cljs.core._first(args__$3);
var args__$4 = cljs.core._rest(args__$3);
if((argc === (3))){
if(f.cljs$core$IFn$_invoke$arity$3){
return f.cljs$core$IFn$_invoke$arity$3(a5651,b5652,c5653);
} else {
var G__8992 = a5651;
var G__8993 = b5652;
var G__8994 = c5653;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8992,G__8993,G__8994) : f.call(null,G__8992,G__8993,G__8994));
}
} else {
var d5654 = cljs.core._first(args__$4);
var args__$5 = cljs.core._rest(args__$4);
if((argc === (4))){
if(f.cljs$core$IFn$_invoke$arity$4){
return f.cljs$core$IFn$_invoke$arity$4(a5651,b5652,c5653,d5654);
} else {
var G__8995 = a5651;
var G__8996 = b5652;
var G__8997 = c5653;
var G__8998 = d5654;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__8995,G__8996,G__8997,G__8998) : f.call(null,G__8995,G__8996,G__8997,G__8998));
}
} else {
var e5655 = cljs.core._first(args__$5);
var args__$6 = cljs.core._rest(args__$5);
if((argc === (5))){
if(f.cljs$core$IFn$_invoke$arity$5){
return f.cljs$core$IFn$_invoke$arity$5(a5651,b5652,c5653,d5654,e5655);
} else {
var G__8999 = a5651;
var G__9000 = b5652;
var G__9001 = c5653;
var G__9002 = d5654;
var G__9003 = e5655;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__8999,G__9000,G__9001,G__9002,G__9003) : f.call(null,G__8999,G__9000,G__9001,G__9002,G__9003));
}
} else {
var f5656 = cljs.core._first(args__$6);
var args__$7 = cljs.core._rest(args__$6);
if((argc === (6))){
if(f.cljs$core$IFn$_invoke$arity$6){
return f.cljs$core$IFn$_invoke$arity$6(a5651,b5652,c5653,d5654,e5655,f5656);
} else {
var G__9004 = a5651;
var G__9005 = b5652;
var G__9006 = c5653;
var G__9007 = d5654;
var G__9008 = e5655;
var G__9009 = f5656;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__9004,G__9005,G__9006,G__9007,G__9008,G__9009) : f.call(null,G__9004,G__9005,G__9006,G__9007,G__9008,G__9009));
}
} else {
var g5657 = cljs.core._first(args__$7);
var args__$8 = cljs.core._rest(args__$7);
if((argc === (7))){
if(f.cljs$core$IFn$_invoke$arity$7){
return f.cljs$core$IFn$_invoke$arity$7(a5651,b5652,c5653,d5654,e5655,f5656,g5657);
} else {
var G__9010 = a5651;
var G__9011 = b5652;
var G__9012 = c5653;
var G__9013 = d5654;
var G__9014 = e5655;
var G__9015 = f5656;
var G__9016 = g5657;
return (f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__9010,G__9011,G__9012,G__9013,G__9014,G__9015,G__9016) : f.call(null,G__9010,G__9011,G__9012,G__9013,G__9014,G__9015,G__9016));
}
} else {
var h5658 = cljs.core._first(args__$8);
var args__$9 = cljs.core._rest(args__$8);
if((argc === (8))){
if(f.cljs$core$IFn$_invoke$arity$8){
return f.cljs$core$IFn$_invoke$arity$8(a5651,b5652,c5653,d5654,e5655,f5656,g5657,h5658);
} else {
var G__9017 = a5651;
var G__9018 = b5652;
var G__9019 = c5653;
var G__9020 = d5654;
var G__9021 = e5655;
var G__9022 = f5656;
var G__9023 = g5657;
var G__9024 = h5658;
return (f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__9017,G__9018,G__9019,G__9020,G__9021,G__9022,G__9023,G__9024) : f.call(null,G__9017,G__9018,G__9019,G__9020,G__9021,G__9022,G__9023,G__9024));
}
} else {
var i5659 = cljs.core._first(args__$9);
var args__$10 = cljs.core._rest(args__$9);
if((argc === (9))){
if(f.cljs$core$IFn$_invoke$arity$9){
return f.cljs$core$IFn$_invoke$arity$9(a5651,b5652,c5653,d5654,e5655,f5656,g5657,h5658,i5659);
} else {
var G__9025 = a5651;
var G__9026 = b5652;
var G__9027 = c5653;
var G__9028 = d5654;
var G__9029 = e5655;
var G__9030 = f5656;
var G__9031 = g5657;
var G__9032 = h5658;
var G__9033 = i5659;
return (f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__9025,G__9026,G__9027,G__9028,G__9029,G__9030,G__9031,G__9032,G__9033) : f.call(null,G__9025,G__9026,G__9027,G__9028,G__9029,G__9030,G__9031,G__9032,G__9033));
}
} else {
var j5660 = cljs.core._first(args__$10);
var args__$11 = cljs.core._rest(args__$10);
if((argc === (10))){
if(f.cljs$core$IFn$_invoke$arity$10){
return f.cljs$core$IFn$_invoke$arity$10(a5651,b5652,c5653,d5654,e5655,f5656,g5657,h5658,i5659,j5660);
} else {
var G__9034 = a5651;
var G__9035 = b5652;
var G__9036 = c5653;
var G__9037 = d5654;
var G__9038 = e5655;
var G__9039 = f5656;
var G__9040 = g5657;
var G__9041 = h5658;
var G__9042 = i5659;
var G__9043 = j5660;
return (f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__9034,G__9035,G__9036,G__9037,G__9038,G__9039,G__9040,G__9041,G__9042,G__9043) : f.call(null,G__9034,G__9035,G__9036,G__9037,G__9038,G__9039,G__9040,G__9041,G__9042,G__9043));
}
} else {
var k5661 = cljs.core._first(args__$11);
var args__$12 = cljs.core._rest(args__$11);
if((argc === (11))){
if(f.cljs$core$IFn$_invoke$arity$11){
return f.cljs$core$IFn$_invoke$arity$11(a5651,b5652,c5653,d5654,e5655,f5656,g5657,h5658,i5659,j5660,k5661);
} else {
var G__9044 = a5651;
var G__9045 = b5652;
var G__9046 = c5653;
var G__9047 = d5654;
var G__9048 = e5655;
var G__9049 = f5656;
var G__9050 = g5657;
var G__9051 = h5658;
var G__9052 = i5659;
var G__9053 = j5660;
var G__9054 = k5661;
return (f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__9044,G__9045,G__9046,G__9047,G__9048,G__9049,G__9050,G__9051,G__9052,G__9053,G__9054) : f.call(null,G__9044,G__9045,G__9046,G__9047,G__9048,G__9049,G__9050,G__9051,G__9052,G__9053,G__9054));
}
} else {
var l5662 = cljs.core._first(args__$12);
var args__$13 = cljs.core._rest(args__$12);
if((argc === (12))){
if(f.cljs$core$IFn$_invoke$arity$12){
return f.cljs$core$IFn$_invoke$arity$12(a5651,b5652,c5653,d5654,e5655,f5656,g5657,h5658,i5659,j5660,k5661,l5662);
} else {
var G__9055 = a5651;
var G__9056 = b5652;
var G__9057 = c5653;
var G__9058 = d5654;
var G__9059 = e5655;
var G__9060 = f5656;
var G__9061 = g5657;
var G__9062 = h5658;
var G__9063 = i5659;
var G__9064 = j5660;
var G__9065 = k5661;
var G__9066 = l5662;
return (f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__9055,G__9056,G__9057,G__9058,G__9059,G__9060,G__9061,G__9062,G__9063,G__9064,G__9065,G__9066) : f.call(null,G__9055,G__9056,G__9057,G__9058,G__9059,G__9060,G__9061,G__9062,G__9063,G__9064,G__9065,G__9066));
}
} else {
var m5663 = cljs.core._first(args__$13);
var args__$14 = cljs.core._rest(args__$13);
if((argc === (13))){
if(f.cljs$core$IFn$_invoke$arity$13){
return f.cljs$core$IFn$_invoke$arity$13(a5651,b5652,c5653,d5654,e5655,f5656,g5657,h5658,i5659,j5660,k5661,l5662,m5663);
} else {
var G__9067 = a5651;
var G__9068 = b5652;
var G__9069 = c5653;
var G__9070 = d5654;
var G__9071 = e5655;
var G__9072 = f5656;
var G__9073 = g5657;
var G__9074 = h5658;
var G__9075 = i5659;
var G__9076 = j5660;
var G__9077 = k5661;
var G__9078 = l5662;
var G__9079 = m5663;
return (f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__9067,G__9068,G__9069,G__9070,G__9071,G__9072,G__9073,G__9074,G__9075,G__9076,G__9077,G__9078,G__9079) : f.call(null,G__9067,G__9068,G__9069,G__9070,G__9071,G__9072,G__9073,G__9074,G__9075,G__9076,G__9077,G__9078,G__9079));
}
} else {
var n5664 = cljs.core._first(args__$14);
var args__$15 = cljs.core._rest(args__$14);
if((argc === (14))){
if(f.cljs$core$IFn$_invoke$arity$14){
return f.cljs$core$IFn$_invoke$arity$14(a5651,b5652,c5653,d5654,e5655,f5656,g5657,h5658,i5659,j5660,k5661,l5662,m5663,n5664);
} else {
var G__9080 = a5651;
var G__9081 = b5652;
var G__9082 = c5653;
var G__9083 = d5654;
var G__9084 = e5655;
var G__9085 = f5656;
var G__9086 = g5657;
var G__9087 = h5658;
var G__9088 = i5659;
var G__9089 = j5660;
var G__9090 = k5661;
var G__9091 = l5662;
var G__9092 = m5663;
var G__9093 = n5664;
return (f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__9080,G__9081,G__9082,G__9083,G__9084,G__9085,G__9086,G__9087,G__9088,G__9089,G__9090,G__9091,G__9092,G__9093) : f.call(null,G__9080,G__9081,G__9082,G__9083,G__9084,G__9085,G__9086,G__9087,G__9088,G__9089,G__9090,G__9091,G__9092,G__9093));
}
} else {
var o5665 = cljs.core._first(args__$15);
var args__$16 = cljs.core._rest(args__$15);
if((argc === (15))){
if(f.cljs$core$IFn$_invoke$arity$15){
return f.cljs$core$IFn$_invoke$arity$15(a5651,b5652,c5653,d5654,e5655,f5656,g5657,h5658,i5659,j5660,k5661,l5662,m5663,n5664,o5665);
} else {
var G__9094 = a5651;
var G__9095 = b5652;
var G__9096 = c5653;
var G__9097 = d5654;
var G__9098 = e5655;
var G__9099 = f5656;
var G__9100 = g5657;
var G__9101 = h5658;
var G__9102 = i5659;
var G__9103 = j5660;
var G__9104 = k5661;
var G__9105 = l5662;
var G__9106 = m5663;
var G__9107 = n5664;
var G__9108 = o5665;
return (f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__9094,G__9095,G__9096,G__9097,G__9098,G__9099,G__9100,G__9101,G__9102,G__9103,G__9104,G__9105,G__9106,G__9107,G__9108) : f.call(null,G__9094,G__9095,G__9096,G__9097,G__9098,G__9099,G__9100,G__9101,G__9102,G__9103,G__9104,G__9105,G__9106,G__9107,G__9108));
}
} else {
var p5666 = cljs.core._first(args__$16);
var args__$17 = cljs.core._rest(args__$16);
if((argc === (16))){
if(f.cljs$core$IFn$_invoke$arity$16){
return f.cljs$core$IFn$_invoke$arity$16(a5651,b5652,c5653,d5654,e5655,f5656,g5657,h5658,i5659,j5660,k5661,l5662,m5663,n5664,o5665,p5666);
} else {
var G__9109 = a5651;
var G__9110 = b5652;
var G__9111 = c5653;
var G__9112 = d5654;
var G__9113 = e5655;
var G__9114 = f5656;
var G__9115 = g5657;
var G__9116 = h5658;
var G__9117 = i5659;
var G__9118 = j5660;
var G__9119 = k5661;
var G__9120 = l5662;
var G__9121 = m5663;
var G__9122 = n5664;
var G__9123 = o5665;
var G__9124 = p5666;
return (f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__9109,G__9110,G__9111,G__9112,G__9113,G__9114,G__9115,G__9116,G__9117,G__9118,G__9119,G__9120,G__9121,G__9122,G__9123,G__9124) : f.call(null,G__9109,G__9110,G__9111,G__9112,G__9113,G__9114,G__9115,G__9116,G__9117,G__9118,G__9119,G__9120,G__9121,G__9122,G__9123,G__9124));
}
} else {
var q5667 = cljs.core._first(args__$17);
var args__$18 = cljs.core._rest(args__$17);
if((argc === (17))){
if(f.cljs$core$IFn$_invoke$arity$17){
return f.cljs$core$IFn$_invoke$arity$17(a5651,b5652,c5653,d5654,e5655,f5656,g5657,h5658,i5659,j5660,k5661,l5662,m5663,n5664,o5665,p5666,q5667);
} else {
var G__9125 = a5651;
var G__9126 = b5652;
var G__9127 = c5653;
var G__9128 = d5654;
var G__9129 = e5655;
var G__9130 = f5656;
var G__9131 = g5657;
var G__9132 = h5658;
var G__9133 = i5659;
var G__9134 = j5660;
var G__9135 = k5661;
var G__9136 = l5662;
var G__9137 = m5663;
var G__9138 = n5664;
var G__9139 = o5665;
var G__9140 = p5666;
var G__9141 = q5667;
return (f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__9125,G__9126,G__9127,G__9128,G__9129,G__9130,G__9131,G__9132,G__9133,G__9134,G__9135,G__9136,G__9137,G__9138,G__9139,G__9140,G__9141) : f.call(null,G__9125,G__9126,G__9127,G__9128,G__9129,G__9130,G__9131,G__9132,G__9133,G__9134,G__9135,G__9136,G__9137,G__9138,G__9139,G__9140,G__9141));
}
} else {
var r5668 = cljs.core._first(args__$18);
var args__$19 = cljs.core._rest(args__$18);
if((argc === (18))){
if(f.cljs$core$IFn$_invoke$arity$18){
return f.cljs$core$IFn$_invoke$arity$18(a5651,b5652,c5653,d5654,e5655,f5656,g5657,h5658,i5659,j5660,k5661,l5662,m5663,n5664,o5665,p5666,q5667,r5668);
} else {
var G__9142 = a5651;
var G__9143 = b5652;
var G__9144 = c5653;
var G__9145 = d5654;
var G__9146 = e5655;
var G__9147 = f5656;
var G__9148 = g5657;
var G__9149 = h5658;
var G__9150 = i5659;
var G__9151 = j5660;
var G__9152 = k5661;
var G__9153 = l5662;
var G__9154 = m5663;
var G__9155 = n5664;
var G__9156 = o5665;
var G__9157 = p5666;
var G__9158 = q5667;
var G__9159 = r5668;
return (f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__9142,G__9143,G__9144,G__9145,G__9146,G__9147,G__9148,G__9149,G__9150,G__9151,G__9152,G__9153,G__9154,G__9155,G__9156,G__9157,G__9158,G__9159) : f.call(null,G__9142,G__9143,G__9144,G__9145,G__9146,G__9147,G__9148,G__9149,G__9150,G__9151,G__9152,G__9153,G__9154,G__9155,G__9156,G__9157,G__9158,G__9159));
}
} else {
var s5669 = cljs.core._first(args__$19);
var args__$20 = cljs.core._rest(args__$19);
if((argc === (19))){
if(f.cljs$core$IFn$_invoke$arity$19){
return f.cljs$core$IFn$_invoke$arity$19(a5651,b5652,c5653,d5654,e5655,f5656,g5657,h5658,i5659,j5660,k5661,l5662,m5663,n5664,o5665,p5666,q5667,r5668,s5669);
} else {
var G__9160 = a5651;
var G__9161 = b5652;
var G__9162 = c5653;
var G__9163 = d5654;
var G__9164 = e5655;
var G__9165 = f5656;
var G__9166 = g5657;
var G__9167 = h5658;
var G__9168 = i5659;
var G__9169 = j5660;
var G__9170 = k5661;
var G__9171 = l5662;
var G__9172 = m5663;
var G__9173 = n5664;
var G__9174 = o5665;
var G__9175 = p5666;
var G__9176 = q5667;
var G__9177 = r5668;
var G__9178 = s5669;
return (f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__9160,G__9161,G__9162,G__9163,G__9164,G__9165,G__9166,G__9167,G__9168,G__9169,G__9170,G__9171,G__9172,G__9173,G__9174,G__9175,G__9176,G__9177,G__9178) : f.call(null,G__9160,G__9161,G__9162,G__9163,G__9164,G__9165,G__9166,G__9167,G__9168,G__9169,G__9170,G__9171,G__9172,G__9173,G__9174,G__9175,G__9176,G__9177,G__9178));
}
} else {
var t5670 = cljs.core._first(args__$20);
var args__$21 = cljs.core._rest(args__$20);
if((argc === (20))){
if(f.cljs$core$IFn$_invoke$arity$20){
return f.cljs$core$IFn$_invoke$arity$20(a5651,b5652,c5653,d5654,e5655,f5656,g5657,h5658,i5659,j5660,k5661,l5662,m5663,n5664,o5665,p5666,q5667,r5668,s5669,t5670);
} else {
var G__9179 = a5651;
var G__9180 = b5652;
var G__9181 = c5653;
var G__9182 = d5654;
var G__9183 = e5655;
var G__9184 = f5656;
var G__9185 = g5657;
var G__9186 = h5658;
var G__9187 = i5659;
var G__9188 = j5660;
var G__9189 = k5661;
var G__9190 = l5662;
var G__9191 = m5663;
var G__9192 = n5664;
var G__9193 = o5665;
var G__9194 = p5666;
var G__9195 = q5667;
var G__9196 = r5668;
var G__9197 = s5669;
var G__9198 = t5670;
return (f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__9179,G__9180,G__9181,G__9182,G__9183,G__9184,G__9185,G__9186,G__9187,G__9188,G__9189,G__9190,G__9191,G__9192,G__9193,G__9194,G__9195,G__9196,G__9197,G__9198) : f.call(null,G__9179,G__9180,G__9181,G__9182,G__9183,G__9184,G__9185,G__9186,G__9187,G__9188,G__9189,G__9190,G__9191,G__9192,G__9193,G__9194,G__9195,G__9196,G__9197,G__9198));
}
} else {
throw (new Error("Only up to 20 arguments supported on functions"));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
});

/**
* Applies fn f to the argument list formed by prepending intervening arguments to args.
* First cut.  Not lazy.  Needs to use emitted toApply.
* @param {...*} var_args
*/
cljs.core.apply = (function() {
var apply = null;
var apply__2 = (function (f,args){
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(args,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,args);
} else {
return f.cljs$lang$applyTo(args);
}
} else {
return f.apply(f,cljs.core.to_array(args));
}
});
var apply__3 = (function (f,x,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__4 = (function (f,x,y,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x,y,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__5 = (function (f,x,y,z,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x,y,z,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__6 = (function() { 
var G__9199__delegate = function (f,a,b,c,d,args){
var arglist = cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(args)))));
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
};
var G__9199 = function (f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 5) {
var G__9200__i = 0, G__9200__a = new Array(arguments.length -  5);
while (G__9200__i < G__9200__a.length) {G__9200__a[G__9200__i] = arguments[G__9200__i + 5]; ++G__9200__i;}
  args = new cljs.core.IndexedSeq(G__9200__a,0);
} 
return G__9199__delegate.call(this,f,a,b,c,d,args);};
G__9199.cljs$lang$maxFixedArity = 5;
G__9199.cljs$lang$applyTo = (function (arglist__9201){
var f = cljs.core.first(arglist__9201);
arglist__9201 = cljs.core.next(arglist__9201);
var a = cljs.core.first(arglist__9201);
arglist__9201 = cljs.core.next(arglist__9201);
var b = cljs.core.first(arglist__9201);
arglist__9201 = cljs.core.next(arglist__9201);
var c = cljs.core.first(arglist__9201);
arglist__9201 = cljs.core.next(arglist__9201);
var d = cljs.core.first(arglist__9201);
var args = cljs.core.rest(arglist__9201);
return G__9199__delegate(f,a,b,c,d,args);
});
G__9199.cljs$core$IFn$_invoke$arity$variadic = G__9199__delegate;
return G__9199;
})()
;
apply = function(f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return apply__2.call(this,f,a);
case 3:
return apply__3.call(this,f,a,b);
case 4:
return apply__4.call(this,f,a,b,c);
case 5:
return apply__5.call(this,f,a,b,c,d);
default:
var G__9202 = null;
if (arguments.length > 5) {
var G__9203__i = 0, G__9203__a = new Array(arguments.length -  5);
while (G__9203__i < G__9203__a.length) {G__9203__a[G__9203__i] = arguments[G__9203__i + 5]; ++G__9203__i;}
G__9202 = new cljs.core.IndexedSeq(G__9203__a,0);
}
return apply__6.cljs$core$IFn$_invoke$arity$variadic(f,a,b,c,d, G__9202);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
apply.cljs$lang$maxFixedArity = 5;
apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
return apply;
})()
;
/**
* Returns an object of the same type and value as obj, with
* (apply f (meta obj) args) as its metadata.
* @param {...*} var_args
*/
cljs.core.vary_meta = (function() {
var vary_meta = null;
var vary_meta__2 = (function (obj,f){
return cljs.core.with_meta(obj,(function (){var G__9219 = cljs.core.meta(obj);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9219) : f.call(null,G__9219));
})());
});
var vary_meta__3 = (function (obj,f,a){
return cljs.core.with_meta(obj,(function (){var G__9220 = cljs.core.meta(obj);
var G__9221 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9220,G__9221) : f.call(null,G__9220,G__9221));
})());
});
var vary_meta__4 = (function (obj,f,a,b){
return cljs.core.with_meta(obj,(function (){var G__9222 = cljs.core.meta(obj);
var G__9223 = a;
var G__9224 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9222,G__9223,G__9224) : f.call(null,G__9222,G__9223,G__9224));
})());
});
var vary_meta__5 = (function (obj,f,a,b,c){
return cljs.core.with_meta(obj,(function (){var G__9225 = cljs.core.meta(obj);
var G__9226 = a;
var G__9227 = b;
var G__9228 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__9225,G__9226,G__9227,G__9228) : f.call(null,G__9225,G__9226,G__9227,G__9228));
})());
});
var vary_meta__6 = (function (obj,f,a,b,c,d){
return cljs.core.with_meta(obj,(function (){var G__9229 = cljs.core.meta(obj);
var G__9230 = a;
var G__9231 = b;
var G__9232 = c;
var G__9233 = d;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__9229,G__9230,G__9231,G__9232,G__9233) : f.call(null,G__9229,G__9230,G__9231,G__9232,G__9233));
})());
});
var vary_meta__7 = (function() { 
var G__9234__delegate = function (obj,f,a,b,c,d,args){
return cljs.core.with_meta(obj,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.meta(obj),a,b,c,cljs.core.array_seq([d,args], 0)));
};
var G__9234 = function (obj,f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 6) {
var G__9235__i = 0, G__9235__a = new Array(arguments.length -  6);
while (G__9235__i < G__9235__a.length) {G__9235__a[G__9235__i] = arguments[G__9235__i + 6]; ++G__9235__i;}
  args = new cljs.core.IndexedSeq(G__9235__a,0);
} 
return G__9234__delegate.call(this,obj,f,a,b,c,d,args);};
G__9234.cljs$lang$maxFixedArity = 6;
G__9234.cljs$lang$applyTo = (function (arglist__9236){
var obj = cljs.core.first(arglist__9236);
arglist__9236 = cljs.core.next(arglist__9236);
var f = cljs.core.first(arglist__9236);
arglist__9236 = cljs.core.next(arglist__9236);
var a = cljs.core.first(arglist__9236);
arglist__9236 = cljs.core.next(arglist__9236);
var b = cljs.core.first(arglist__9236);
arglist__9236 = cljs.core.next(arglist__9236);
var c = cljs.core.first(arglist__9236);
arglist__9236 = cljs.core.next(arglist__9236);
var d = cljs.core.first(arglist__9236);
var args = cljs.core.rest(arglist__9236);
return G__9234__delegate(obj,f,a,b,c,d,args);
});
G__9234.cljs$core$IFn$_invoke$arity$variadic = G__9234__delegate;
return G__9234;
})()
;
vary_meta = function(obj,f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return vary_meta__2.call(this,obj,f);
case 3:
return vary_meta__3.call(this,obj,f,a);
case 4:
return vary_meta__4.call(this,obj,f,a,b);
case 5:
return vary_meta__5.call(this,obj,f,a,b,c);
case 6:
return vary_meta__6.call(this,obj,f,a,b,c,d);
default:
var G__9237 = null;
if (arguments.length > 6) {
var G__9238__i = 0, G__9238__a = new Array(arguments.length -  6);
while (G__9238__i < G__9238__a.length) {G__9238__a[G__9238__i] = arguments[G__9238__i + 6]; ++G__9238__i;}
G__9237 = new cljs.core.IndexedSeq(G__9238__a,0);
}
return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj,f,a,b,c,d, G__9237);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
vary_meta.cljs$lang$maxFixedArity = 6;
vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
return vary_meta;
})()
;
/**
* Same as (not (= obj1 obj2))
* @param {...*} var_args
*/
cljs.core.not_EQ_ = (function() {
var not_EQ_ = null;
var not_EQ___1 = (function (x){
return false;
});
var not_EQ___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var not_EQ___3 = (function() { 
var G__9239__delegate = function (x,y,more){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_,x,y,more));
};
var G__9239 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__9240__i = 0, G__9240__a = new Array(arguments.length -  2);
while (G__9240__i < G__9240__a.length) {G__9240__a[G__9240__i] = arguments[G__9240__i + 2]; ++G__9240__i;}
  more = new cljs.core.IndexedSeq(G__9240__a,0);
} 
return G__9239__delegate.call(this,x,y,more);};
G__9239.cljs$lang$maxFixedArity = 2;
G__9239.cljs$lang$applyTo = (function (arglist__9241){
var x = cljs.core.first(arglist__9241);
arglist__9241 = cljs.core.next(arglist__9241);
var y = cljs.core.first(arglist__9241);
var more = cljs.core.rest(arglist__9241);
return G__9239__delegate(x,y,more);
});
G__9239.cljs$core$IFn$_invoke$arity$variadic = G__9239__delegate;
return G__9239;
})()
;
not_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return not_EQ___1.call(this,x);
case 2:
return not_EQ___2.call(this,x,y);
default:
var G__9242 = null;
if (arguments.length > 2) {
var G__9243__i = 0, G__9243__a = new Array(arguments.length -  2);
while (G__9243__i < G__9243__a.length) {G__9243__a[G__9243__i] = arguments[G__9243__i + 2]; ++G__9243__i;}
G__9242 = new cljs.core.IndexedSeq(G__9243__a,0);
}
return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__9242);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
not_EQ_.cljs$lang$maxFixedArity = 2;
not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return not_EQ_;
})()
;
/**
* If coll is empty, returns nil, else coll
*/
cljs.core.not_empty = (function not_empty(coll){
if(cljs.core.seq(coll)){
return coll;
} else {
return null;
}
});
cljs.core.nil_iter = (function nil_iter(){
if(typeof cljs.core.t9247 !== 'undefined'){
} else {

/**
* @constructor
*/
cljs.core.t9247 = (function (nil_iter,meta9248){
this.nil_iter = nil_iter;
this.meta9248 = meta9248;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393216;
})
cljs.core.t9247.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return false;
});

cljs.core.t9247.prototype.next = (function (){
var self__ = this;
var _ = this;
return (new Error("No such element"));
});

cljs.core.t9247.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.t9247.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_9249){
var self__ = this;
var _9249__$1 = this;
return self__.meta9248;
});

cljs.core.t9247.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_9249,meta9248__$1){
var self__ = this;
var _9249__$1 = this;
return (new cljs.core.t9247(self__.nil_iter,meta9248__$1));
});

cljs.core.t9247.cljs$lang$type = true;

cljs.core.t9247.cljs$lang$ctorStr = "cljs.core/t9247";

cljs.core.t9247.cljs$lang$ctorPrWriter = (function (this__5307__auto__,writer__5308__auto__,opt__5309__auto__){
return cljs.core._write(writer__5308__auto__,"cljs.core/t9247");
});

cljs.core.__GT_t9247 = (function __GT_t9247(nil_iter__$1,meta9248){
return (new cljs.core.t9247(nil_iter__$1,meta9248));
});

}

return (new cljs.core.t9247(nil_iter,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"end-column","end-column",1425389514),54,new cljs.core.Keyword(null,"end-line","end-line",1837326455),3063,new cljs.core.Keyword(null,"column","column",2078222095),3,new cljs.core.Keyword(null,"line","line",212345235),3059,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/macco/Listings/akiee/app/out/cljs/core.cljs"], null)));
});

/**
* @constructor
*/
cljs.core.StringIter = (function (s,i){
this.s = s;
this.i = i;
})
cljs.core.StringIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.s.length);
});

cljs.core.StringIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.s.charAt(self__.i);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.StringIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.StringIter.cljs$lang$type = true;

cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";

cljs.core.StringIter.cljs$lang$ctorPrWriter = (function (this__5307__auto__,writer__5308__auto__,opt__5309__auto__){
return cljs.core._write(writer__5308__auto__,"cljs.core/StringIter");
});

cljs.core.__GT_StringIter = (function __GT_StringIter(s,i){
return (new cljs.core.StringIter(s,i));
});

cljs.core.string_iter = (function string_iter(x){
return (new cljs.core.StringIter(x,(0)));
});

/**
* @constructor
*/
cljs.core.ArrayIter = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.ArrayIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.ArrayIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.ArrayIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.ArrayIter.cljs$lang$type = true;

cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";

cljs.core.ArrayIter.cljs$lang$ctorPrWriter = (function (this__5307__auto__,writer__5308__auto__,opt__5309__auto__){
return cljs.core._write(writer__5308__auto__,"cljs.core/ArrayIter");
});

cljs.core.__GT_ArrayIter = (function __GT_ArrayIter(arr,i){
return (new cljs.core.ArrayIter(arr,i));
});

cljs.core.array_iter = (function array_iter(x){
return (new cljs.core.ArrayIter(x,(0)));
});
cljs.core.INIT = {};
cljs.core.START = {};

/**
* @constructor
*/
cljs.core.SeqIter = (function (_seq,_next){
this._seq = _seq;
this._next = _next;
})
cljs.core.SeqIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__._seq === cljs.core.INIT)){
self__._seq = cljs.core.START;

self__._next = cljs.core.seq(self__._next);
} else {
if((self__._seq === self__._next)){
self__._next = cljs.core.next(self__._seq);
} else {
}
}

return !((self__._next == null));
});

cljs.core.SeqIter.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(cljs.core.not(this$.hasNext())){
throw (new Error("No such element"));
} else {
self__._seq = self__._next;

return cljs.core.first(self__._next);
}
});

cljs.core.SeqIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.SeqIter.cljs$lang$type = true;

cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";

cljs.core.SeqIter.cljs$lang$ctorPrWriter = (function (this__5307__auto__,writer__5308__auto__,opt__5309__auto__){
return cljs.core._write(writer__5308__auto__,"cljs.core/SeqIter");
});

cljs.core.__GT_SeqIter = (function __GT_SeqIter(_seq,_next){
return (new cljs.core.SeqIter(_seq,_next));
});

cljs.core.seq_iter = (function seq_iter(coll){
return (new cljs.core.SeqIter(cljs.core.INIT,coll));
});
cljs.core.iter = (function iter(coll){
if((coll == null)){
return cljs.core.nil_iter();
} else {
if(typeof coll === 'string'){
return cljs.core.string_iter(coll);
} else {
if(coll instanceof Array){
return cljs.core.array_iter(coll);
} else {
if(cljs.core.iterable_QMARK_(coll)){
return cljs.core._iterator(coll);
} else {
if(cljs.core.seqable_QMARK_(coll)){
return cljs.core.seq_iter(coll);
} else {
throw (new Error([cljs.core.str("Cannot create iterator from "),cljs.core.str(coll)].join('')));

}
}
}
}
}
});
cljs.core.lazy_transformer = (function lazy_transformer(stepper){
return (new cljs.core.LazyTransformer(stepper,null,null,null));
});

/**
* @constructor
*/
cljs.core.Stepper = (function (xform,iter){
this.xform = xform;
this.iter = iter;
})
cljs.core.Stepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__4708__auto__ = !((lt.stepper == null));
if(and__4708__auto__){
return self__.iter.hasNext();
} else {
return and__4708__auto__;
}
})())){
if(cljs.core.reduced_QMARK_((function (){var G__9250 = lt;
var G__9251 = self__.iter.next();
return (self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__9250,G__9251) : self__.xform.call(null,G__9250,G__9251));
})())){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__9252 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__9252) : self__.xform.call(null,G__9252));
}
});

cljs.core.Stepper.cljs$lang$type = true;

cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";

cljs.core.Stepper.cljs$lang$ctorPrWriter = (function (this__5307__auto__,writer__5308__auto__,opt__5309__auto__){
return cljs.core._write(writer__5308__auto__,"cljs.core/Stepper");
});

cljs.core.__GT_Stepper = (function __GT_Stepper(xform,iter){
return (new cljs.core.Stepper(xform,iter));
});

cljs.core.stepper = (function stepper(xform,iter){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return result;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.Stepper((function (){var G__9254 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__9254) : xform.call(null,G__9254));
})(),iter));
});

/**
* @constructor
*/
cljs.core.MultiStepper = (function (xform,iters,nexts){
this.xform = xform;
this.iters = iters;
this.nexts = nexts;
})
cljs.core.MultiStepper.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
var iters__$1 = cljs.core.seq(self__.iters);
while(true){
if(!((iters__$1 == null))){
var iter = cljs.core.first(iters__$1);
if(cljs.core.not(iter.hasNext())){
return false;
} else {
var G__9256 = cljs.core.next(iters__$1);
iters__$1 = G__9256;
continue;
}
} else {
return true;
}
break;
}
});

cljs.core.MultiStepper.prototype.next = (function (){
var self__ = this;
var _ = this;
var n__5607__auto___9257 = self__.iters.length;
var i_9258 = (0);
while(true){
if((i_9258 < n__5607__auto___9257)){
(self__.nexts[i_9258] = (self__.iters[i_9258]).next());

var G__9259 = (i_9258 + (1));
i_9258 = G__9259;
continue;
} else {
}
break;
}

return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts,(0));
});

cljs.core.MultiStepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__4708__auto__ = !((lt.stepper == null));
if(and__4708__auto__){
return this$.hasNext();
} else {
return and__4708__auto__;
}
})())){
if(cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform,cljs.core.cons(lt,this$.next())))){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__9255 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__9255) : self__.xform.call(null,G__9255));
}
});

cljs.core.MultiStepper.cljs$lang$type = true;

cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";

cljs.core.MultiStepper.cljs$lang$ctorPrWriter = (function (this__5307__auto__,writer__5308__auto__,opt__5309__auto__){
return cljs.core._write(writer__5308__auto__,"cljs.core/MultiStepper");
});

cljs.core.__GT_MultiStepper = (function __GT_MultiStepper(xform,iters,nexts){
return (new cljs.core.MultiStepper(xform,iters,nexts));
});

cljs.core.multi_stepper = (function() {
var multi_stepper = null;
var multi_stepper__2 = (function (xform,iters){
return multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length)));
});
var multi_stepper__3 = (function (xform,iters,nexts){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return lt;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.MultiStepper((function (){var G__9264 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__9264) : xform.call(null,G__9264));
})(),iters,nexts));
});
multi_stepper = function(xform,iters,nexts){
switch(arguments.length){
case 2:
return multi_stepper__2.call(this,xform,iters);
case 3:
return multi_stepper__3.call(this,xform,iters,nexts);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
return multi_stepper;
})()
;

/**
* @constructor
*/
cljs.core.LazyTransformer = (function (stepper,first,rest,meta){
this.stepper = stepper;
this.first = first;
this.rest = rest;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31719628;
})
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return cljs.core._seq(self__.rest);
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return self__.first;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
self__.stepper.step(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return this$__$1;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.hash_ordered_coll(this$__$1);
});

cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this$,other){
var self__ = this;
var this$__$1 = this;
var s = cljs.core._seq(this$__$1);
if(!((s == null))){
return cljs.core.equiv_sequential(this$__$1,other);
} else {
return (cljs.core.sequential_QMARK_(other)) && ((cljs.core.seq(other) == null));
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,cljs.core._seq(this$__$1));
});

cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this$,new_meta){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.LazyTransformer(self__.stepper,self__.first,self__.rest,new_meta));
});

cljs.core.LazyTransformer.cljs$lang$type = true;

cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";

cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = (function (this__5307__auto__,writer__5308__auto__,opt__5309__auto__){
return cljs.core._write(writer__5308__auto__,"cljs.core/LazyTransformer");
});

cljs.core.__GT_LazyTransformer = (function __GT_LazyTransformer(stepper,first,rest,meta){
return (new cljs.core.LazyTransformer(stepper,first,rest,meta));
});

(cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5698__auto__ = this;
return cljs.core.es6_iterator(this__5698__auto__);
}));
cljs.core.LazyTransformer.create = (function (xform,coll){
return (new cljs.core.LazyTransformer(cljs.core.stepper(xform,cljs.core.iter(coll)),null,null,null));
});
cljs.core.LazyTransformer.createMulti = (function (xform,colls){
var iters = [];
var seq__9265_9269 = cljs.core.seq(colls);
var chunk__9266_9270 = null;
var count__9267_9271 = (0);
var i__9268_9272 = (0);
while(true){
if((i__9268_9272 < count__9267_9271)){
var coll_9273 = chunk__9266_9270.cljs$core$IIndexed$_nth$arity$2(null,i__9268_9272);
iters.push(cljs.core.iter(coll_9273));

var G__9274 = seq__9265_9269;
var G__9275 = chunk__9266_9270;
var G__9276 = count__9267_9271;
var G__9277 = (i__9268_9272 + (1));
seq__9265_9269 = G__9274;
chunk__9266_9270 = G__9275;
count__9267_9271 = G__9276;
i__9268_9272 = G__9277;
continue;
} else {
var temp__4126__auto___9278 = cljs.core.seq(seq__9265_9269);
if(temp__4126__auto___9278){
var seq__9265_9279__$1 = temp__4126__auto___9278;
if(cljs.core.chunked_seq_QMARK_(seq__9265_9279__$1)){
var c__5507__auto___9280 = cljs.core.chunk_first(seq__9265_9279__$1);
var G__9281 = cljs.core.chunk_rest(seq__9265_9279__$1);
var G__9282 = c__5507__auto___9280;
var G__9283 = cljs.core.count(c__5507__auto___9280);
var G__9284 = (0);
seq__9265_9269 = G__9281;
chunk__9266_9270 = G__9282;
count__9267_9271 = G__9283;
i__9268_9272 = G__9284;
continue;
} else {
var coll_9285 = cljs.core.first(seq__9265_9279__$1);
iters.push(cljs.core.iter(coll_9285));

var G__9286 = cljs.core.next(seq__9265_9279__$1);
var G__9287 = null;
var G__9288 = (0);
var G__9289 = (0);
seq__9265_9269 = G__9286;
chunk__9266_9270 = G__9287;
count__9267_9271 = G__9288;
i__9268_9272 = G__9289;
continue;
}
} else {
}
}
break;
}

return (new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length))),null,null,null));
});
/**
* Coerces coll to a (possibly empty) sequence, if it is not already
* one. Will not force a lazy seq. (sequence nil) yields (), When a
* transducer is supplied, returns a lazy sequence of applications of
* the transform to the items in coll(s), i.e. to the set of first
* items of each coll, followed by the set of second
* items in each coll, until any one of the colls is exhausted.  Any
* remaining items in other colls are ignored. The transform should accept
* number-of-colls arguments
* @param {...*} var_args
*/
cljs.core.sequence = (function() {
var sequence = null;
var sequence__1 = (function (coll){
if(cljs.core.seq_QMARK_(coll)){
return coll;
} else {
var or__4720__auto__ = cljs.core.seq(coll);
if(or__4720__auto__){
return or__4720__auto__;
} else {
return cljs.core.List.EMPTY;
}
}
});
var sequence__2 = (function (xform,coll){
return cljs.core.LazyTransformer.create(xform,coll);
});
var sequence__3 = (function() { 
var G__9290__delegate = function (xform,coll,colls){
return cljs.core.LazyTransformer.createMulti(xform,cljs.core.to_array(cljs.core.cons(coll,colls)));
};
var G__9290 = function (xform,coll,var_args){
var colls = null;
if (arguments.length > 2) {
var G__9291__i = 0, G__9291__a = new Array(arguments.length -  2);
while (G__9291__i < G__9291__a.length) {G__9291__a[G__9291__i] = arguments[G__9291__i + 2]; ++G__9291__i;}
  colls = new cljs.core.IndexedSeq(G__9291__a,0);
} 
return G__9290__delegate.call(this,xform,coll,colls);};
G__9290.cljs$lang$maxFixedArity = 2;
G__9290.cljs$lang$applyTo = (function (arglist__9292){
var xform = cljs.core.first(arglist__9292);
arglist__9292 = cljs.core.next(arglist__9292);
var coll = cljs.core.first(arglist__9292);
var colls = cljs.core.rest(arglist__9292);
return G__9290__delegate(xform,coll,colls);
});
G__9290.cljs$core$IFn$_invoke$arity$variadic = G__9290__delegate;
return G__9290;
})()
;
sequence = function(xform,coll,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return sequence__1.call(this,xform);
case 2:
return sequence__2.call(this,xform,coll);
default:
var G__9293 = null;
if (arguments.length > 2) {
var G__9294__i = 0, G__9294__a = new Array(arguments.length -  2);
while (G__9294__i < G__9294__a.length) {G__9294__a[G__9294__i] = arguments[G__9294__i + 2]; ++G__9294__i;}
G__9293 = new cljs.core.IndexedSeq(G__9294__a,0);
}
return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform,coll, G__9293);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sequence.cljs$lang$maxFixedArity = 2;
sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
return sequence;
})()
;
/**
* Returns true if (pred x) is logical true for every x in coll, else
* false.
*/
cljs.core.every_QMARK_ = (function every_QMARK_(pred,coll){
while(true){
if((cljs.core.seq(coll) == null)){
return true;
} else {
if(cljs.core.truth_((function (){var G__9296 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__9296) : pred.call(null,G__9296));
})())){
var G__9297 = pred;
var G__9298 = cljs.core.next(coll);
pred = G__9297;
coll = G__9298;
continue;
} else {
return false;

}
}
break;
}
});
/**
* Returns false if (pred x) is logical true for every x in
* coll, else true.
*/
cljs.core.not_every_QMARK_ = (function not_every_QMARK_(pred,coll){
return !(cljs.core.every_QMARK_(pred,coll));
});
/**
* Returns the first logical true value of (pred x) for any x in coll,
* else nil.  One common idiom is to use a set as pred, for example
* this will return :fred if :fred is in the sequence, otherwise nil:
* (some #{:fred} coll)
*/
cljs.core.some = (function some(pred,coll){
while(true){
if(cljs.core.seq(coll)){
var or__4720__auto__ = (function (){var G__9302 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__9302) : pred.call(null,G__9302));
})();
if(cljs.core.truth_(or__4720__auto__)){
return or__4720__auto__;
} else {
var G__9303 = pred;
var G__9304 = cljs.core.next(coll);
pred = G__9303;
coll = G__9304;
continue;
}
} else {
return null;
}
break;
}
});
/**
* Returns false if (pred x) is logical true for any x in coll,
* else true.
*/
cljs.core.not_any_QMARK_ = (function not_any_QMARK_(pred,coll){
return cljs.core.not(cljs.core.some(pred,coll));
});
/**
* Returns true if n is even, throws an exception if n is not an integer
*/
cljs.core.even_QMARK_ = (function even_QMARK_(n){
if(cljs.core.integer_QMARK_(n)){
return ((n & (1)) === (0));
} else {
throw (new Error([cljs.core.str("Argument must be an integer: "),cljs.core.str(n)].join('')));
}
});
/**
* Returns true if n is odd, throws an exception if n is not an integer
*/
cljs.core.odd_QMARK_ = (function odd_QMARK_(n){
return !(cljs.core.even_QMARK_(n));
});
/**
* Takes a fn f and returns a fn that takes the same arguments as f,
* has the same effects, if any, and returns the opposite truth value.
*/
cljs.core.complement = (function complement(f){
return (function() {
var G__9311 = null;
var G__9311__0 = (function (){
return cljs.core.not((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
});
var G__9311__1 = (function (x){
return cljs.core.not((function (){var G__9308 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9308) : f.call(null,G__9308));
})());
});
var G__9311__2 = (function (x,y){
return cljs.core.not((function (){var G__9309 = x;
var G__9310 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9309,G__9310) : f.call(null,G__9309,G__9310));
})());
});
var G__9311__3 = (function() { 
var G__9312__delegate = function (x,y,zs){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f,x,y,zs));
};
var G__9312 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__9313__i = 0, G__9313__a = new Array(arguments.length -  2);
while (G__9313__i < G__9313__a.length) {G__9313__a[G__9313__i] = arguments[G__9313__i + 2]; ++G__9313__i;}
  zs = new cljs.core.IndexedSeq(G__9313__a,0);
} 
return G__9312__delegate.call(this,x,y,zs);};
G__9312.cljs$lang$maxFixedArity = 2;
G__9312.cljs$lang$applyTo = (function (arglist__9314){
var x = cljs.core.first(arglist__9314);
arglist__9314 = cljs.core.next(arglist__9314);
var y = cljs.core.first(arglist__9314);
var zs = cljs.core.rest(arglist__9314);
return G__9312__delegate(x,y,zs);
});
G__9312.cljs$core$IFn$_invoke$arity$variadic = G__9312__delegate;
return G__9312;
})()
;
G__9311 = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return G__9311__0.call(this);
case 1:
return G__9311__1.call(this,x);
case 2:
return G__9311__2.call(this,x,y);
default:
var G__9315 = null;
if (arguments.length > 2) {
var G__9316__i = 0, G__9316__a = new Array(arguments.length -  2);
while (G__9316__i < G__9316__a.length) {G__9316__a[G__9316__i] = arguments[G__9316__i + 2]; ++G__9316__i;}
G__9315 = new cljs.core.IndexedSeq(G__9316__a,0);
}
return G__9311__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__9315);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9311.cljs$lang$maxFixedArity = 2;
G__9311.cljs$lang$applyTo = G__9311__3.cljs$lang$applyTo;
G__9311.cljs$core$IFn$_invoke$arity$0 = G__9311__0;
G__9311.cljs$core$IFn$_invoke$arity$1 = G__9311__1;
G__9311.cljs$core$IFn$_invoke$arity$2 = G__9311__2;
G__9311.cljs$core$IFn$_invoke$arity$variadic = G__9311__3.cljs$core$IFn$_invoke$arity$variadic;
return G__9311;
})()
});
/**
* Returns a function that takes any number of arguments and returns x.
*/
cljs.core.constantly = (function constantly(x){
return (function() { 
var G__9317__delegate = function (args){
return x;
};
var G__9317 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__9318__i = 0, G__9318__a = new Array(arguments.length -  0);
while (G__9318__i < G__9318__a.length) {G__9318__a[G__9318__i] = arguments[G__9318__i + 0]; ++G__9318__i;}
  args = new cljs.core.IndexedSeq(G__9318__a,0);
} 
return G__9317__delegate.call(this,args);};
G__9317.cljs$lang$maxFixedArity = 0;
G__9317.cljs$lang$applyTo = (function (arglist__9319){
var args = cljs.core.seq(arglist__9319);
return G__9317__delegate(args);
});
G__9317.cljs$core$IFn$_invoke$arity$variadic = G__9317__delegate;
return G__9317;
})()
;
});
/**
* Takes a set of functions and returns a fn that is the composition
* of those fns.  The returned fn takes a variable number of args,
* applies the rightmost of fns to the args, the next
* fn (right-to-left) to the result, etc.
* @param {...*} var_args
*/
cljs.core.comp = (function() {
var comp = null;
var comp__0 = (function (){
return cljs.core.identity;
});
var comp__1 = (function (f){
return f;
});
var comp__2 = (function (f,g){
return (function() {
var G__9374 = null;
var G__9374__0 = (function (){
var G__9347 = (function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9347) : f.call(null,G__9347));
});
var G__9374__1 = (function (x){
var G__9348 = (function (){var G__9349 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__9349) : g.call(null,G__9349));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9348) : f.call(null,G__9348));
});
var G__9374__2 = (function (x,y){
var G__9350 = (function (){var G__9351 = x;
var G__9352 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__9351,G__9352) : g.call(null,G__9351,G__9352));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9350) : f.call(null,G__9350));
});
var G__9374__3 = (function (x,y,z){
var G__9353 = (function (){var G__9354 = x;
var G__9355 = y;
var G__9356 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__9354,G__9355,G__9356) : g.call(null,G__9354,G__9355,G__9356));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9353) : f.call(null,G__9353));
});
var G__9374__4 = (function() { 
var G__9375__delegate = function (x,y,z,args){
var G__9357 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9357) : f.call(null,G__9357));
};
var G__9375 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9376__i = 0, G__9376__a = new Array(arguments.length -  3);
while (G__9376__i < G__9376__a.length) {G__9376__a[G__9376__i] = arguments[G__9376__i + 3]; ++G__9376__i;}
  args = new cljs.core.IndexedSeq(G__9376__a,0);
} 
return G__9375__delegate.call(this,x,y,z,args);};
G__9375.cljs$lang$maxFixedArity = 3;
G__9375.cljs$lang$applyTo = (function (arglist__9377){
var x = cljs.core.first(arglist__9377);
arglist__9377 = cljs.core.next(arglist__9377);
var y = cljs.core.first(arglist__9377);
arglist__9377 = cljs.core.next(arglist__9377);
var z = cljs.core.first(arglist__9377);
var args = cljs.core.rest(arglist__9377);
return G__9375__delegate(x,y,z,args);
});
G__9375.cljs$core$IFn$_invoke$arity$variadic = G__9375__delegate;
return G__9375;
})()
;
G__9374 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__9374__0.call(this);
case 1:
return G__9374__1.call(this,x);
case 2:
return G__9374__2.call(this,x,y);
case 3:
return G__9374__3.call(this,x,y,z);
default:
var G__9378 = null;
if (arguments.length > 3) {
var G__9379__i = 0, G__9379__a = new Array(arguments.length -  3);
while (G__9379__i < G__9379__a.length) {G__9379__a[G__9379__i] = arguments[G__9379__i + 3]; ++G__9379__i;}
G__9378 = new cljs.core.IndexedSeq(G__9379__a,0);
}
return G__9374__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9378);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9374.cljs$lang$maxFixedArity = 3;
G__9374.cljs$lang$applyTo = G__9374__4.cljs$lang$applyTo;
G__9374.cljs$core$IFn$_invoke$arity$0 = G__9374__0;
G__9374.cljs$core$IFn$_invoke$arity$1 = G__9374__1;
G__9374.cljs$core$IFn$_invoke$arity$2 = G__9374__2;
G__9374.cljs$core$IFn$_invoke$arity$3 = G__9374__3;
G__9374.cljs$core$IFn$_invoke$arity$variadic = G__9374__4.cljs$core$IFn$_invoke$arity$variadic;
return G__9374;
})()
});
var comp__3 = (function (f,g,h){
return (function() {
var G__9380 = null;
var G__9380__0 = (function (){
var G__9358 = (function (){var G__9359 = (function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__9359) : g.call(null,G__9359));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9358) : f.call(null,G__9358));
});
var G__9380__1 = (function (x){
var G__9360 = (function (){var G__9361 = (function (){var G__9362 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__9362) : h.call(null,G__9362));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__9361) : g.call(null,G__9361));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9360) : f.call(null,G__9360));
});
var G__9380__2 = (function (x,y){
var G__9363 = (function (){var G__9364 = (function (){var G__9365 = x;
var G__9366 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__9365,G__9366) : h.call(null,G__9365,G__9366));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__9364) : g.call(null,G__9364));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9363) : f.call(null,G__9363));
});
var G__9380__3 = (function (x,y,z){
var G__9367 = (function (){var G__9368 = (function (){var G__9369 = x;
var G__9370 = y;
var G__9371 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__9369,G__9370,G__9371) : h.call(null,G__9369,G__9370,G__9371));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__9368) : g.call(null,G__9368));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9367) : f.call(null,G__9367));
});
var G__9380__4 = (function() { 
var G__9381__delegate = function (x,y,z,args){
var G__9372 = (function (){var G__9373 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args);
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__9373) : g.call(null,G__9373));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9372) : f.call(null,G__9372));
};
var G__9381 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9382__i = 0, G__9382__a = new Array(arguments.length -  3);
while (G__9382__i < G__9382__a.length) {G__9382__a[G__9382__i] = arguments[G__9382__i + 3]; ++G__9382__i;}
  args = new cljs.core.IndexedSeq(G__9382__a,0);
} 
return G__9381__delegate.call(this,x,y,z,args);};
G__9381.cljs$lang$maxFixedArity = 3;
G__9381.cljs$lang$applyTo = (function (arglist__9383){
var x = cljs.core.first(arglist__9383);
arglist__9383 = cljs.core.next(arglist__9383);
var y = cljs.core.first(arglist__9383);
arglist__9383 = cljs.core.next(arglist__9383);
var z = cljs.core.first(arglist__9383);
var args = cljs.core.rest(arglist__9383);
return G__9381__delegate(x,y,z,args);
});
G__9381.cljs$core$IFn$_invoke$arity$variadic = G__9381__delegate;
return G__9381;
})()
;
G__9380 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__9380__0.call(this);
case 1:
return G__9380__1.call(this,x);
case 2:
return G__9380__2.call(this,x,y);
case 3:
return G__9380__3.call(this,x,y,z);
default:
var G__9384 = null;
if (arguments.length > 3) {
var G__9385__i = 0, G__9385__a = new Array(arguments.length -  3);
while (G__9385__i < G__9385__a.length) {G__9385__a[G__9385__i] = arguments[G__9385__i + 3]; ++G__9385__i;}
G__9384 = new cljs.core.IndexedSeq(G__9385__a,0);
}
return G__9380__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9384);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9380.cljs$lang$maxFixedArity = 3;
G__9380.cljs$lang$applyTo = G__9380__4.cljs$lang$applyTo;
G__9380.cljs$core$IFn$_invoke$arity$0 = G__9380__0;
G__9380.cljs$core$IFn$_invoke$arity$1 = G__9380__1;
G__9380.cljs$core$IFn$_invoke$arity$2 = G__9380__2;
G__9380.cljs$core$IFn$_invoke$arity$3 = G__9380__3;
G__9380.cljs$core$IFn$_invoke$arity$variadic = G__9380__4.cljs$core$IFn$_invoke$arity$variadic;
return G__9380;
})()
});
var comp__4 = (function() { 
var G__9386__delegate = function (f1,f2,f3,fs){
var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1,f2,f3,fs));
return ((function (fs__$1){
return (function() { 
var G__9387__delegate = function (args){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1),args);
var fs__$2 = cljs.core.next(fs__$1);
while(true){
if(fs__$2){
var G__9388 = cljs.core.first(fs__$2).call(null,ret);
var G__9389 = cljs.core.next(fs__$2);
ret = G__9388;
fs__$2 = G__9389;
continue;
} else {
return ret;
}
break;
}
};
var G__9387 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__9390__i = 0, G__9390__a = new Array(arguments.length -  0);
while (G__9390__i < G__9390__a.length) {G__9390__a[G__9390__i] = arguments[G__9390__i + 0]; ++G__9390__i;}
  args = new cljs.core.IndexedSeq(G__9390__a,0);
} 
return G__9387__delegate.call(this,args);};
G__9387.cljs$lang$maxFixedArity = 0;
G__9387.cljs$lang$applyTo = (function (arglist__9391){
var args = cljs.core.seq(arglist__9391);
return G__9387__delegate(args);
});
G__9387.cljs$core$IFn$_invoke$arity$variadic = G__9387__delegate;
return G__9387;
})()
;
;})(fs__$1))
};
var G__9386 = function (f1,f2,f3,var_args){
var fs = null;
if (arguments.length > 3) {
var G__9392__i = 0, G__9392__a = new Array(arguments.length -  3);
while (G__9392__i < G__9392__a.length) {G__9392__a[G__9392__i] = arguments[G__9392__i + 3]; ++G__9392__i;}
  fs = new cljs.core.IndexedSeq(G__9392__a,0);
} 
return G__9386__delegate.call(this,f1,f2,f3,fs);};
G__9386.cljs$lang$maxFixedArity = 3;
G__9386.cljs$lang$applyTo = (function (arglist__9393){
var f1 = cljs.core.first(arglist__9393);
arglist__9393 = cljs.core.next(arglist__9393);
var f2 = cljs.core.first(arglist__9393);
arglist__9393 = cljs.core.next(arglist__9393);
var f3 = cljs.core.first(arglist__9393);
var fs = cljs.core.rest(arglist__9393);
return G__9386__delegate(f1,f2,f3,fs);
});
G__9386.cljs$core$IFn$_invoke$arity$variadic = G__9386__delegate;
return G__9386;
})()
;
comp = function(f1,f2,f3,var_args){
var fs = var_args;
switch(arguments.length){
case 0:
return comp__0.call(this);
case 1:
return comp__1.call(this,f1);
case 2:
return comp__2.call(this,f1,f2);
case 3:
return comp__3.call(this,f1,f2,f3);
default:
var G__9394 = null;
if (arguments.length > 3) {
var G__9395__i = 0, G__9395__a = new Array(arguments.length -  3);
while (G__9395__i < G__9395__a.length) {G__9395__a[G__9395__i] = arguments[G__9395__i + 3]; ++G__9395__i;}
G__9394 = new cljs.core.IndexedSeq(G__9395__a,0);
}
return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1,f2,f3, G__9394);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
comp.cljs$lang$maxFixedArity = 3;
comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
return comp;
})()
;
/**
* Takes a function f and fewer than the normal arguments to f, and
* returns a fn that takes a variable number of additional args. When
* called, the returned function calls f with args + additional args.
* @param {...*} var_args
*/
cljs.core.partial = (function() {
var partial = null;
var partial__1 = (function (f){
return f;
});
var partial__2 = (function (f,arg1){
return (function() {
var G__9480 = null;
var G__9480__0 = (function (){
var G__9438 = arg1;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9438) : f.call(null,G__9438));
});
var G__9480__1 = (function (x){
var G__9439 = arg1;
var G__9440 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9439,G__9440) : f.call(null,G__9439,G__9440));
});
var G__9480__2 = (function (x,y){
var G__9441 = arg1;
var G__9442 = x;
var G__9443 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9441,G__9442,G__9443) : f.call(null,G__9441,G__9442,G__9443));
});
var G__9480__3 = (function (x,y,z){
var G__9444 = arg1;
var G__9445 = x;
var G__9446 = y;
var G__9447 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__9444,G__9445,G__9446,G__9447) : f.call(null,G__9444,G__9445,G__9446,G__9447));
});
var G__9480__4 = (function() { 
var G__9481__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,x,y,z,cljs.core.array_seq([args], 0));
};
var G__9481 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9482__i = 0, G__9482__a = new Array(arguments.length -  3);
while (G__9482__i < G__9482__a.length) {G__9482__a[G__9482__i] = arguments[G__9482__i + 3]; ++G__9482__i;}
  args = new cljs.core.IndexedSeq(G__9482__a,0);
} 
return G__9481__delegate.call(this,x,y,z,args);};
G__9481.cljs$lang$maxFixedArity = 3;
G__9481.cljs$lang$applyTo = (function (arglist__9483){
var x = cljs.core.first(arglist__9483);
arglist__9483 = cljs.core.next(arglist__9483);
var y = cljs.core.first(arglist__9483);
arglist__9483 = cljs.core.next(arglist__9483);
var z = cljs.core.first(arglist__9483);
var args = cljs.core.rest(arglist__9483);
return G__9481__delegate(x,y,z,args);
});
G__9481.cljs$core$IFn$_invoke$arity$variadic = G__9481__delegate;
return G__9481;
})()
;
G__9480 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__9480__0.call(this);
case 1:
return G__9480__1.call(this,x);
case 2:
return G__9480__2.call(this,x,y);
case 3:
return G__9480__3.call(this,x,y,z);
default:
var G__9484 = null;
if (arguments.length > 3) {
var G__9485__i = 0, G__9485__a = new Array(arguments.length -  3);
while (G__9485__i < G__9485__a.length) {G__9485__a[G__9485__i] = arguments[G__9485__i + 3]; ++G__9485__i;}
G__9484 = new cljs.core.IndexedSeq(G__9485__a,0);
}
return G__9480__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9484);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9480.cljs$lang$maxFixedArity = 3;
G__9480.cljs$lang$applyTo = G__9480__4.cljs$lang$applyTo;
G__9480.cljs$core$IFn$_invoke$arity$0 = G__9480__0;
G__9480.cljs$core$IFn$_invoke$arity$1 = G__9480__1;
G__9480.cljs$core$IFn$_invoke$arity$2 = G__9480__2;
G__9480.cljs$core$IFn$_invoke$arity$3 = G__9480__3;
G__9480.cljs$core$IFn$_invoke$arity$variadic = G__9480__4.cljs$core$IFn$_invoke$arity$variadic;
return G__9480;
})()
});
var partial__3 = (function (f,arg1,arg2){
return (function() {
var G__9486 = null;
var G__9486__0 = (function (){
var G__9448 = arg1;
var G__9449 = arg2;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9448,G__9449) : f.call(null,G__9448,G__9449));
});
var G__9486__1 = (function (x){
var G__9450 = arg1;
var G__9451 = arg2;
var G__9452 = x;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9450,G__9451,G__9452) : f.call(null,G__9450,G__9451,G__9452));
});
var G__9486__2 = (function (x,y){
var G__9453 = arg1;
var G__9454 = arg2;
var G__9455 = x;
var G__9456 = y;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__9453,G__9454,G__9455,G__9456) : f.call(null,G__9453,G__9454,G__9455,G__9456));
});
var G__9486__3 = (function (x,y,z){
var G__9457 = arg1;
var G__9458 = arg2;
var G__9459 = x;
var G__9460 = y;
var G__9461 = z;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__9457,G__9458,G__9459,G__9460,G__9461) : f.call(null,G__9457,G__9458,G__9459,G__9460,G__9461));
});
var G__9486__4 = (function() { 
var G__9487__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,x,y,cljs.core.array_seq([z,args], 0));
};
var G__9487 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9488__i = 0, G__9488__a = new Array(arguments.length -  3);
while (G__9488__i < G__9488__a.length) {G__9488__a[G__9488__i] = arguments[G__9488__i + 3]; ++G__9488__i;}
  args = new cljs.core.IndexedSeq(G__9488__a,0);
} 
return G__9487__delegate.call(this,x,y,z,args);};
G__9487.cljs$lang$maxFixedArity = 3;
G__9487.cljs$lang$applyTo = (function (arglist__9489){
var x = cljs.core.first(arglist__9489);
arglist__9489 = cljs.core.next(arglist__9489);
var y = cljs.core.first(arglist__9489);
arglist__9489 = cljs.core.next(arglist__9489);
var z = cljs.core.first(arglist__9489);
var args = cljs.core.rest(arglist__9489);
return G__9487__delegate(x,y,z,args);
});
G__9487.cljs$core$IFn$_invoke$arity$variadic = G__9487__delegate;
return G__9487;
})()
;
G__9486 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__9486__0.call(this);
case 1:
return G__9486__1.call(this,x);
case 2:
return G__9486__2.call(this,x,y);
case 3:
return G__9486__3.call(this,x,y,z);
default:
var G__9490 = null;
if (arguments.length > 3) {
var G__9491__i = 0, G__9491__a = new Array(arguments.length -  3);
while (G__9491__i < G__9491__a.length) {G__9491__a[G__9491__i] = arguments[G__9491__i + 3]; ++G__9491__i;}
G__9490 = new cljs.core.IndexedSeq(G__9491__a,0);
}
return G__9486__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9490);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9486.cljs$lang$maxFixedArity = 3;
G__9486.cljs$lang$applyTo = G__9486__4.cljs$lang$applyTo;
G__9486.cljs$core$IFn$_invoke$arity$0 = G__9486__0;
G__9486.cljs$core$IFn$_invoke$arity$1 = G__9486__1;
G__9486.cljs$core$IFn$_invoke$arity$2 = G__9486__2;
G__9486.cljs$core$IFn$_invoke$arity$3 = G__9486__3;
G__9486.cljs$core$IFn$_invoke$arity$variadic = G__9486__4.cljs$core$IFn$_invoke$arity$variadic;
return G__9486;
})()
});
var partial__4 = (function (f,arg1,arg2,arg3){
return (function() {
var G__9492 = null;
var G__9492__0 = (function (){
var G__9462 = arg1;
var G__9463 = arg2;
var G__9464 = arg3;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9462,G__9463,G__9464) : f.call(null,G__9462,G__9463,G__9464));
});
var G__9492__1 = (function (x){
var G__9465 = arg1;
var G__9466 = arg2;
var G__9467 = arg3;
var G__9468 = x;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__9465,G__9466,G__9467,G__9468) : f.call(null,G__9465,G__9466,G__9467,G__9468));
});
var G__9492__2 = (function (x,y){
var G__9469 = arg1;
var G__9470 = arg2;
var G__9471 = arg3;
var G__9472 = x;
var G__9473 = y;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__9469,G__9470,G__9471,G__9472,G__9473) : f.call(null,G__9469,G__9470,G__9471,G__9472,G__9473));
});
var G__9492__3 = (function (x,y,z){
var G__9474 = arg1;
var G__9475 = arg2;
var G__9476 = arg3;
var G__9477 = x;
var G__9478 = y;
var G__9479 = z;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__9474,G__9475,G__9476,G__9477,G__9478,G__9479) : f.call(null,G__9474,G__9475,G__9476,G__9477,G__9478,G__9479));
});
var G__9492__4 = (function() { 
var G__9493__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3,x,cljs.core.array_seq([y,z,args], 0));
};
var G__9493 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9494__i = 0, G__9494__a = new Array(arguments.length -  3);
while (G__9494__i < G__9494__a.length) {G__9494__a[G__9494__i] = arguments[G__9494__i + 3]; ++G__9494__i;}
  args = new cljs.core.IndexedSeq(G__9494__a,0);
} 
return G__9493__delegate.call(this,x,y,z,args);};
G__9493.cljs$lang$maxFixedArity = 3;
G__9493.cljs$lang$applyTo = (function (arglist__9495){
var x = cljs.core.first(arglist__9495);
arglist__9495 = cljs.core.next(arglist__9495);
var y = cljs.core.first(arglist__9495);
arglist__9495 = cljs.core.next(arglist__9495);
var z = cljs.core.first(arglist__9495);
var args = cljs.core.rest(arglist__9495);
return G__9493__delegate(x,y,z,args);
});
G__9493.cljs$core$IFn$_invoke$arity$variadic = G__9493__delegate;
return G__9493;
})()
;
G__9492 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__9492__0.call(this);
case 1:
return G__9492__1.call(this,x);
case 2:
return G__9492__2.call(this,x,y);
case 3:
return G__9492__3.call(this,x,y,z);
default:
var G__9496 = null;
if (arguments.length > 3) {
var G__9497__i = 0, G__9497__a = new Array(arguments.length -  3);
while (G__9497__i < G__9497__a.length) {G__9497__a[G__9497__i] = arguments[G__9497__i + 3]; ++G__9497__i;}
G__9496 = new cljs.core.IndexedSeq(G__9497__a,0);
}
return G__9492__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9496);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9492.cljs$lang$maxFixedArity = 3;
G__9492.cljs$lang$applyTo = G__9492__4.cljs$lang$applyTo;
G__9492.cljs$core$IFn$_invoke$arity$0 = G__9492__0;
G__9492.cljs$core$IFn$_invoke$arity$1 = G__9492__1;
G__9492.cljs$core$IFn$_invoke$arity$2 = G__9492__2;
G__9492.cljs$core$IFn$_invoke$arity$3 = G__9492__3;
G__9492.cljs$core$IFn$_invoke$arity$variadic = G__9492__4.cljs$core$IFn$_invoke$arity$variadic;
return G__9492;
})()
});
var partial__5 = (function() { 
var G__9498__delegate = function (f,arg1,arg2,arg3,more){
return (function() { 
var G__9499__delegate = function (args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,arg1,arg2,arg3,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more,args));
};
var G__9499 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__9500__i = 0, G__9500__a = new Array(arguments.length -  0);
while (G__9500__i < G__9500__a.length) {G__9500__a[G__9500__i] = arguments[G__9500__i + 0]; ++G__9500__i;}
  args = new cljs.core.IndexedSeq(G__9500__a,0);
} 
return G__9499__delegate.call(this,args);};
G__9499.cljs$lang$maxFixedArity = 0;
G__9499.cljs$lang$applyTo = (function (arglist__9501){
var args = cljs.core.seq(arglist__9501);
return G__9499__delegate(args);
});
G__9499.cljs$core$IFn$_invoke$arity$variadic = G__9499__delegate;
return G__9499;
})()
;
};
var G__9498 = function (f,arg1,arg2,arg3,var_args){
var more = null;
if (arguments.length > 4) {
var G__9502__i = 0, G__9502__a = new Array(arguments.length -  4);
while (G__9502__i < G__9502__a.length) {G__9502__a[G__9502__i] = arguments[G__9502__i + 4]; ++G__9502__i;}
  more = new cljs.core.IndexedSeq(G__9502__a,0);
} 
return G__9498__delegate.call(this,f,arg1,arg2,arg3,more);};
G__9498.cljs$lang$maxFixedArity = 4;
G__9498.cljs$lang$applyTo = (function (arglist__9503){
var f = cljs.core.first(arglist__9503);
arglist__9503 = cljs.core.next(arglist__9503);
var arg1 = cljs.core.first(arglist__9503);
arglist__9503 = cljs.core.next(arglist__9503);
var arg2 = cljs.core.first(arglist__9503);
arglist__9503 = cljs.core.next(arglist__9503);
var arg3 = cljs.core.first(arglist__9503);
var more = cljs.core.rest(arglist__9503);
return G__9498__delegate(f,arg1,arg2,arg3,more);
});
G__9498.cljs$core$IFn$_invoke$arity$variadic = G__9498__delegate;
return G__9498;
})()
;
partial = function(f,arg1,arg2,arg3,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return partial__1.call(this,f);
case 2:
return partial__2.call(this,f,arg1);
case 3:
return partial__3.call(this,f,arg1,arg2);
case 4:
return partial__4.call(this,f,arg1,arg2,arg3);
default:
var G__9504 = null;
if (arguments.length > 4) {
var G__9505__i = 0, G__9505__a = new Array(arguments.length -  4);
while (G__9505__i < G__9505__a.length) {G__9505__a[G__9505__i] = arguments[G__9505__i + 4]; ++G__9505__i;}
G__9504 = new cljs.core.IndexedSeq(G__9505__a,0);
}
return partial__5.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3, G__9504);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partial.cljs$lang$maxFixedArity = 4;
partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
return partial;
})()
;
/**
* Takes a function f, and returns a function that calls f, replacing
* a nil first argument to f with the supplied value x. Higher arity
* versions can replace arguments in the second and third
* positions (y, z). Note that the function f can take any number of
* arguments, not just the one(s) being nil-patched.
*/
cljs.core.fnil = (function() {
var fnil = null;
var fnil__2 = (function (f,x){
return (function() {
var G__9538 = null;
var G__9538__1 = (function (a){
var G__9522 = (((a == null))?x:a);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9522) : f.call(null,G__9522));
});
var G__9538__2 = (function (a,b){
var G__9523 = (((a == null))?x:a);
var G__9524 = b;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9523,G__9524) : f.call(null,G__9523,G__9524));
});
var G__9538__3 = (function (a,b,c){
var G__9525 = (((a == null))?x:a);
var G__9526 = b;
var G__9527 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9525,G__9526,G__9527) : f.call(null,G__9525,G__9526,G__9527));
});
var G__9538__4 = (function() { 
var G__9539__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),b,c,ds);
};
var G__9539 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__9540__i = 0, G__9540__a = new Array(arguments.length -  3);
while (G__9540__i < G__9540__a.length) {G__9540__a[G__9540__i] = arguments[G__9540__i + 3]; ++G__9540__i;}
  ds = new cljs.core.IndexedSeq(G__9540__a,0);
} 
return G__9539__delegate.call(this,a,b,c,ds);};
G__9539.cljs$lang$maxFixedArity = 3;
G__9539.cljs$lang$applyTo = (function (arglist__9541){
var a = cljs.core.first(arglist__9541);
arglist__9541 = cljs.core.next(arglist__9541);
var b = cljs.core.first(arglist__9541);
arglist__9541 = cljs.core.next(arglist__9541);
var c = cljs.core.first(arglist__9541);
var ds = cljs.core.rest(arglist__9541);
return G__9539__delegate(a,b,c,ds);
});
G__9539.cljs$core$IFn$_invoke$arity$variadic = G__9539__delegate;
return G__9539;
})()
;
G__9538 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 1:
return G__9538__1.call(this,a);
case 2:
return G__9538__2.call(this,a,b);
case 3:
return G__9538__3.call(this,a,b,c);
default:
var G__9542 = null;
if (arguments.length > 3) {
var G__9543__i = 0, G__9543__a = new Array(arguments.length -  3);
while (G__9543__i < G__9543__a.length) {G__9543__a[G__9543__i] = arguments[G__9543__i + 3]; ++G__9543__i;}
G__9542 = new cljs.core.IndexedSeq(G__9543__a,0);
}
return G__9538__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__9542);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9538.cljs$lang$maxFixedArity = 3;
G__9538.cljs$lang$applyTo = G__9538__4.cljs$lang$applyTo;
G__9538.cljs$core$IFn$_invoke$arity$1 = G__9538__1;
G__9538.cljs$core$IFn$_invoke$arity$2 = G__9538__2;
G__9538.cljs$core$IFn$_invoke$arity$3 = G__9538__3;
G__9538.cljs$core$IFn$_invoke$arity$variadic = G__9538__4.cljs$core$IFn$_invoke$arity$variadic;
return G__9538;
})()
});
var fnil__3 = (function (f,x,y){
return (function() {
var G__9544 = null;
var G__9544__2 = (function (a,b){
var G__9528 = (((a == null))?x:a);
var G__9529 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9528,G__9529) : f.call(null,G__9528,G__9529));
});
var G__9544__3 = (function (a,b,c){
var G__9530 = (((a == null))?x:a);
var G__9531 = (((b == null))?y:b);
var G__9532 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9530,G__9531,G__9532) : f.call(null,G__9530,G__9531,G__9532));
});
var G__9544__4 = (function() { 
var G__9545__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),c,ds);
};
var G__9545 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__9546__i = 0, G__9546__a = new Array(arguments.length -  3);
while (G__9546__i < G__9546__a.length) {G__9546__a[G__9546__i] = arguments[G__9546__i + 3]; ++G__9546__i;}
  ds = new cljs.core.IndexedSeq(G__9546__a,0);
} 
return G__9545__delegate.call(this,a,b,c,ds);};
G__9545.cljs$lang$maxFixedArity = 3;
G__9545.cljs$lang$applyTo = (function (arglist__9547){
var a = cljs.core.first(arglist__9547);
arglist__9547 = cljs.core.next(arglist__9547);
var b = cljs.core.first(arglist__9547);
arglist__9547 = cljs.core.next(arglist__9547);
var c = cljs.core.first(arglist__9547);
var ds = cljs.core.rest(arglist__9547);
return G__9545__delegate(a,b,c,ds);
});
G__9545.cljs$core$IFn$_invoke$arity$variadic = G__9545__delegate;
return G__9545;
})()
;
G__9544 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__9544__2.call(this,a,b);
case 3:
return G__9544__3.call(this,a,b,c);
default:
var G__9548 = null;
if (arguments.length > 3) {
var G__9549__i = 0, G__9549__a = new Array(arguments.length -  3);
while (G__9549__i < G__9549__a.length) {G__9549__a[G__9549__i] = arguments[G__9549__i + 3]; ++G__9549__i;}
G__9548 = new cljs.core.IndexedSeq(G__9549__a,0);
}
return G__9544__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__9548);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9544.cljs$lang$maxFixedArity = 3;
G__9544.cljs$lang$applyTo = G__9544__4.cljs$lang$applyTo;
G__9544.cljs$core$IFn$_invoke$arity$2 = G__9544__2;
G__9544.cljs$core$IFn$_invoke$arity$3 = G__9544__3;
G__9544.cljs$core$IFn$_invoke$arity$variadic = G__9544__4.cljs$core$IFn$_invoke$arity$variadic;
return G__9544;
})()
});
var fnil__4 = (function (f,x,y,z){
return (function() {
var G__9550 = null;
var G__9550__2 = (function (a,b){
var G__9533 = (((a == null))?x:a);
var G__9534 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9533,G__9534) : f.call(null,G__9533,G__9534));
});
var G__9550__3 = (function (a,b,c){
var G__9535 = (((a == null))?x:a);
var G__9536 = (((b == null))?y:b);
var G__9537 = (((c == null))?z:c);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9535,G__9536,G__9537) : f.call(null,G__9535,G__9536,G__9537));
});
var G__9550__4 = (function() { 
var G__9551__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),(((c == null))?z:c),ds);
};
var G__9551 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__9552__i = 0, G__9552__a = new Array(arguments.length -  3);
while (G__9552__i < G__9552__a.length) {G__9552__a[G__9552__i] = arguments[G__9552__i + 3]; ++G__9552__i;}
  ds = new cljs.core.IndexedSeq(G__9552__a,0);
} 
return G__9551__delegate.call(this,a,b,c,ds);};
G__9551.cljs$lang$maxFixedArity = 3;
G__9551.cljs$lang$applyTo = (function (arglist__9553){
var a = cljs.core.first(arglist__9553);
arglist__9553 = cljs.core.next(arglist__9553);
var b = cljs.core.first(arglist__9553);
arglist__9553 = cljs.core.next(arglist__9553);
var c = cljs.core.first(arglist__9553);
var ds = cljs.core.rest(arglist__9553);
return G__9551__delegate(a,b,c,ds);
});
G__9551.cljs$core$IFn$_invoke$arity$variadic = G__9551__delegate;
return G__9551;
})()
;
G__9550 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__9550__2.call(this,a,b);
case 3:
return G__9550__3.call(this,a,b,c);
default:
var G__9554 = null;
if (arguments.length > 3) {
var G__9555__i = 0, G__9555__a = new Array(arguments.length -  3);
while (G__9555__i < G__9555__a.length) {G__9555__a[G__9555__i] = arguments[G__9555__i + 3]; ++G__9555__i;}
G__9554 = new cljs.core.IndexedSeq(G__9555__a,0);
}
return G__9550__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__9554);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9550.cljs$lang$maxFixedArity = 3;
G__9550.cljs$lang$applyTo = G__9550__4.cljs$lang$applyTo;
G__9550.cljs$core$IFn$_invoke$arity$2 = G__9550__2;
G__9550.cljs$core$IFn$_invoke$arity$3 = G__9550__3;
G__9550.cljs$core$IFn$_invoke$arity$variadic = G__9550__4.cljs$core$IFn$_invoke$arity$variadic;
return G__9550;
})()
});
fnil = function(f,x,y,z){
switch(arguments.length){
case 2:
return fnil__2.call(this,f,x);
case 3:
return fnil__3.call(this,f,x,y);
case 4:
return fnil__4.call(this,f,x,y,z);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
return fnil;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to 0
* and the first item of coll, followed by applying f to 1 and the second
* item in coll, etc, until coll is exhausted. Thus function f should
* accept 2 arguments, index and item.
*/
cljs.core.map_indexed = (function() {
var map_indexed = null;
var map_indexed__1 = (function (f){
return (function (rf){
var i = (function (){var G__9586 = (-1);
return (cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(G__9586) : cljs.core.volatile_BANG_.call(null,G__9586));
})();
return ((function (i){
return (function() {
var G__9616 = null;
var G__9616__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__9616__1 = (function (result){
var G__9587 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9587) : rf.call(null,G__9587));
});
var G__9616__2 = (function (result,input){
var G__9588 = result;
var G__9589 = (function (){var G__9590 = cljs.core._vreset_BANG_(i,(cljs.core._deref(i) + (1)));
var G__9591 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9590,G__9591) : f.call(null,G__9590,G__9591));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9588,G__9589) : rf.call(null,G__9588,G__9589));
});
G__9616 = function(result,input){
switch(arguments.length){
case 0:
return G__9616__0.call(this);
case 1:
return G__9616__1.call(this,result);
case 2:
return G__9616__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9616.cljs$core$IFn$_invoke$arity$0 = G__9616__0;
G__9616.cljs$core$IFn$_invoke$arity$1 = G__9616__1;
G__9616.cljs$core$IFn$_invoke$arity$2 = G__9616__2;
return G__9616;
})()
;})(i))
});
});
var map_indexed__2 = (function (f,coll){
var mapi = (function mapi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__5607__auto___9617 = size;
var i_9618 = (0);
while(true){
if((i_9618 < n__5607__auto___9617)){
cljs.core.chunk_append(b,(function (){var G__9612 = (idx + i_9618);
var G__9613 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_9618);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9612,G__9613) : f.call(null,G__9612,G__9613));
})());

var G__9619 = (i_9618 + (1));
i_9618 = G__9619;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),mapi((idx + size),cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__9614 = idx;
var G__9615 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9614,G__9615) : f.call(null,G__9614,G__9615));
})(),mapi((idx + (1)),cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
return mapi((0),coll);
});
map_indexed = function(f,coll){
switch(arguments.length){
case 1:
return map_indexed__1.call(this,f);
case 2:
return map_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map_indexed.cljs$core$IFn$_invoke$arity$1 = map_indexed__1;
map_indexed.cljs$core$IFn$_invoke$arity$2 = map_indexed__2;
return map_indexed;
})()
;
/**
* Returns a lazy sequence of the non-nil results of (f item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a transducer when no collection is provided.
*/
cljs.core.keep = (function() {
var keep = null;
var keep__1 = (function (f){
return (function (rf){
return (function() {
var G__9638 = null;
var G__9638__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__9638__1 = (function (result){
var G__9632 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9632) : rf.call(null,G__9632));
});
var G__9638__2 = (function (result,input){
var v = (function (){var G__9633 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9633) : f.call(null,G__9633));
})();
if((v == null)){
return result;
} else {
var G__9634 = result;
var G__9635 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9634,G__9635) : rf.call(null,G__9634,G__9635));
}
});
G__9638 = function(result,input){
switch(arguments.length){
case 0:
return G__9638__0.call(this);
case 1:
return G__9638__1.call(this,result);
case 2:
return G__9638__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9638.cljs$core$IFn$_invoke$arity$0 = G__9638__0;
G__9638.cljs$core$IFn$_invoke$arity$1 = G__9638__1;
G__9638.cljs$core$IFn$_invoke$arity$2 = G__9638__2;
return G__9638;
})()
});
});
var keep__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__5607__auto___9639 = size;
var i_9640 = (0);
while(true){
if((i_9640 < n__5607__auto___9639)){
var x_9641 = (function (){var G__9636 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_9640);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9636) : f.call(null,G__9636));
})();
if((x_9641 == null)){
} else {
cljs.core.chunk_append(b,x_9641);
}

var G__9642 = (i_9640 + (1));
i_9640 = G__9642;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__9637 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9637) : f.call(null,G__9637));
})();
if((x == null)){
return keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s));
} else {
return cljs.core.cons(x,keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
keep = function(f,coll){
switch(arguments.length){
case 1:
return keep__1.call(this,f);
case 2:
return keep__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
return keep;
})()
;

/**
* @constructor
*/
cljs.core.Atom = (function (state,meta,validator,watches){
this.state = state;
this.meta = meta;
this.validator = validator;
this.watches = watches;
this.cljs$lang$protocol_mask$partition0$ = 6455296;
this.cljs$lang$protocol_mask$partition1$ = 16386;
})
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__9643 = this$__$1;
return goog.getUid(G__9643);
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,oldval,newval){
var self__ = this;
var this$__$1 = this;
var seq__9644 = cljs.core.seq(self__.watches);
var chunk__9645 = null;
var count__9646 = (0);
var i__9647 = (0);
while(true){
if((i__9647 < count__9646)){
var vec__9648 = chunk__9645.cljs$core$IIndexed$_nth$arity$2(null,i__9647);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9648,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9648,(1),null);
var G__9649_9658 = key;
var G__9650_9659 = this$__$1;
var G__9651_9660 = oldval;
var G__9652_9661 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__9649_9658,G__9650_9659,G__9651_9660,G__9652_9661) : f.call(null,G__9649_9658,G__9650_9659,G__9651_9660,G__9652_9661));

var G__9662 = seq__9644;
var G__9663 = chunk__9645;
var G__9664 = count__9646;
var G__9665 = (i__9647 + (1));
seq__9644 = G__9662;
chunk__9645 = G__9663;
count__9646 = G__9664;
i__9647 = G__9665;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__9644);
if(temp__4126__auto__){
var seq__9644__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__9644__$1)){
var c__5507__auto__ = cljs.core.chunk_first(seq__9644__$1);
var G__9666 = cljs.core.chunk_rest(seq__9644__$1);
var G__9667 = c__5507__auto__;
var G__9668 = cljs.core.count(c__5507__auto__);
var G__9669 = (0);
seq__9644 = G__9666;
chunk__9645 = G__9667;
count__9646 = G__9668;
i__9647 = G__9669;
continue;
} else {
var vec__9653 = cljs.core.first(seq__9644__$1);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9653,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9653,(1),null);
var G__9654_9670 = key;
var G__9655_9671 = this$__$1;
var G__9656_9672 = oldval;
var G__9657_9673 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__9654_9670,G__9655_9671,G__9656_9672,G__9657_9673) : f.call(null,G__9654_9670,G__9655_9671,G__9656_9672,G__9657_9673));

var G__9674 = cljs.core.next(seq__9644__$1);
var G__9675 = null;
var G__9676 = (0);
var G__9677 = (0);
seq__9644 = G__9674;
chunk__9645 = G__9675;
count__9646 = G__9676;
i__9647 = G__9677;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){
var self__ = this;
var this$__$1 = this;
this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches,key,f);

return this$__$1;
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){
var self__ = this;
var this$__$1 = this;
return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches,key);
});

cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return (o__$1 === other);
});

cljs.core.Atom.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Atom.cljs$lang$type = true;

cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";

cljs.core.Atom.cljs$lang$ctorPrWriter = (function (this__5307__auto__,writer__5308__auto__,opt__5309__auto__){
return cljs.core._write(writer__5308__auto__,"cljs.core/Atom");
});

cljs.core.__GT_Atom = (function __GT_Atom(state,meta,validator,watches){
return (new cljs.core.Atom(state,meta,validator,watches));
});

/**
* Creates and returns an Atom with an initial value of x and zero or
* more options (in any order):
* 
* :meta metadata-map
* 
* :validator validate-fn
* 
* If metadata-map is supplied, it will be come the metadata on the
* atom. validate-fn must be nil or a side-effect-free fn of one
* argument, which will be passed the intended new state on any state
* change. If the new state is unacceptable, the validate-fn should
* return false or throw an Error.  If either of these error conditions
* occur, then the value of the atom will not change.
* @param {...*} var_args
*/
cljs.core.atom = (function() {
var atom = null;
var atom__1 = (function (x){
return (new cljs.core.Atom(x,null,null,null));
});
var atom__2 = (function() { 
var G__9681__delegate = function (x,p__9678){
var map__9680 = p__9678;
var map__9680__$1 = ((cljs.core.seq_QMARK_(map__9680))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__9680):map__9680);
var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__9680__$1,new cljs.core.Keyword(null,"validator","validator",-1966190681));
var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__9680__$1,new cljs.core.Keyword(null,"meta","meta",1499536964));
return (new cljs.core.Atom(x,meta,validator,null));
};
var G__9681 = function (x,var_args){
var p__9678 = null;
if (arguments.length > 1) {
var G__9682__i = 0, G__9682__a = new Array(arguments.length -  1);
while (G__9682__i < G__9682__a.length) {G__9682__a[G__9682__i] = arguments[G__9682__i + 1]; ++G__9682__i;}
  p__9678 = new cljs.core.IndexedSeq(G__9682__a,0);
} 
return G__9681__delegate.call(this,x,p__9678);};
G__9681.cljs$lang$maxFixedArity = 1;
G__9681.cljs$lang$applyTo = (function (arglist__9683){
var x = cljs.core.first(arglist__9683);
var p__9678 = cljs.core.rest(arglist__9683);
return G__9681__delegate(x,p__9678);
});
G__9681.cljs$core$IFn$_invoke$arity$variadic = G__9681__delegate;
return G__9681;
})()
;
atom = function(x,var_args){
var p__9678 = var_args;
switch(arguments.length){
case 1:
return atom__1.call(this,x);
default:
var G__9684 = null;
if (arguments.length > 1) {
var G__9685__i = 0, G__9685__a = new Array(arguments.length -  1);
while (G__9685__i < G__9685__a.length) {G__9685__a[G__9685__i] = arguments[G__9685__i + 1]; ++G__9685__i;}
G__9684 = new cljs.core.IndexedSeq(G__9685__a,0);
}
return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__9684);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
atom.cljs$lang$maxFixedArity = 1;
atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
return atom;
})()
;
/**
* Sets the value of atom to newval without regard for the
* current value. Returns newval.
*/
cljs.core.reset_BANG_ = (function reset_BANG_(a,new_value){
if((a instanceof cljs.core.Atom)){
var validate = a.validator;
if((validate == null)){
} else {
if(cljs.core.truth_((function (){var G__9688 = new_value;
return (validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__9688) : validate.call(null,G__9688));
})())){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str("Validator rejected reference state"),cljs.core.str("\n"),cljs.core.str((function (){var G__9689 = cljs.core.list(new cljs.core.Symbol(null,"validate","validate",1439230700,null),new cljs.core.Symbol(null,"new-value","new-value",-1567397401,null));
return (cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__9689) : cljs.core.pr_str.call(null,G__9689));
})())].join('')));
}
}

var old_value = a.state;
a.state = new_value;

if((a.watches == null)){
} else {
cljs.core._notify_watches(a,old_value,new_value);
}

return new_value;
} else {
return cljs.core._reset_BANG_(a,new_value);
}
});
/**
* Atomically swaps the value of atom to be:
* (apply f current-value-of-atom args). Note that f may be called
* multiple times, and thus should be free of side effects.  Returns
* the value that was swapped in.
* @param {...*} var_args
*/
cljs.core.swap_BANG_ = (function() {
var swap_BANG_ = null;
var swap_BANG___2 = (function (a,f){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__9696 = a.state;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9696) : f.call(null,G__9696));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a,f);
}
});
var swap_BANG___3 = (function (a,f,x){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__9697 = a.state;
var G__9698 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9697,G__9698) : f.call(null,G__9697,G__9698));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a,f,x);
}
});
var swap_BANG___4 = (function (a,f,x,y){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__9699 = a.state;
var G__9700 = x;
var G__9701 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9699,G__9700,G__9701) : f.call(null,G__9699,G__9700,G__9701));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a,f,x,y);
}
});
var swap_BANG___5 = (function() { 
var G__9702__delegate = function (a,f,x,y,more){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a.state,x,y,more));
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a,f,x,y,more);
}
};
var G__9702 = function (a,f,x,y,var_args){
var more = null;
if (arguments.length > 4) {
var G__9703__i = 0, G__9703__a = new Array(arguments.length -  4);
while (G__9703__i < G__9703__a.length) {G__9703__a[G__9703__i] = arguments[G__9703__i + 4]; ++G__9703__i;}
  more = new cljs.core.IndexedSeq(G__9703__a,0);
} 
return G__9702__delegate.call(this,a,f,x,y,more);};
G__9702.cljs$lang$maxFixedArity = 4;
G__9702.cljs$lang$applyTo = (function (arglist__9704){
var a = cljs.core.first(arglist__9704);
arglist__9704 = cljs.core.next(arglist__9704);
var f = cljs.core.first(arglist__9704);
arglist__9704 = cljs.core.next(arglist__9704);
var x = cljs.core.first(arglist__9704);
arglist__9704 = cljs.core.next(arglist__9704);
var y = cljs.core.first(arglist__9704);
var more = cljs.core.rest(arglist__9704);
return G__9702__delegate(a,f,x,y,more);
});
G__9702.cljs$core$IFn$_invoke$arity$variadic = G__9702__delegate;
return G__9702;
})()
;
swap_BANG_ = function(a,f,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return swap_BANG___2.call(this,a,f);
case 3:
return swap_BANG___3.call(this,a,f,x);
case 4:
return swap_BANG___4.call(this,a,f,x,y);
default:
var G__9705 = null;
if (arguments.length > 4) {
var G__9706__i = 0, G__9706__a = new Array(arguments.length -  4);
while (G__9706__i < G__9706__a.length) {G__9706__a[G__9706__i] = arguments[G__9706__i + 4]; ++G__9706__i;}
G__9705 = new cljs.core.IndexedSeq(G__9706__a,0);
}
return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a,f,x,y, G__9705);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
swap_BANG_.cljs$lang$maxFixedArity = 4;
swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
return swap_BANG_;
})()
;
/**
* Atomically sets the value of atom to newval if and only if the
* current value of the atom is equal to oldval. Returns true if
* set happened, else false.
*/
cljs.core.compare_and_set_BANG_ = (function compare_and_set_BANG_(a,oldval,newval){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null),oldval)){
cljs.core.reset_BANG_(a,newval);

return true;
} else {
return false;
}
});
/**
* Sets the validator-fn for an atom. validator-fn must be nil or a
* side-effect-free fn of one argument, which will be passed the intended
* new state on any state change. If the new state is unacceptable, the
* validator-fn should return false or throw an Error. If the current state
* is not acceptable to the new validator, an Error will be thrown and the
* validator will not be changed.
*/
cljs.core.set_validator_BANG_ = (function set_validator_BANG_(iref,val){
return iref.validator = val;
});
/**
* Gets the validator-fn for a var/ref/agent/atom.
*/
cljs.core.get_validator = (function get_validator(iref){
return iref.validator;
});

/**
* @constructor
*/
cljs.core.Volatile = (function (state){
this.state = state;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;

cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = (function (_,new_state){
var self__ = this;
var ___$1 = this;
return self__.state = new_state;
});

cljs.core.Volatile.cljs$lang$type = true;

cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";

cljs.core.Volatile.cljs$lang$ctorPrWriter = (function (this__5307__auto__,writer__5308__auto__,opt__5309__auto__){
return cljs.core._write(writer__5308__auto__,"cljs.core/Volatile");
});

cljs.core.__GT_Volatile = (function __GT_Volatile(state){
return (new cljs.core.Volatile(state));
});

/**
* Creates and returns a Volatile with an initial value of val.
*/
cljs.core.volatile_BANG_ = (function volatile_BANG_(val){
return (new cljs.core.Volatile(val));
});
/**
* Returns true if x is a volatile.
*/
cljs.core.volatile_QMARK_ = (function volatile_QMARK_(x){
return (x instanceof cljs.core.Volatile);
});
/**
* Sets the value of volatile to newval without regard for the
* current value. Returns newval.
*/
cljs.core.vreset_BANG_ = (function vreset_BANG_(vol,newval){
return cljs.core._vreset_BANG_(vol,newval);
});
/**
* Returns a lazy sequence of the non-nil results of (f index item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a stateful transducer when no collection is
* provided.
*/
cljs.core.keep_indexed = (function() {
var keep_indexed = null;
var keep_indexed__1 = (function (f){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__9773 = null;
var G__9773__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__9773__1 = (function (result){
var G__9740 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9740) : rf.call(null,G__9740));
});
var G__9773__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
var v = (function (){var G__9741 = i;
var G__9742 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9741,G__9742) : f.call(null,G__9741,G__9742));
})();
if((v == null)){
return result;
} else {
var G__9743 = result;
var G__9744 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9743,G__9744) : rf.call(null,G__9743,G__9744));
}
});
G__9773 = function(result,input){
switch(arguments.length){
case 0:
return G__9773__0.call(this);
case 1:
return G__9773__1.call(this,result);
case 2:
return G__9773__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9773.cljs$core$IFn$_invoke$arity$0 = G__9773__0;
G__9773.cljs$core$IFn$_invoke$arity$1 = G__9773__1;
G__9773.cljs$core$IFn$_invoke$arity$2 = G__9773__2;
return G__9773;
})()
;})(ia))
});
});
var keep_indexed__2 = (function (f,coll){
var keepi = (function keepi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__5607__auto___9774 = size;
var i_9775 = (0);
while(true){
if((i_9775 < n__5607__auto___9774)){
var x_9776 = (function (){var G__9769 = (idx + i_9775);
var G__9770 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_9775);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9769,G__9770) : f.call(null,G__9769,G__9770));
})();
if((x_9776 == null)){
} else {
cljs.core.chunk_append(b,x_9776);
}

var G__9777 = (i_9775 + (1));
i_9775 = G__9777;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keepi((idx + size),cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__9771 = idx;
var G__9772 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9771,G__9772) : f.call(null,G__9771,G__9772));
})();
if((x == null)){
return keepi((idx + (1)),cljs.core.rest(s));
} else {
return cljs.core.cons(x,keepi((idx + (1)),cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
return keepi((0),coll);
});
keep_indexed = function(f,coll){
switch(arguments.length){
case 1:
return keep_indexed__1.call(this,f);
case 2:
return keep_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
return keep_indexed;
})()
;
/**
* Takes a set of predicates and returns a function f that returns true if all of its
* composing predicates return a logical true value against all of its arguments, else it returns
* false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical false result against the original predicates.
* @param {...*} var_args
*/
cljs.core.every_pred = (function() {
var every_pred = null;
var every_pred__1 = (function (p){
return (function() {
var ep1 = null;
var ep1__0 = (function (){
return true;
});
var ep1__1 = (function (x){
return cljs.core.boolean$((function (){var G__9991 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__9991) : p.call(null,G__9991));
})());
});
var ep1__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__4708__auto__ = (function (){var G__9993 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__9993) : p.call(null,G__9993));
})();
if(cljs.core.truth_(and__4708__auto__)){
var G__9994 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__9994) : p.call(null,G__9994));
} else {
return and__4708__auto__;
}
})());
});
var ep1__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__4708__auto__ = (function (){var G__9996 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__9996) : p.call(null,G__9996));
})();
if(cljs.core.truth_(and__4708__auto__)){
var and__4708__auto____$1 = (function (){var G__9998 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__9998) : p.call(null,G__9998));
})();
if(cljs.core.truth_(and__4708__auto____$1)){
var G__9999 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__9999) : p.call(null,G__9999));
} else {
return and__4708__auto____$1;
}
} else {
return and__4708__auto__;
}
})());
});
var ep1__4 = (function() { 
var G__10168__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep1.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(p,args)));
};
var G__10168 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__10169__i = 0, G__10169__a = new Array(arguments.length -  3);
while (G__10169__i < G__10169__a.length) {G__10169__a[G__10169__i] = arguments[G__10169__i + 3]; ++G__10169__i;}
  args = new cljs.core.IndexedSeq(G__10169__a,0);
} 
return G__10168__delegate.call(this,x,y,z,args);};
G__10168.cljs$lang$maxFixedArity = 3;
G__10168.cljs$lang$applyTo = (function (arglist__10170){
var x = cljs.core.first(arglist__10170);
arglist__10170 = cljs.core.next(arglist__10170);
var y = cljs.core.first(arglist__10170);
arglist__10170 = cljs.core.next(arglist__10170);
var z = cljs.core.first(arglist__10170);
var args = cljs.core.rest(arglist__10170);
return G__10168__delegate(x,y,z,args);
});
G__10168.cljs$core$IFn$_invoke$arity$variadic = G__10168__delegate;
return G__10168;
})()
;
ep1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep1__0.call(this);
case 1:
return ep1__1.call(this,x);
case 2:
return ep1__2.call(this,x,y);
case 3:
return ep1__3.call(this,x,y,z);
default:
var G__10171 = null;
if (arguments.length > 3) {
var G__10172__i = 0, G__10172__a = new Array(arguments.length -  3);
while (G__10172__i < G__10172__a.length) {G__10172__a[G__10172__i] = arguments[G__10172__i + 3]; ++G__10172__i;}
G__10171 = new cljs.core.IndexedSeq(G__10172__a,0);
}
return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__10171);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep1.cljs$lang$maxFixedArity = 3;
ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
return ep1;
})()
});
var every_pred__2 = (function (p1,p2){
return (function() {
var ep2 = null;
var ep2__0 = (function (){
return true;
});
var ep2__1 = (function (x){
return cljs.core.boolean$((function (){var and__4708__auto__ = (function (){var G__10031 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10031) : p1.call(null,G__10031));
})();
if(cljs.core.truth_(and__4708__auto__)){
var G__10032 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10032) : p2.call(null,G__10032));
} else {
return and__4708__auto__;
}
})());
});
var ep2__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__4708__auto__ = (function (){var G__10034 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10034) : p1.call(null,G__10034));
})();
if(cljs.core.truth_(and__4708__auto__)){
var and__4708__auto____$1 = (function (){var G__10036 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10036) : p1.call(null,G__10036));
})();
if(cljs.core.truth_(and__4708__auto____$1)){
var and__4708__auto____$2 = (function (){var G__10038 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10038) : p2.call(null,G__10038));
})();
if(cljs.core.truth_(and__4708__auto____$2)){
var G__10039 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10039) : p2.call(null,G__10039));
} else {
return and__4708__auto____$2;
}
} else {
return and__4708__auto____$1;
}
} else {
return and__4708__auto__;
}
})());
});
var ep2__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__4708__auto__ = (function (){var G__10041 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10041) : p1.call(null,G__10041));
})();
if(cljs.core.truth_(and__4708__auto__)){
var and__4708__auto____$1 = (function (){var G__10043 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10043) : p1.call(null,G__10043));
})();
if(cljs.core.truth_(and__4708__auto____$1)){
var and__4708__auto____$2 = (function (){var G__10045 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10045) : p1.call(null,G__10045));
})();
if(cljs.core.truth_(and__4708__auto____$2)){
var and__4708__auto____$3 = (function (){var G__10047 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10047) : p2.call(null,G__10047));
})();
if(cljs.core.truth_(and__4708__auto____$3)){
var and__4708__auto____$4 = (function (){var G__10049 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10049) : p2.call(null,G__10049));
})();
if(cljs.core.truth_(and__4708__auto____$4)){
var G__10050 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10050) : p2.call(null,G__10050));
} else {
return and__4708__auto____$4;
}
} else {
return and__4708__auto____$3;
}
} else {
return and__4708__auto____$2;
}
} else {
return and__4708__auto____$1;
}
} else {
return and__4708__auto__;
}
})());
});
var ep2__4 = (function() { 
var G__10173__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep2.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__9778_SHARP_){
var and__4708__auto__ = (function (){var G__10055 = p1__9778_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10055) : p1.call(null,G__10055));
})();
if(cljs.core.truth_(and__4708__auto__)){
var G__10056 = p1__9778_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10056) : p2.call(null,G__10056));
} else {
return and__4708__auto__;
}
}),args)));
};
var G__10173 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__10174__i = 0, G__10174__a = new Array(arguments.length -  3);
while (G__10174__i < G__10174__a.length) {G__10174__a[G__10174__i] = arguments[G__10174__i + 3]; ++G__10174__i;}
  args = new cljs.core.IndexedSeq(G__10174__a,0);
} 
return G__10173__delegate.call(this,x,y,z,args);};
G__10173.cljs$lang$maxFixedArity = 3;
G__10173.cljs$lang$applyTo = (function (arglist__10175){
var x = cljs.core.first(arglist__10175);
arglist__10175 = cljs.core.next(arglist__10175);
var y = cljs.core.first(arglist__10175);
arglist__10175 = cljs.core.next(arglist__10175);
var z = cljs.core.first(arglist__10175);
var args = cljs.core.rest(arglist__10175);
return G__10173__delegate(x,y,z,args);
});
G__10173.cljs$core$IFn$_invoke$arity$variadic = G__10173__delegate;
return G__10173;
})()
;
ep2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep2__0.call(this);
case 1:
return ep2__1.call(this,x);
case 2:
return ep2__2.call(this,x,y);
case 3:
return ep2__3.call(this,x,y,z);
default:
var G__10176 = null;
if (arguments.length > 3) {
var G__10177__i = 0, G__10177__a = new Array(arguments.length -  3);
while (G__10177__i < G__10177__a.length) {G__10177__a[G__10177__i] = arguments[G__10177__i + 3]; ++G__10177__i;}
G__10176 = new cljs.core.IndexedSeq(G__10177__a,0);
}
return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__10176);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep2.cljs$lang$maxFixedArity = 3;
ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
return ep2;
})()
});
var every_pred__3 = (function (p1,p2,p3){
return (function() {
var ep3 = null;
var ep3__0 = (function (){
return true;
});
var ep3__1 = (function (x){
return cljs.core.boolean$((function (){var and__4708__auto__ = (function (){var G__10102 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10102) : p1.call(null,G__10102));
})();
if(cljs.core.truth_(and__4708__auto__)){
var and__4708__auto____$1 = (function (){var G__10104 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10104) : p2.call(null,G__10104));
})();
if(cljs.core.truth_(and__4708__auto____$1)){
var G__10105 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__10105) : p3.call(null,G__10105));
} else {
return and__4708__auto____$1;
}
} else {
return and__4708__auto__;
}
})());
});
var ep3__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__4708__auto__ = (function (){var G__10107 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10107) : p1.call(null,G__10107));
})();
if(cljs.core.truth_(and__4708__auto__)){
var and__4708__auto____$1 = (function (){var G__10109 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10109) : p2.call(null,G__10109));
})();
if(cljs.core.truth_(and__4708__auto____$1)){
var and__4708__auto____$2 = (function (){var G__10111 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__10111) : p3.call(null,G__10111));
})();
if(cljs.core.truth_(and__4708__auto____$2)){
var and__4708__auto____$3 = (function (){var G__10113 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10113) : p1.call(null,G__10113));
})();
if(cljs.core.truth_(and__4708__auto____$3)){
var and__4708__auto____$4 = (function (){var G__10115 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10115) : p2.call(null,G__10115));
})();
if(cljs.core.truth_(and__4708__auto____$4)){
var G__10116 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__10116) : p3.call(null,G__10116));
} else {
return and__4708__auto____$4;
}
} else {
return and__4708__auto____$3;
}
} else {
return and__4708__auto____$2;
}
} else {
return and__4708__auto____$1;
}
} else {
return and__4708__auto__;
}
})());
});
var ep3__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__4708__auto__ = (function (){var G__10118 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10118) : p1.call(null,G__10118));
})();
if(cljs.core.truth_(and__4708__auto__)){
var and__4708__auto____$1 = (function (){var G__10120 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10120) : p2.call(null,G__10120));
})();
if(cljs.core.truth_(and__4708__auto____$1)){
var and__4708__auto____$2 = (function (){var G__10122 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__10122) : p3.call(null,G__10122));
})();
if(cljs.core.truth_(and__4708__auto____$2)){
var and__4708__auto____$3 = (function (){var G__10124 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10124) : p1.call(null,G__10124));
})();
if(cljs.core.truth_(and__4708__auto____$3)){
var and__4708__auto____$4 = (function (){var G__10126 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10126) : p2.call(null,G__10126));
})();
if(cljs.core.truth_(and__4708__auto____$4)){
var and__4708__auto____$5 = (function (){var G__10128 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__10128) : p3.call(null,G__10128));
})();
if(cljs.core.truth_(and__4708__auto____$5)){
var and__4708__auto____$6 = (function (){var G__10130 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10130) : p1.call(null,G__10130));
})();
if(cljs.core.truth_(and__4708__auto____$6)){
var and__4708__auto____$7 = (function (){var G__10132 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10132) : p2.call(null,G__10132));
})();
if(cljs.core.truth_(and__4708__auto____$7)){
var G__10133 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__10133) : p3.call(null,G__10133));
} else {
return and__4708__auto____$7;
}
} else {
return and__4708__auto____$6;
}
} else {
return and__4708__auto____$5;
}
} else {
return and__4708__auto____$4;
}
} else {
return and__4708__auto____$3;
}
} else {
return and__4708__auto____$2;
}
} else {
return and__4708__auto____$1;
}
} else {
return and__4708__auto__;
}
})());
});
var ep3__4 = (function() { 
var G__10178__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep3.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__9779_SHARP_){
var and__4708__auto__ = (function (){var G__10140 = p1__9779_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10140) : p1.call(null,G__10140));
})();
if(cljs.core.truth_(and__4708__auto__)){
var and__4708__auto____$1 = (function (){var G__10142 = p1__9779_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10142) : p2.call(null,G__10142));
})();
if(cljs.core.truth_(and__4708__auto____$1)){
var G__10143 = p1__9779_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__10143) : p3.call(null,G__10143));
} else {
return and__4708__auto____$1;
}
} else {
return and__4708__auto__;
}
}),args)));
};
var G__10178 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__10179__i = 0, G__10179__a = new Array(arguments.length -  3);
while (G__10179__i < G__10179__a.length) {G__10179__a[G__10179__i] = arguments[G__10179__i + 3]; ++G__10179__i;}
  args = new cljs.core.IndexedSeq(G__10179__a,0);
} 
return G__10178__delegate.call(this,x,y,z,args);};
G__10178.cljs$lang$maxFixedArity = 3;
G__10178.cljs$lang$applyTo = (function (arglist__10180){
var x = cljs.core.first(arglist__10180);
arglist__10180 = cljs.core.next(arglist__10180);
var y = cljs.core.first(arglist__10180);
arglist__10180 = cljs.core.next(arglist__10180);
var z = cljs.core.first(arglist__10180);
var args = cljs.core.rest(arglist__10180);
return G__10178__delegate(x,y,z,args);
});
G__10178.cljs$core$IFn$_invoke$arity$variadic = G__10178__delegate;
return G__10178;
})()
;
ep3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep3__0.call(this);
case 1:
return ep3__1.call(this,x);
case 2:
return ep3__2.call(this,x,y);
case 3:
return ep3__3.call(this,x,y,z);
default:
var G__10181 = null;
if (arguments.length > 3) {
var G__10182__i = 0, G__10182__a = new Array(arguments.length -  3);
while (G__10182__i < G__10182__a.length) {G__10182__a[G__10182__i] = arguments[G__10182__i + 3]; ++G__10182__i;}
G__10181 = new cljs.core.IndexedSeq(G__10182__a,0);
}
return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__10181);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep3.cljs$lang$maxFixedArity = 3;
ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
return ep3;
})()
});
var every_pred__4 = (function() { 
var G__10183__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var epn = null;
var epn__0 = (function (){
return true;
});
var epn__1 = (function (x){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__9780_SHARP_){
var G__10159 = x;
return (p1__9780_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__9780_SHARP_.cljs$core$IFn$_invoke$arity$1(G__10159) : p1__9780_SHARP_.call(null,G__10159));
});})(ps__$1))
,ps__$1);
});
var epn__2 = (function (x,y){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__9781_SHARP_){
var and__4708__auto__ = (function (){var G__10161 = x;
return (p1__9781_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__9781_SHARP_.cljs$core$IFn$_invoke$arity$1(G__10161) : p1__9781_SHARP_.call(null,G__10161));
})();
if(cljs.core.truth_(and__4708__auto__)){
var G__10162 = y;
return (p1__9781_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__9781_SHARP_.cljs$core$IFn$_invoke$arity$1(G__10162) : p1__9781_SHARP_.call(null,G__10162));
} else {
return and__4708__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__3 = (function (x,y,z){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__9782_SHARP_){
var and__4708__auto__ = (function (){var G__10164 = x;
return (p1__9782_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__9782_SHARP_.cljs$core$IFn$_invoke$arity$1(G__10164) : p1__9782_SHARP_.call(null,G__10164));
})();
if(cljs.core.truth_(and__4708__auto__)){
var and__4708__auto____$1 = (function (){var G__10166 = y;
return (p1__9782_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__9782_SHARP_.cljs$core$IFn$_invoke$arity$1(G__10166) : p1__9782_SHARP_.call(null,G__10166));
})();
if(cljs.core.truth_(and__4708__auto____$1)){
var G__10167 = z;
return (p1__9782_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__9782_SHARP_.cljs$core$IFn$_invoke$arity$1(G__10167) : p1__9782_SHARP_.call(null,G__10167));
} else {
return and__4708__auto____$1;
}
} else {
return and__4708__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__4 = (function() { 
var G__10184__delegate = function (x,y,z,args){
return cljs.core.boolean$((epn.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__9783_SHARP_){
return cljs.core.every_QMARK_(p1__9783_SHARP_,args);
});})(ps__$1))
,ps__$1)));
};
var G__10184 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__10185__i = 0, G__10185__a = new Array(arguments.length -  3);
while (G__10185__i < G__10185__a.length) {G__10185__a[G__10185__i] = arguments[G__10185__i + 3]; ++G__10185__i;}
  args = new cljs.core.IndexedSeq(G__10185__a,0);
} 
return G__10184__delegate.call(this,x,y,z,args);};
G__10184.cljs$lang$maxFixedArity = 3;
G__10184.cljs$lang$applyTo = (function (arglist__10186){
var x = cljs.core.first(arglist__10186);
arglist__10186 = cljs.core.next(arglist__10186);
var y = cljs.core.first(arglist__10186);
arglist__10186 = cljs.core.next(arglist__10186);
var z = cljs.core.first(arglist__10186);
var args = cljs.core.rest(arglist__10186);
return G__10184__delegate(x,y,z,args);
});
G__10184.cljs$core$IFn$_invoke$arity$variadic = G__10184__delegate;
return G__10184;
})()
;
epn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return epn__0.call(this);
case 1:
return epn__1.call(this,x);
case 2:
return epn__2.call(this,x,y);
case 3:
return epn__3.call(this,x,y,z);
default:
var G__10187 = null;
if (arguments.length > 3) {
var G__10188__i = 0, G__10188__a = new Array(arguments.length -  3);
while (G__10188__i < G__10188__a.length) {G__10188__a[G__10188__i] = arguments[G__10188__i + 3]; ++G__10188__i;}
G__10187 = new cljs.core.IndexedSeq(G__10188__a,0);
}
return epn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__10187);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
epn.cljs$lang$maxFixedArity = 3;
epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
return epn;
})()
;})(ps__$1))
};
var G__10183 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__10189__i = 0, G__10189__a = new Array(arguments.length -  3);
while (G__10189__i < G__10189__a.length) {G__10189__a[G__10189__i] = arguments[G__10189__i + 3]; ++G__10189__i;}
  ps = new cljs.core.IndexedSeq(G__10189__a,0);
} 
return G__10183__delegate.call(this,p1,p2,p3,ps);};
G__10183.cljs$lang$maxFixedArity = 3;
G__10183.cljs$lang$applyTo = (function (arglist__10190){
var p1 = cljs.core.first(arglist__10190);
arglist__10190 = cljs.core.next(arglist__10190);
var p2 = cljs.core.first(arglist__10190);
arglist__10190 = cljs.core.next(arglist__10190);
var p3 = cljs.core.first(arglist__10190);
var ps = cljs.core.rest(arglist__10190);
return G__10183__delegate(p1,p2,p3,ps);
});
G__10183.cljs$core$IFn$_invoke$arity$variadic = G__10183__delegate;
return G__10183;
})()
;
every_pred = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return every_pred__1.call(this,p1);
case 2:
return every_pred__2.call(this,p1,p2);
case 3:
return every_pred__3.call(this,p1,p2,p3);
default:
var G__10191 = null;
if (arguments.length > 3) {
var G__10192__i = 0, G__10192__a = new Array(arguments.length -  3);
while (G__10192__i < G__10192__a.length) {G__10192__a[G__10192__i] = arguments[G__10192__i + 3]; ++G__10192__i;}
G__10191 = new cljs.core.IndexedSeq(G__10192__a,0);
}
return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__10191);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
every_pred.cljs$lang$maxFixedArity = 3;
every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
return every_pred;
})()
;
/**
* Takes a set of predicates and returns a function f that returns the first logical true value
* returned by one of its composing predicates against any of its arguments, else it returns
* logical false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical true result against the original predicates.
* @param {...*} var_args
*/
cljs.core.some_fn = (function() {
var some_fn = null;
var some_fn__1 = (function (p){
return (function() {
var sp1 = null;
var sp1__0 = (function (){
return null;
});
var sp1__1 = (function (x){
var G__10398 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__10398) : p.call(null,G__10398));
});
var sp1__2 = (function (x,y){
var or__4720__auto__ = (function (){var G__10400 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__10400) : p.call(null,G__10400));
})();
if(cljs.core.truth_(or__4720__auto__)){
return or__4720__auto__;
} else {
var G__10401 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__10401) : p.call(null,G__10401));
}
});
var sp1__3 = (function (x,y,z){
var or__4720__auto__ = (function (){var G__10403 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__10403) : p.call(null,G__10403));
})();
if(cljs.core.truth_(or__4720__auto__)){
return or__4720__auto__;
} else {
var or__4720__auto____$1 = (function (){var G__10405 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__10405) : p.call(null,G__10405));
})();
if(cljs.core.truth_(or__4720__auto____$1)){
return or__4720__auto____$1;
} else {
var G__10406 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__10406) : p.call(null,G__10406));
}
}
});
var sp1__4 = (function() { 
var G__10567__delegate = function (x,y,z,args){
var or__4720__auto__ = sp1.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__4720__auto__)){
return or__4720__auto__;
} else {
return cljs.core.some(p,args);
}
};
var G__10567 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__10568__i = 0, G__10568__a = new Array(arguments.length -  3);
while (G__10568__i < G__10568__a.length) {G__10568__a[G__10568__i] = arguments[G__10568__i + 3]; ++G__10568__i;}
  args = new cljs.core.IndexedSeq(G__10568__a,0);
} 
return G__10567__delegate.call(this,x,y,z,args);};
G__10567.cljs$lang$maxFixedArity = 3;
G__10567.cljs$lang$applyTo = (function (arglist__10569){
var x = cljs.core.first(arglist__10569);
arglist__10569 = cljs.core.next(arglist__10569);
var y = cljs.core.first(arglist__10569);
arglist__10569 = cljs.core.next(arglist__10569);
var z = cljs.core.first(arglist__10569);
var args = cljs.core.rest(arglist__10569);
return G__10567__delegate(x,y,z,args);
});
G__10567.cljs$core$IFn$_invoke$arity$variadic = G__10567__delegate;
return G__10567;
})()
;
sp1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp1__0.call(this);
case 1:
return sp1__1.call(this,x);
case 2:
return sp1__2.call(this,x,y);
case 3:
return sp1__3.call(this,x,y,z);
default:
var G__10570 = null;
if (arguments.length > 3) {
var G__10571__i = 0, G__10571__a = new Array(arguments.length -  3);
while (G__10571__i < G__10571__a.length) {G__10571__a[G__10571__i] = arguments[G__10571__i + 3]; ++G__10571__i;}
G__10570 = new cljs.core.IndexedSeq(G__10571__a,0);
}
return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__10570);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp1.cljs$lang$maxFixedArity = 3;
sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
return sp1;
})()
});
var some_fn__2 = (function (p1,p2){
return (function() {
var sp2 = null;
var sp2__0 = (function (){
return null;
});
var sp2__1 = (function (x){
var or__4720__auto__ = (function (){var G__10438 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10438) : p1.call(null,G__10438));
})();
if(cljs.core.truth_(or__4720__auto__)){
return or__4720__auto__;
} else {
var G__10439 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10439) : p2.call(null,G__10439));
}
});
var sp2__2 = (function (x,y){
var or__4720__auto__ = (function (){var G__10441 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10441) : p1.call(null,G__10441));
})();
if(cljs.core.truth_(or__4720__auto__)){
return or__4720__auto__;
} else {
var or__4720__auto____$1 = (function (){var G__10443 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10443) : p1.call(null,G__10443));
})();
if(cljs.core.truth_(or__4720__auto____$1)){
return or__4720__auto____$1;
} else {
var or__4720__auto____$2 = (function (){var G__10445 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10445) : p2.call(null,G__10445));
})();
if(cljs.core.truth_(or__4720__auto____$2)){
return or__4720__auto____$2;
} else {
var G__10446 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10446) : p2.call(null,G__10446));
}
}
}
});
var sp2__3 = (function (x,y,z){
var or__4720__auto__ = (function (){var G__10448 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10448) : p1.call(null,G__10448));
})();
if(cljs.core.truth_(or__4720__auto__)){
return or__4720__auto__;
} else {
var or__4720__auto____$1 = (function (){var G__10450 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10450) : p1.call(null,G__10450));
})();
if(cljs.core.truth_(or__4720__auto____$1)){
return or__4720__auto____$1;
} else {
var or__4720__auto____$2 = (function (){var G__10452 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10452) : p1.call(null,G__10452));
})();
if(cljs.core.truth_(or__4720__auto____$2)){
return or__4720__auto____$2;
} else {
var or__4720__auto____$3 = (function (){var G__10454 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10454) : p2.call(null,G__10454));
})();
if(cljs.core.truth_(or__4720__auto____$3)){
return or__4720__auto____$3;
} else {
var or__4720__auto____$4 = (function (){var G__10456 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10456) : p2.call(null,G__10456));
})();
if(cljs.core.truth_(or__4720__auto____$4)){
return or__4720__auto____$4;
} else {
var G__10457 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10457) : p2.call(null,G__10457));
}
}
}
}
}
});
var sp2__4 = (function() { 
var G__10572__delegate = function (x,y,z,args){
var or__4720__auto__ = sp2.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__4720__auto__)){
return or__4720__auto__;
} else {
return cljs.core.some(((function (or__4720__auto__){
return (function (p1__10193_SHARP_){
var or__4720__auto____$1 = (function (){var G__10459 = p1__10193_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10459) : p1.call(null,G__10459));
})();
if(cljs.core.truth_(or__4720__auto____$1)){
return or__4720__auto____$1;
} else {
var G__10460 = p1__10193_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10460) : p2.call(null,G__10460));
}
});})(or__4720__auto__))
,args);
}
};
var G__10572 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__10573__i = 0, G__10573__a = new Array(arguments.length -  3);
while (G__10573__i < G__10573__a.length) {G__10573__a[G__10573__i] = arguments[G__10573__i + 3]; ++G__10573__i;}
  args = new cljs.core.IndexedSeq(G__10573__a,0);
} 
return G__10572__delegate.call(this,x,y,z,args);};
G__10572.cljs$lang$maxFixedArity = 3;
G__10572.cljs$lang$applyTo = (function (arglist__10574){
var x = cljs.core.first(arglist__10574);
arglist__10574 = cljs.core.next(arglist__10574);
var y = cljs.core.first(arglist__10574);
arglist__10574 = cljs.core.next(arglist__10574);
var z = cljs.core.first(arglist__10574);
var args = cljs.core.rest(arglist__10574);
return G__10572__delegate(x,y,z,args);
});
G__10572.cljs$core$IFn$_invoke$arity$variadic = G__10572__delegate;
return G__10572;
})()
;
sp2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp2__0.call(this);
case 1:
return sp2__1.call(this,x);
case 2:
return sp2__2.call(this,x,y);
case 3:
return sp2__3.call(this,x,y,z);
default:
var G__10575 = null;
if (arguments.length > 3) {
var G__10576__i = 0, G__10576__a = new Array(arguments.length -  3);
while (G__10576__i < G__10576__a.length) {G__10576__a[G__10576__i] = arguments[G__10576__i + 3]; ++G__10576__i;}
G__10575 = new cljs.core.IndexedSeq(G__10576__a,0);
}
return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__10575);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp2.cljs$lang$maxFixedArity = 3;
sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
return sp2;
})()
});
var some_fn__3 = (function (p1,p2,p3){
return (function() {
var sp3 = null;
var sp3__0 = (function (){
return null;
});
var sp3__1 = (function (x){
var or__4720__auto__ = (function (){var G__10506 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10506) : p1.call(null,G__10506));
})();
if(cljs.core.truth_(or__4720__auto__)){
return or__4720__auto__;
} else {
var or__4720__auto____$1 = (function (){var G__10508 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10508) : p2.call(null,G__10508));
})();
if(cljs.core.truth_(or__4720__auto____$1)){
return or__4720__auto____$1;
} else {
var G__10509 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__10509) : p3.call(null,G__10509));
}
}
});
var sp3__2 = (function (x,y){
var or__4720__auto__ = (function (){var G__10511 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10511) : p1.call(null,G__10511));
})();
if(cljs.core.truth_(or__4720__auto__)){
return or__4720__auto__;
} else {
var or__4720__auto____$1 = (function (){var G__10513 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10513) : p2.call(null,G__10513));
})();
if(cljs.core.truth_(or__4720__auto____$1)){
return or__4720__auto____$1;
} else {
var or__4720__auto____$2 = (function (){var G__10515 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__10515) : p3.call(null,G__10515));
})();
if(cljs.core.truth_(or__4720__auto____$2)){
return or__4720__auto____$2;
} else {
var or__4720__auto____$3 = (function (){var G__10517 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10517) : p1.call(null,G__10517));
})();
if(cljs.core.truth_(or__4720__auto____$3)){
return or__4720__auto____$3;
} else {
var or__4720__auto____$4 = (function (){var G__10519 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10519) : p2.call(null,G__10519));
})();
if(cljs.core.truth_(or__4720__auto____$4)){
return or__4720__auto____$4;
} else {
var G__10520 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__10520) : p3.call(null,G__10520));
}
}
}
}
}
});
var sp3__3 = (function (x,y,z){
var or__4720__auto__ = (function (){var G__10522 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10522) : p1.call(null,G__10522));
})();
if(cljs.core.truth_(or__4720__auto__)){
return or__4720__auto__;
} else {
var or__4720__auto____$1 = (function (){var G__10524 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10524) : p2.call(null,G__10524));
})();
if(cljs.core.truth_(or__4720__auto____$1)){
return or__4720__auto____$1;
} else {
var or__4720__auto____$2 = (function (){var G__10526 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__10526) : p3.call(null,G__10526));
})();
if(cljs.core.truth_(or__4720__auto____$2)){
return or__4720__auto____$2;
} else {
var or__4720__auto____$3 = (function (){var G__10528 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10528) : p1.call(null,G__10528));
})();
if(cljs.core.truth_(or__4720__auto____$3)){
return or__4720__auto____$3;
} else {
var or__4720__auto____$4 = (function (){var G__10530 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10530) : p2.call(null,G__10530));
})();
if(cljs.core.truth_(or__4720__auto____$4)){
return or__4720__auto____$4;
} else {
var or__4720__auto____$5 = (function (){var G__10532 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__10532) : p3.call(null,G__10532));
})();
if(cljs.core.truth_(or__4720__auto____$5)){
return or__4720__auto____$5;
} else {
var or__4720__auto____$6 = (function (){var G__10534 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10534) : p1.call(null,G__10534));
})();
if(cljs.core.truth_(or__4720__auto____$6)){
return or__4720__auto____$6;
} else {
var or__4720__auto____$7 = (function (){var G__10536 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10536) : p2.call(null,G__10536));
})();
if(cljs.core.truth_(or__4720__auto____$7)){
return or__4720__auto____$7;
} else {
var G__10537 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__10537) : p3.call(null,G__10537));
}
}
}
}
}
}
}
}
});
var sp3__4 = (function() { 
var G__10577__delegate = function (x,y,z,args){
var or__4720__auto__ = sp3.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__4720__auto__)){
return or__4720__auto__;
} else {
return cljs.core.some(((function (or__4720__auto__){
return (function (p1__10194_SHARP_){
var or__4720__auto____$1 = (function (){var G__10539 = p1__10194_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10539) : p1.call(null,G__10539));
})();
if(cljs.core.truth_(or__4720__auto____$1)){
return or__4720__auto____$1;
} else {
var or__4720__auto____$2 = (function (){var G__10541 = p1__10194_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10541) : p2.call(null,G__10541));
})();
if(cljs.core.truth_(or__4720__auto____$2)){
return or__4720__auto____$2;
} else {
var G__10542 = p1__10194_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__10542) : p3.call(null,G__10542));
}
}
});})(or__4720__auto__))
,args);
}
};
var G__10577 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__10578__i = 0, G__10578__a = new Array(arguments.length -  3);
while (G__10578__i < G__10578__a.length) {G__10578__a[G__10578__i] = arguments[G__10578__i + 3]; ++G__10578__i;}
  args = new cljs.core.IndexedSeq(G__10578__a,0);
} 
return G__10577__delegate.call(this,x,y,z,args);};
G__10577.cljs$lang$maxFixedArity = 3;
G__10577.cljs$lang$applyTo = (function (arglist__10579){
var x = cljs.core.first(arglist__10579);
arglist__10579 = cljs.core.next(arglist__10579);
var y = cljs.core.first(arglist__10579);
arglist__10579 = cljs.core.next(arglist__10579);
var z = cljs.core.first(arglist__10579);
var args = cljs.core.rest(arglist__10579);
return G__10577__delegate(x,y,z,args);
});
G__10577.cljs$core$IFn$_invoke$arity$variadic = G__10577__delegate;
return G__10577;
})()
;
sp3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp3__0.call(this);
case 1:
return sp3__1.call(this,x);
case 2:
return sp3__2.call(this,x,y);
case 3:
return sp3__3.call(this,x,y,z);
default:
var G__10580 = null;
if (arguments.length > 3) {
var G__10581__i = 0, G__10581__a = new Array(arguments.length -  3);
while (G__10581__i < G__10581__a.length) {G__10581__a[G__10581__i] = arguments[G__10581__i + 3]; ++G__10581__i;}
G__10580 = new cljs.core.IndexedSeq(G__10581__a,0);
}
return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__10580);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp3.cljs$lang$maxFixedArity = 3;
sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
return sp3;
})()
});
var some_fn__4 = (function() { 
var G__10582__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var spn = null;
var spn__0 = (function (){
return null;
});
var spn__1 = (function (x){
return cljs.core.some(((function (ps__$1){
return (function (p1__10195_SHARP_){
var G__10558 = x;
return (p1__10195_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__10195_SHARP_.cljs$core$IFn$_invoke$arity$1(G__10558) : p1__10195_SHARP_.call(null,G__10558));
});})(ps__$1))
,ps__$1);
});
var spn__2 = (function (x,y){
return cljs.core.some(((function (ps__$1){
return (function (p1__10196_SHARP_){
var or__4720__auto__ = (function (){var G__10560 = x;
return (p1__10196_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__10196_SHARP_.cljs$core$IFn$_invoke$arity$1(G__10560) : p1__10196_SHARP_.call(null,G__10560));
})();
if(cljs.core.truth_(or__4720__auto__)){
return or__4720__auto__;
} else {
var G__10561 = y;
return (p1__10196_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__10196_SHARP_.cljs$core$IFn$_invoke$arity$1(G__10561) : p1__10196_SHARP_.call(null,G__10561));
}
});})(ps__$1))
,ps__$1);
});
var spn__3 = (function (x,y,z){
return cljs.core.some(((function (ps__$1){
return (function (p1__10197_SHARP_){
var or__4720__auto__ = (function (){var G__10563 = x;
return (p1__10197_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__10197_SHARP_.cljs$core$IFn$_invoke$arity$1(G__10563) : p1__10197_SHARP_.call(null,G__10563));
})();
if(cljs.core.truth_(or__4720__auto__)){
return or__4720__auto__;
} else {
var or__4720__auto____$1 = (function (){var G__10565 = y;
return (p1__10197_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__10197_SHARP_.cljs$core$IFn$_invoke$arity$1(G__10565) : p1__10197_SHARP_.call(null,G__10565));
})();
if(cljs.core.truth_(or__4720__auto____$1)){
return or__4720__auto____$1;
} else {
var G__10566 = z;
return (p1__10197_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__10197_SHARP_.cljs$core$IFn$_invoke$arity$1(G__10566) : p1__10197_SHARP_.call(null,G__10566));
}
}
});})(ps__$1))
,ps__$1);
});
var spn__4 = (function() { 
var G__10583__delegate = function (x,y,z,args){
var or__4720__auto__ = spn.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__4720__auto__)){
return or__4720__auto__;
} else {
return cljs.core.some(((function (or__4720__auto__,ps__$1){
return (function (p1__10198_SHARP_){
return cljs.core.some(p1__10198_SHARP_,args);
});})(or__4720__auto__,ps__$1))
,ps__$1);
}
};
var G__10583 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__10584__i = 0, G__10584__a = new Array(arguments.length -  3);
while (G__10584__i < G__10584__a.length) {G__10584__a[G__10584__i] = arguments[G__10584__i + 3]; ++G__10584__i;}
  args = new cljs.core.IndexedSeq(G__10584__a,0);
} 
return G__10583__delegate.call(this,x,y,z,args);};
G__10583.cljs$lang$maxFixedArity = 3;
G__10583.cljs$lang$applyTo = (function (arglist__10585){
var x = cljs.core.first(arglist__10585);
arglist__10585 = cljs.core.next(arglist__10585);
var y = cljs.core.first(arglist__10585);
arglist__10585 = cljs.core.next(arglist__10585);
var z = cljs.core.first(arglist__10585);
var args = cljs.core.rest(arglist__10585);
return G__10583__delegate(x,y,z,args);
});
G__10583.cljs$core$IFn$_invoke$arity$variadic = G__10583__delegate;
return G__10583;
})()
;
spn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return spn__0.call(this);
case 1:
return spn__1.call(this,x);
case 2:
return spn__2.call(this,x,y);
case 3:
return spn__3.call(this,x,y,z);
default:
var G__10586 = null;
if (arguments.length > 3) {
var G__10587__i = 0, G__10587__a = new Array(arguments.length -  3);
while (G__10587__i < G__10587__a.length) {G__10587__a[G__10587__i] = arguments[G__10587__i + 3]; ++G__10587__i;}
G__10586 = new cljs.core.IndexedSeq(G__10587__a,0);
}
return spn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__10586);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
spn.cljs$lang$maxFixedArity = 3;
spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
return spn;
})()
;})(ps__$1))
};
var G__10582 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__10588__i = 0, G__10588__a = new Array(arguments.length -  3);
while (G__10588__i < G__10588__a.length) {G__10588__a[G__10588__i] = arguments[G__10588__i + 3]; ++G__10588__i;}
  ps = new cljs.core.IndexedSeq(G__10588__a,0);
} 
return G__10582__delegate.call(this,p1,p2,p3,ps);};
G__10582.cljs$lang$maxFixedArity = 3;
G__10582.cljs$lang$applyTo = (function (arglist__10589){
var p1 = cljs.core.first(arglist__10589);
arglist__10589 = cljs.core.next(arglist__10589);
var p2 = cljs.core.first(arglist__10589);
arglist__10589 = cljs.core.next(arglist__10589);
var p3 = cljs.core.first(arglist__10589);
var ps = cljs.core.rest(arglist__10589);
return G__10582__delegate(p1,p2,p3,ps);
});
G__10582.cljs$core$IFn$_invoke$arity$variadic = G__10582__delegate;
return G__10582;
})()
;
some_fn = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return some_fn__1.call(this,p1);
case 2:
return some_fn__2.call(this,p1,p2);
case 3:
return some_fn__3.call(this,p1,p2,p3);
default:
var G__10590 = null;
if (arguments.length > 3) {
var G__10591__i = 0, G__10591__a = new Array(arguments.length -  3);
while (G__10591__i < G__10591__a.length) {G__10591__a[G__10591__i] = arguments[G__10591__i + 3]; ++G__10591__i;}
G__10590 = new cljs.core.IndexedSeq(G__10591__a,0);
}
return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__10590);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
some_fn.cljs$lang$maxFixedArity = 3;
some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
return some_fn;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to
* the set of first items of each coll, followed by applying f to the
* set of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments. Returns a transducer when
* no collection is provided.
* @param {...*} var_args
*/
cljs.core.map = (function() {
var map = null;
var map__1 = (function (f){
return (function (rf){
return (function() {
var G__10646 = null;
var G__10646__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__10646__1 = (function (result){
var G__10632 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10632) : rf.call(null,G__10632));
});
var G__10646__2 = (function (result,input){
var G__10633 = result;
var G__10634 = (function (){var G__10635 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10635) : f.call(null,G__10635));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10633,G__10634) : rf.call(null,G__10633,G__10634));
});
var G__10646__3 = (function() { 
var G__10647__delegate = function (result,input,inputs){
var G__10636 = result;
var G__10637 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,input,inputs);
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10636,G__10637) : rf.call(null,G__10636,G__10637));
};
var G__10647 = function (result,input,var_args){
var inputs = null;
if (arguments.length > 2) {
var G__10648__i = 0, G__10648__a = new Array(arguments.length -  2);
while (G__10648__i < G__10648__a.length) {G__10648__a[G__10648__i] = arguments[G__10648__i + 2]; ++G__10648__i;}
  inputs = new cljs.core.IndexedSeq(G__10648__a,0);
} 
return G__10647__delegate.call(this,result,input,inputs);};
G__10647.cljs$lang$maxFixedArity = 2;
G__10647.cljs$lang$applyTo = (function (arglist__10649){
var result = cljs.core.first(arglist__10649);
arglist__10649 = cljs.core.next(arglist__10649);
var input = cljs.core.first(arglist__10649);
var inputs = cljs.core.rest(arglist__10649);
return G__10647__delegate(result,input,inputs);
});
G__10647.cljs$core$IFn$_invoke$arity$variadic = G__10647__delegate;
return G__10647;
})()
;
G__10646 = function(result,input,var_args){
var inputs = var_args;
switch(arguments.length){
case 0:
return G__10646__0.call(this);
case 1:
return G__10646__1.call(this,result);
case 2:
return G__10646__2.call(this,result,input);
default:
var G__10650 = null;
if (arguments.length > 2) {
var G__10651__i = 0, G__10651__a = new Array(arguments.length -  2);
while (G__10651__i < G__10651__a.length) {G__10651__a[G__10651__i] = arguments[G__10651__i + 2]; ++G__10651__i;}
G__10650 = new cljs.core.IndexedSeq(G__10651__a,0);
}
return G__10646__3.cljs$core$IFn$_invoke$arity$variadic(result,input, G__10650);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10646.cljs$lang$maxFixedArity = 2;
G__10646.cljs$lang$applyTo = G__10646__3.cljs$lang$applyTo;
G__10646.cljs$core$IFn$_invoke$arity$0 = G__10646__0;
G__10646.cljs$core$IFn$_invoke$arity$1 = G__10646__1;
G__10646.cljs$core$IFn$_invoke$arity$2 = G__10646__2;
G__10646.cljs$core$IFn$_invoke$arity$variadic = G__10646__3.cljs$core$IFn$_invoke$arity$variadic;
return G__10646;
})()
});
});
var map__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__5607__auto___10652 = size;
var i_10653 = (0);
while(true){
if((i_10653 < n__5607__auto___10652)){
cljs.core.chunk_append(b,(function (){var G__10638 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_10653);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10638) : f.call(null,G__10638));
})());

var G__10654 = (i_10653 + (1));
i_10653 = G__10654;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__10639 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10639) : f.call(null,G__10639));
})(),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
var map__3 = (function (f,c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons((function (){var G__10640 = cljs.core.first(s1);
var G__10641 = cljs.core.first(s2);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10640,G__10641) : f.call(null,G__10640,G__10641));
})(),map.cljs$core$IFn$_invoke$arity$3(f,cljs.core.rest(s1),cljs.core.rest(s2)));
} else {
return null;
}
}),null,null));
});
var map__4 = (function (f,c1,c2,c3){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
var s3 = cljs.core.seq(c3);
if((s1) && (s2) && (s3)){
return cljs.core.cons((function (){var G__10642 = cljs.core.first(s1);
var G__10643 = cljs.core.first(s2);
var G__10644 = cljs.core.first(s3);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10642,G__10643,G__10644) : f.call(null,G__10642,G__10643,G__10644));
})(),map.cljs$core$IFn$_invoke$arity$4(f,cljs.core.rest(s1),cljs.core.rest(s2),cljs.core.rest(s3)));
} else {
return null;
}
}),null,null));
});
var map__5 = (function() { 
var G__10655__delegate = function (f,c1,c2,c3,colls){
var step = (function step(cs){
return (new cljs.core.LazySeq(null,(function (){
var ss = map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cs);
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.cons(map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),step(map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
});
return map.cljs$core$IFn$_invoke$arity$2(((function (step){
return (function (p1__10592_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,p1__10592_SHARP_);
});})(step))
,step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c3,cljs.core.array_seq([c2,c1], 0))));
};
var G__10655 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__10656__i = 0, G__10656__a = new Array(arguments.length -  4);
while (G__10656__i < G__10656__a.length) {G__10656__a[G__10656__i] = arguments[G__10656__i + 4]; ++G__10656__i;}
  colls = new cljs.core.IndexedSeq(G__10656__a,0);
} 
return G__10655__delegate.call(this,f,c1,c2,c3,colls);};
G__10655.cljs$lang$maxFixedArity = 4;
G__10655.cljs$lang$applyTo = (function (arglist__10657){
var f = cljs.core.first(arglist__10657);
arglist__10657 = cljs.core.next(arglist__10657);
var c1 = cljs.core.first(arglist__10657);
arglist__10657 = cljs.core.next(arglist__10657);
var c2 = cljs.core.first(arglist__10657);
arglist__10657 = cljs.core.next(arglist__10657);
var c3 = cljs.core.first(arglist__10657);
var colls = cljs.core.rest(arglist__10657);
return G__10655__delegate(f,c1,c2,c3,colls);
});
G__10655.cljs$core$IFn$_invoke$arity$variadic = G__10655__delegate;
return G__10655;
})()
;
map = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return map__1.call(this,f);
case 2:
return map__2.call(this,f,c1);
case 3:
return map__3.call(this,f,c1,c2);
case 4:
return map__4.call(this,f,c1,c2,c3);
default:
var G__10658 = null;
if (arguments.length > 4) {
var G__10659__i = 0, G__10659__a = new Array(arguments.length -  4);
while (G__10659__i < G__10659__a.length) {G__10659__a[G__10659__i] = arguments[G__10659__i + 4]; ++G__10659__i;}
G__10658 = new cljs.core.IndexedSeq(G__10659__a,0);
}
return map__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__10658);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map.cljs$lang$maxFixedArity = 4;
map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
map.cljs$core$IFn$_invoke$arity$1 = map__1;
map.cljs$core$IFn$_invoke$arity$2 = map__2;
map.cljs$core$IFn$_invoke$arity$3 = map__3;
map.cljs$core$IFn$_invoke$arity$4 = map__4;
map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
return map;
})()
;
/**
* Returns a lazy sequence of the first n items in coll, or all items if
* there are fewer than n.  Returns a stateful transducer when
* no collection is provided.
*/
cljs.core.take = (function() {
var take = null;
var take__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__10668 = null;
var G__10668__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__10668__1 = (function (result){
var G__10665 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10665) : rf.call(null,G__10665));
});
var G__10668__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));
var result__$1 = (((n__$1 > (0)))?(function (){var G__10666 = result;
var G__10667 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10666,G__10667) : rf.call(null,G__10666,G__10667));
})():result);
if(!((nn > (0)))){
return cljs.core.ensure_reduced(result__$1);
} else {
return result__$1;
}
});
G__10668 = function(result,input){
switch(arguments.length){
case 0:
return G__10668__0.call(this);
case 1:
return G__10668__1.call(this,result);
case 2:
return G__10668__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10668.cljs$core$IFn$_invoke$arity$0 = G__10668__0;
G__10668.cljs$core$IFn$_invoke$arity$1 = G__10668__1;
G__10668.cljs$core$IFn$_invoke$arity$2 = G__10668__2;
return G__10668;
})()
;})(na))
});
});
var take__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
if((n > (0))){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take.cljs$core$IFn$_invoke$arity$2((n - (1)),cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take = function(n,coll){
switch(arguments.length){
case 1:
return take__1.call(this,n);
case 2:
return take__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take.cljs$core$IFn$_invoke$arity$1 = take__1;
take.cljs$core$IFn$_invoke$arity$2 = take__2;
return take;
})()
;
/**
* Returns a lazy sequence of all but the first n items in coll.
* Returns a stateful transducer when no collection is provided.
*/
cljs.core.drop = (function() {
var drop = null;
var drop__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__10675 = null;
var G__10675__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__10675__1 = (function (result){
var G__10672 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10672) : rf.call(null,G__10672));
});
var G__10675__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));

if((n__$1 > (0))){
return result;
} else {
var G__10673 = result;
var G__10674 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10673,G__10674) : rf.call(null,G__10673,G__10674));
}
});
G__10675 = function(result,input){
switch(arguments.length){
case 0:
return G__10675__0.call(this);
case 1:
return G__10675__1.call(this,result);
case 2:
return G__10675__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10675.cljs$core$IFn$_invoke$arity$0 = G__10675__0;
G__10675.cljs$core$IFn$_invoke$arity$1 = G__10675__1;
G__10675.cljs$core$IFn$_invoke$arity$2 = G__10675__2;
return G__10675;
})()
;})(na))
});
});
var drop__2 = (function (n,coll){
var step = (function (n__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(((n__$1 > (0))) && (s)){
var G__10676 = (n__$1 - (1));
var G__10677 = cljs.core.rest(s);
n__$1 = G__10676;
coll__$1 = G__10677;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(n,coll);
});})(step))
,null,null));
});
drop = function(n,coll){
switch(arguments.length){
case 1:
return drop__1.call(this,n);
case 2:
return drop__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
return drop;
})()
;
/**
* Return a lazy sequence of all but the last n (default 1) items in coll
*/
cljs.core.drop_last = (function() {
var drop_last = null;
var drop_last__1 = (function (s){
return drop_last.cljs$core$IFn$_invoke$arity$2((1),s);
});
var drop_last__2 = (function (n,s){
return cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (x,_){
return x;
}),s,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s));
});
drop_last = function(n,s){
switch(arguments.length){
case 1:
return drop_last__1.call(this,n);
case 2:
return drop_last__2.call(this,n,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
return drop_last;
})()
;
/**
* Returns a seq of the last n items in coll.  Depending on the type
* of coll may be no better than linear time.  For vectors, see also subvec.
*/
cljs.core.take_last = (function take_last(n,coll){
var s = cljs.core.seq(coll);
var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll));
while(true){
if(lead){
var G__10680 = cljs.core.next(s);
var G__10681 = cljs.core.next(lead);
s = G__10680;
lead = G__10681;
continue;
} else {
return s;
}
break;
}
});
/**
* Returns a lazy sequence of the items in coll starting from the
* first item for which (pred item) returns logical false.  Returns a
* stateful transducer when no collection is provided.
*/
cljs.core.drop_while = (function() {
var drop_while = null;
var drop_while__1 = (function (pred){
return (function (rf){
var da = cljs.core.volatile_BANG_(true);
return ((function (da){
return (function() {
var G__10694 = null;
var G__10694__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__10694__1 = (function (result){
var G__10688 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10688) : rf.call(null,G__10688));
});
var G__10694__2 = (function (result,input){
var drop_QMARK_ = cljs.core.deref(da);
if(cljs.core.truth_((function (){var and__4708__auto__ = drop_QMARK_;
if(cljs.core.truth_(and__4708__auto__)){
var G__10689 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__10689) : pred.call(null,G__10689));
} else {
return and__4708__auto__;
}
})())){
return result;
} else {
cljs.core.vreset_BANG_(da,null);

var G__10690 = result;
var G__10691 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10690,G__10691) : rf.call(null,G__10690,G__10691));
}
});
G__10694 = function(result,input){
switch(arguments.length){
case 0:
return G__10694__0.call(this);
case 1:
return G__10694__1.call(this,result);
case 2:
return G__10694__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10694.cljs$core$IFn$_invoke$arity$0 = G__10694__0;
G__10694.cljs$core$IFn$_invoke$arity$1 = G__10694__1;
G__10694.cljs$core$IFn$_invoke$arity$2 = G__10694__2;
return G__10694;
})()
;})(da))
});
});
var drop_while__2 = (function (pred,coll){
var step = (function (pred__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(cljs.core.truth_((function (){var and__4708__auto__ = s;
if(and__4708__auto__){
var G__10693 = cljs.core.first(s);
return (pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__10693) : pred__$1.call(null,G__10693));
} else {
return and__4708__auto__;
}
})())){
var G__10695 = pred__$1;
var G__10696 = cljs.core.rest(s);
pred__$1 = G__10695;
coll__$1 = G__10696;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(pred,coll);
});})(step))
,null,null));
});
drop_while = function(pred,coll){
switch(arguments.length){
case 1:
return drop_while__1.call(this,pred);
case 2:
return drop_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
return drop_while;
})()
;
/**
* Returns a lazy (infinite!) sequence of repetitions of the items in coll.
*/
cljs.core.cycle = (function cycle(coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s,cycle(s));
} else {
return null;
}
}),null,null));
});
/**
* Returns a vector of [(take n coll) (drop n coll)]
*/
cljs.core.split_at = (function split_at(n,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,coll),cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll)], null);
});
/**
* Returns a lazy (infinite!, or length n if supplied) sequence of xs.
*/
cljs.core.repeat = (function() {
var repeat = null;
var repeat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(x,repeat.cljs$core$IFn$_invoke$arity$1(x));
}),null,null));
});
var repeat__2 = (function (n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeat.cljs$core$IFn$_invoke$arity$1(x));
});
repeat = function(n,x){
switch(arguments.length){
case 1:
return repeat__1.call(this,n);
case 2:
return repeat__2.call(this,n,x);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
return repeat;
})()
;
/**
* Returns a lazy seq of n xs.
*/
cljs.core.replicate = (function replicate(n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
});
/**
* Takes a function of no args, presumably with side effects, and
* returns an infinite (or length n if supplied) lazy sequence of calls
* to it
*/
cljs.core.repeatedly = (function() {
var repeatedly = null;
var repeatedly__1 = (function (f){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),repeatedly.cljs$core$IFn$_invoke$arity$1(f));
}),null,null));
});
var repeatedly__2 = (function (n,f){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeatedly.cljs$core$IFn$_invoke$arity$1(f));
});
repeatedly = function(n,f){
switch(arguments.length){
case 1:
return repeatedly__1.call(this,n);
case 2:
return repeatedly__2.call(this,n,f);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
return repeatedly;
})()
;
/**
* Returns a lazy sequence of x, (f x), (f (f x)) etc. f must be free of side-effects
*/
cljs.core.iterate = (function iterate(f,x){
return cljs.core.cons(x,(new cljs.core.LazySeq(null,(function (){
return iterate(f,(function (){var G__10705 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10705) : f.call(null,G__10705));
})());
}),null,null)));
});
/**
* Returns a lazy seq of the first item in each coll, then the second etc.
* @param {...*} var_args
*/
cljs.core.interleave = (function() {
var interleave = null;
var interleave__2 = (function (c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons(cljs.core.first(s1),cljs.core.cons(cljs.core.first(s2),interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1),cljs.core.rest(s2))));
} else {
return null;
}
}),null,null));
});
var interleave__3 = (function() { 
var G__10708__delegate = function (c1,c2,colls){
return (new cljs.core.LazySeq(null,(function (){
var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c2,cljs.core.array_seq([c1], 0)));
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(interleave,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
};
var G__10708 = function (c1,c2,var_args){
var colls = null;
if (arguments.length > 2) {
var G__10709__i = 0, G__10709__a = new Array(arguments.length -  2);
while (G__10709__i < G__10709__a.length) {G__10709__a[G__10709__i] = arguments[G__10709__i + 2]; ++G__10709__i;}
  colls = new cljs.core.IndexedSeq(G__10709__a,0);
} 
return G__10708__delegate.call(this,c1,c2,colls);};
G__10708.cljs$lang$maxFixedArity = 2;
G__10708.cljs$lang$applyTo = (function (arglist__10710){
var c1 = cljs.core.first(arglist__10710);
arglist__10710 = cljs.core.next(arglist__10710);
var c2 = cljs.core.first(arglist__10710);
var colls = cljs.core.rest(arglist__10710);
return G__10708__delegate(c1,c2,colls);
});
G__10708.cljs$core$IFn$_invoke$arity$variadic = G__10708__delegate;
return G__10708;
})()
;
interleave = function(c1,c2,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return interleave__2.call(this,c1,c2);
default:
var G__10711 = null;
if (arguments.length > 2) {
var G__10712__i = 0, G__10712__a = new Array(arguments.length -  2);
while (G__10712__i < G__10712__a.length) {G__10712__a[G__10712__i] = arguments[G__10712__i + 2]; ++G__10712__i;}
G__10711 = new cljs.core.IndexedSeq(G__10712__a,0);
}
return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1,c2, G__10711);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interleave.cljs$lang$maxFixedArity = 2;
interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
return interleave;
})()
;
/**
* Returns a lazy seq of the elements of coll separated by sep
*/
cljs.core.interpose = (function() {
var interpose = null;
var interpose__1 = (function (sep){
return (function (rf){
var started = cljs.core.volatile_BANG_(false);
return ((function (started){
return (function() {
var G__10727 = null;
var G__10727__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__10727__1 = (function (result){
var G__10720 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10720) : rf.call(null,G__10720));
});
var G__10727__2 = (function (result,input){
if(cljs.core.truth_(cljs.core.deref(started))){
var sepr = (function (){var G__10721 = result;
var G__10722 = sep;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10721,G__10722) : rf.call(null,G__10721,G__10722));
})();
if(cljs.core.reduced_QMARK_(sepr)){
return sepr;
} else {
var G__10723 = sepr;
var G__10724 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10723,G__10724) : rf.call(null,G__10723,G__10724));
}
} else {
cljs.core.vreset_BANG_(started,true);

var G__10725 = result;
var G__10726 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10725,G__10726) : rf.call(null,G__10725,G__10726));
}
});
G__10727 = function(result,input){
switch(arguments.length){
case 0:
return G__10727__0.call(this);
case 1:
return G__10727__1.call(this,result);
case 2:
return G__10727__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10727.cljs$core$IFn$_invoke$arity$0 = G__10727__0;
G__10727.cljs$core$IFn$_invoke$arity$1 = G__10727__1;
G__10727.cljs$core$IFn$_invoke$arity$2 = G__10727__2;
return G__10727;
})()
;})(started))
});
});
var interpose__2 = (function (sep,coll){
return cljs.core.drop.cljs$core$IFn$_invoke$arity$2((1),cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep),coll));
});
interpose = function(sep,coll){
switch(arguments.length){
case 1:
return interpose__1.call(this,sep);
case 2:
return interpose__2.call(this,sep,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interpose.cljs$core$IFn$_invoke$arity$1 = interpose__1;
interpose.cljs$core$IFn$_invoke$arity$2 = interpose__2;
return interpose;
})()
;
/**
* Take a collection of collections, and return a lazy seq
* of items from the inner collection
*/
cljs.core.flatten1 = (function flatten1(colls){
var cat = (function cat(coll,colls__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var coll__$1 = temp__4124__auto__;
return cljs.core.cons(cljs.core.first(coll__$1),cat(cljs.core.rest(coll__$1),colls__$1));
} else {
if(cljs.core.seq(colls__$1)){
return cat(cljs.core.first(colls__$1),cljs.core.rest(colls__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(null,colls);
});
/**
* Returns the result of applying concat to the result of applying map
* to f and colls.  Thus function f should return a collection. Returns
* a transducer when no collections are provided
* @param {...*} var_args
*/
cljs.core.mapcat = (function() {
var mapcat = null;
var mapcat__1 = (function (f){
return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f),cljs.core.cat);
});
var mapcat__2 = (function() { 
var G__10736__delegate = function (f,colls){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map,f,colls));
};
var G__10736 = function (f,var_args){
var colls = null;
if (arguments.length > 1) {
var G__10737__i = 0, G__10737__a = new Array(arguments.length -  1);
while (G__10737__i < G__10737__a.length) {G__10737__a[G__10737__i] = arguments[G__10737__i + 1]; ++G__10737__i;}
  colls = new cljs.core.IndexedSeq(G__10737__a,0);
} 
return G__10736__delegate.call(this,f,colls);};
G__10736.cljs$lang$maxFixedArity = 1;
G__10736.cljs$lang$applyTo = (function (arglist__10738){
var f = cljs.core.first(arglist__10738);
var colls = cljs.core.rest(arglist__10738);
return G__10736__delegate(f,colls);
});
G__10736.cljs$core$IFn$_invoke$arity$variadic = G__10736__delegate;
return G__10736;
})()
;
mapcat = function(f,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return mapcat__1.call(this,f);
default:
var G__10739 = null;
if (arguments.length > 1) {
var G__10740__i = 0, G__10740__a = new Array(arguments.length -  1);
while (G__10740__i < G__10740__a.length) {G__10740__a[G__10740__i] = arguments[G__10740__i + 1]; ++G__10740__i;}
G__10739 = new cljs.core.IndexedSeq(G__10740__a,0);
}
return mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__10739);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapcat.cljs$lang$maxFixedArity = 1;
mapcat.cljs$lang$applyTo = mapcat__2.cljs$lang$applyTo;
mapcat.cljs$core$IFn$_invoke$arity$1 = mapcat__1;
mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
return mapcat;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.filter = (function() {
var filter = null;
var filter__1 = (function (pred){
return (function (rf){
return (function() {
var G__10759 = null;
var G__10759__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__10759__1 = (function (result){
var G__10753 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10753) : rf.call(null,G__10753));
});
var G__10759__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__10754 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__10754) : pred.call(null,G__10754));
})())){
var G__10755 = result;
var G__10756 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10755,G__10756) : rf.call(null,G__10755,G__10756));
} else {
return result;
}
});
G__10759 = function(result,input){
switch(arguments.length){
case 0:
return G__10759__0.call(this);
case 1:
return G__10759__1.call(this,result);
case 2:
return G__10759__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10759.cljs$core$IFn$_invoke$arity$0 = G__10759__0;
G__10759.cljs$core$IFn$_invoke$arity$1 = G__10759__1;
G__10759.cljs$core$IFn$_invoke$arity$2 = G__10759__2;
return G__10759;
})()
});
});
var filter__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__5607__auto___10760 = size;
var i_10761 = (0);
while(true){
if((i_10761 < n__5607__auto___10760)){
if(cljs.core.truth_((function (){var G__10757 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_10761);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__10757) : pred.call(null,G__10757));
})())){
cljs.core.chunk_append(b,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_10761));
} else {
}

var G__10762 = (i_10761 + (1));
i_10761 = G__10762;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),filter.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.chunk_rest(s)));
} else {
var f = cljs.core.first(s);
var r = cljs.core.rest(s);
if(cljs.core.truth_((function (){var G__10758 = f;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__10758) : pred.call(null,G__10758));
})())){
return cljs.core.cons(f,filter.cljs$core$IFn$_invoke$arity$2(pred,r));
} else {
return filter.cljs$core$IFn$_invoke$arity$2(pred,r);
}
}
} else {
return null;
}
}),null,null));
});
filter = function(pred,coll){
switch(arguments.length){
case 1:
return filter__1.call(this,pred);
case 2:
return filter__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
return filter;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns false. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.remove = (function() {
var remove = null;
var remove__1 = (function (pred){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
});
var remove__2 = (function (pred,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred),coll);
});
remove = function(pred,coll){
switch(arguments.length){
case 1:
return remove__1.call(this,pred);
case 2:
return remove__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
return remove;
})()
;
/**
* Returns a lazy sequence of the nodes in a tree, via a depth-first walk.
* branch? must be a fn of one arg that returns true if passed a node
* that can have children (but may not).  children must be a fn of one
* arg that returns a sequence of the children. Will only be called on
* nodes for which branch? returns true. Root is the root node of the
* tree.
*/
cljs.core.tree_seq = (function tree_seq(branch_QMARK_,children,root){
var walk = (function walk(node){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(node,(cljs.core.truth_((function (){var G__10769 = node;
return (branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__10769) : branch_QMARK_.call(null,G__10769));
})())?cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(walk,cljs.core.array_seq([(function (){var G__10770 = node;
return (children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__10770) : children.call(null,G__10770));
})()], 0)):null));
}),null,null));
});
return walk(root);
});
/**
* Takes any nested combination of sequential things (lists, vectors,
* etc.) and returns their contents as a single, flat sequence.
* (flatten nil) returns nil.
*/
cljs.core.flatten = (function flatten(x){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__10771_SHARP_){
return !(cljs.core.sequential_QMARK_(p1__10771_SHARP_));
}),cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_,cljs.core.seq,x)));
});
/**
* Returns a new coll consisting of to-coll with all of the items of
* from-coll conjoined. A transducer may be supplied.
*/
cljs.core.into = (function() {
var into = null;
var into__2 = (function (to,from){
if(!((to == null))){
if((function (){var G__10774 = to;
if(G__10774){
var bit__5394__auto__ = (G__10774.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__5394__auto__) || (G__10774.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,to,from);
}
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,from);
}
});
var into__3 = (function (to,xform,from){
if((function (){var G__10775 = to;
if(G__10775){
var bit__5394__auto__ = (G__10775.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__5394__auto__) || (G__10775.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj,to,from);
}
});
into = function(to,xform,from){
switch(arguments.length){
case 2:
return into__2.call(this,to,xform);
case 3:
return into__3.call(this,to,xform,from);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into.cljs$core$IFn$_invoke$arity$2 = into__2;
into.cljs$core$IFn$_invoke$arity$3 = into__3;
return into;
})()
;
/**
* Returns a vector consisting of the result of applying f to the
* set of first items of each coll, followed by applying f to the set
* of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments.
* @param {...*} var_args
*/
cljs.core.mapv = (function() {
var mapv = null;
var mapv__2 = (function (f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,(function (){var G__10777 = o;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10777) : f.call(null,G__10777));
})());
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
var mapv__3 = (function (f,c1,c2){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$3(f,c1,c2));
});
var mapv__4 = (function (f,c1,c2,c3){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$4(f,c1,c2,c3));
});
var mapv__5 = (function() { 
var G__10778__delegate = function (f,c1,c2,c3,colls){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map,f,c1,c2,c3,cljs.core.array_seq([colls], 0)));
};
var G__10778 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__10779__i = 0, G__10779__a = new Array(arguments.length -  4);
while (G__10779__i < G__10779__a.length) {G__10779__a[G__10779__i] = arguments[G__10779__i + 4]; ++G__10779__i;}
  colls = new cljs.core.IndexedSeq(G__10779__a,0);
} 
return G__10778__delegate.call(this,f,c1,c2,c3,colls);};
G__10778.cljs$lang$maxFixedArity = 4;
G__10778.cljs$lang$applyTo = (function (arglist__10780){
var f = cljs.core.first(arglist__10780);
arglist__10780 = cljs.core.next(arglist__10780);
var c1 = cljs.core.first(arglist__10780);
arglist__10780 = cljs.core.next(arglist__10780);
var c2 = cljs.core.first(arglist__10780);
arglist__10780 = cljs.core.next(arglist__10780);
var c3 = cljs.core.first(arglist__10780);
var colls = cljs.core.rest(arglist__10780);
return G__10778__delegate(f,c1,c2,c3,colls);
});
G__10778.cljs$core$IFn$_invoke$arity$variadic = G__10778__delegate;
return G__10778;
})()
;
mapv = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return mapv__2.call(this,f,c1);
case 3:
return mapv__3.call(this,f,c1,c2);
case 4:
return mapv__4.call(this,f,c1,c2,c3);
default:
var G__10781 = null;
if (arguments.length > 4) {
var G__10782__i = 0, G__10782__a = new Array(arguments.length -  4);
while (G__10782__i < G__10782__a.length) {G__10782__a[G__10782__i] = arguments[G__10782__i + 4]; ++G__10782__i;}
G__10781 = new cljs.core.IndexedSeq(G__10782__a,0);
}
return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__10781);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapv.cljs$lang$maxFixedArity = 4;
mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
return mapv;
})()
;
/**
* Returns a vector of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
*/
cljs.core.filterv = (function filterv(pred,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
if(cljs.core.truth_((function (){var G__10784 = o;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__10784) : pred.call(null,G__10784));
})())){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,o);
} else {
return v;
}
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
/**
* Returns a lazy sequence of lists of n items each, at offsets step
* apart. If step is not supplied, defaults to n, i.e. the partitions
* do not overlap. If a pad collection is supplied, use its elements as
* necessary to complete last partition up to n items. In case there are
* not enough padding elements, return a partition with less than n items.
*/
cljs.core.partition = (function() {
var partition = null;
var partition__2 = (function (n,coll){
return partition.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
var partition__4 = (function (n,step,pad,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$4(n,step,pad,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p,pad)));
}
} else {
return null;
}
}),null,null));
});
partition = function(n,step,pad,coll){
switch(arguments.length){
case 2:
return partition__2.call(this,n,step);
case 3:
return partition__3.call(this,n,step,pad);
case 4:
return partition__4.call(this,n,step,pad,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
return partition;
})()
;
/**
* Returns the value in a nested associative structure,
* where ks is a sequence of keys. Returns nil if the key is not present,
* or the not-found value if supplied.
*/
cljs.core.get_in = (function() {
var get_in = null;
var get_in__2 = (function (m,ks){
return get_in.cljs$core$IFn$_invoke$arity$3(m,ks,null);
});
var get_in__3 = (function (m,ks,not_found){
var sentinel = cljs.core.lookup_sentinel;
var m__$1 = m;
var ks__$1 = cljs.core.seq(ks);
while(true){
if(ks__$1){
if(!((function (){var G__10799 = m__$1;
if(G__10799){
var bit__5401__auto__ = (G__10799.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__5401__auto__) || (G__10799.cljs$core$ILookup$)){
return true;
} else {
if((!G__10799.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__10799);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__10799);
}
})())){
return not_found;
} else {
var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1,cljs.core.first(ks__$1),sentinel);
if((sentinel === m__$2)){
return not_found;
} else {
var G__10800 = sentinel;
var G__10801 = m__$2;
var G__10802 = cljs.core.next(ks__$1);
sentinel = G__10800;
m__$1 = G__10801;
ks__$1 = G__10802;
continue;
}
}
} else {
return m__$1;
}
break;
}
});
get_in = function(m,ks,not_found){
switch(arguments.length){
case 2:
return get_in__2.call(this,m,ks);
case 3:
return get_in__3.call(this,m,ks,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
return get_in;
})()
;
/**
* Associates a value in a nested associative structure, where ks is a
* sequence of keys and v is the new value and returns a new nested structure.
* If any levels do not exist, hash-maps will be created.
*/
cljs.core.assoc_in = (function assoc_in(m,p__10803,v){
var vec__10808 = p__10803;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10808,(0),null);
var ks = cljs.core.nthnext(vec__10808,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,v));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
/**
* 'Updates' a value in a nested associative structure, where ks is a
* sequence of keys and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* nested structure.  If any levels do not exist, hash-maps will be
* created.
* @param {...*} var_args
*/
cljs.core.update_in = (function() {
var update_in = null;
var update_in__3 = (function (m,p__10809,f){
var vec__10847 = p__10809;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10847,(0),null);
var ks = cljs.core.nthnext(vec__10847,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__10848 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10848) : f.call(null,G__10848));
})());
}
});
var update_in__4 = (function (m,p__10810,f,a){
var vec__10849 = p__10810;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10849,(0),null);
var ks = cljs.core.nthnext(vec__10849,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__10850 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__10851 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10850,G__10851) : f.call(null,G__10850,G__10851));
})());
}
});
var update_in__5 = (function (m,p__10811,f,a,b){
var vec__10852 = p__10811;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10852,(0),null);
var ks = cljs.core.nthnext(vec__10852,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__10853 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__10854 = a;
var G__10855 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10853,G__10854,G__10855) : f.call(null,G__10853,G__10854,G__10855));
})());
}
});
var update_in__6 = (function (m,p__10812,f,a,b,c){
var vec__10856 = p__10812;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10856,(0),null);
var ks = cljs.core.nthnext(vec__10856,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b,c));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__10857 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__10858 = a;
var G__10859 = b;
var G__10860 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__10857,G__10858,G__10859,G__10860) : f.call(null,G__10857,G__10858,G__10859,G__10860));
})());
}
});
var update_in__7 = (function() { 
var G__10862__delegate = function (m,p__10813,f,a,b,c,args){
var vec__10861 = p__10813;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10861,(0),null);
var ks = cljs.core.nthnext(vec__10861,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(update_in,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,cljs.core.array_seq([b,c,args], 0)));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),a,b,c,cljs.core.array_seq([args], 0)));
}
};
var G__10862 = function (m,p__10813,f,a,b,c,var_args){
var args = null;
if (arguments.length > 6) {
var G__10863__i = 0, G__10863__a = new Array(arguments.length -  6);
while (G__10863__i < G__10863__a.length) {G__10863__a[G__10863__i] = arguments[G__10863__i + 6]; ++G__10863__i;}
  args = new cljs.core.IndexedSeq(G__10863__a,0);
} 
return G__10862__delegate.call(this,m,p__10813,f,a,b,c,args);};
G__10862.cljs$lang$maxFixedArity = 6;
G__10862.cljs$lang$applyTo = (function (arglist__10864){
var m = cljs.core.first(arglist__10864);
arglist__10864 = cljs.core.next(arglist__10864);
var p__10813 = cljs.core.first(arglist__10864);
arglist__10864 = cljs.core.next(arglist__10864);
var f = cljs.core.first(arglist__10864);
arglist__10864 = cljs.core.next(arglist__10864);
var a = cljs.core.first(arglist__10864);
arglist__10864 = cljs.core.next(arglist__10864);
var b = cljs.core.first(arglist__10864);
arglist__10864 = cljs.core.next(arglist__10864);
var c = cljs.core.first(arglist__10864);
var args = cljs.core.rest(arglist__10864);
return G__10862__delegate(m,p__10813,f,a,b,c,args);
});
G__10862.cljs$core$IFn$_invoke$arity$variadic = G__10862__delegate;
return G__10862;
})()
;
update_in = function(m,p__10813,f,a,b,c,var_args){
var args = var_args;
switch(arguments.length){
case 3:
return update_in__3.call(this,m,p__10813,f);
case 4:
return update_in__4.call(this,m,p__10813,f,a);
case 5:
return update_in__5.call(this,m,p__10813,f,a,b);
case 6:
return update_in__6.call(this,m,p__10813,f,a,b,c);
default:
var G__10865 = null;
if (arguments.length > 6) {
var G__10866__i = 0, G__10866__a = new Array(arguments.length -  6);
while (G__10866__i < G__10866__a.length) {G__10866__a[G__10866__i] = arguments[G__10866__i + 6]; ++G__10866__i;}
G__10865 = new cljs.core.IndexedSeq(G__10866__a,0);
}
return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m,p__10813,f,a,b,c, G__10865);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update_in.cljs$lang$maxFixedArity = 6;
update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
return update_in;
})()
;
/**
* 'Updates' a value in an associative structure, where k is a
* key and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* structure.  If the key does not exist, nil is passed as the old value.
* @param {...*} var_args
*/
cljs.core.update = (function() {
var update = null;
var update__3 = (function (m,k,f){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__10877 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10877) : f.call(null,G__10877));
})());
});
var update__4 = (function (m,k,f,x){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__10878 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__10879 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10878,G__10879) : f.call(null,G__10878,G__10879));
})());
});
var update__5 = (function (m,k,f,x,y){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__10880 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__10881 = x;
var G__10882 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10880,G__10881,G__10882) : f.call(null,G__10880,G__10881,G__10882));
})());
});
var update__6 = (function (m,k,f,x,y,z){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__10883 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__10884 = x;
var G__10885 = y;
var G__10886 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__10883,G__10884,G__10885,G__10886) : f.call(null,G__10883,G__10884,G__10885,G__10886));
})());
});
var update__7 = (function() { 
var G__10887__delegate = function (m,k,f,x,y,z,more){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),x,y,z,cljs.core.array_seq([more], 0)));
};
var G__10887 = function (m,k,f,x,y,z,var_args){
var more = null;
if (arguments.length > 6) {
var G__10888__i = 0, G__10888__a = new Array(arguments.length -  6);
while (G__10888__i < G__10888__a.length) {G__10888__a[G__10888__i] = arguments[G__10888__i + 6]; ++G__10888__i;}
  more = new cljs.core.IndexedSeq(G__10888__a,0);
} 
return G__10887__delegate.call(this,m,k,f,x,y,z,more);};
G__10887.cljs$lang$maxFixedArity = 6;
G__10887.cljs$lang$applyTo = (function (arglist__10889){
var m = cljs.core.first(arglist__10889);
arglist__10889 = cljs.core.next(arglist__10889);
var k = cljs.core.first(arglist__10889);
arglist__10889 = cljs.core.next(arglist__10889);
var f = cljs.core.first(arglist__10889);
arglist__10889 = cljs.core.next(arglist__10889);
var x = cljs.core.first(arglist__10889);
arglist__10889 = cljs.core.next(arglist__10889);
var y = cljs.core.first(arglist__10889);
arglist__10889 = cljs.core.next(arglist__10889);
var z = cljs.core.first(arglist__10889);
var more = cljs.core.rest(arglist__10889);
return G__10887__delegate(m,k,f,x,y,z,more);
});
G__10887.cljs$core$IFn$_invoke$arity$variadic = G__10887__delegate;
return G__10887;
})()
;
update = function(m,k,f,x,y,z,var_args){
var more = var_args;
switch(arguments.length){
case 3:
return update__3.call(this,m,k,f);
case 4:
return update__4.call(this,m,k,f,x);
case 5:
return update__5.call(this,m,k,f,x,y);
case 6:
return update__6.call(this,m,k,f,x,y,z);
default:
var G__10890 = null;
if (arguments.length > 6) {
var G__10891__i = 0, G__10891__a = new Array(arguments.length -  6);
while (G__10891__i < G__10891__a.length) {G__10891__a[G__10891__i] = arguments[G__10891__i + 6]; ++G__10891__i;}
G__10890 = new cljs.core.IndexedSeq(G__10891__a,0);
}
return update__7.cljs$core$IFn$_invoke$arity$variadic(m,k,f,x,y,z, G__10890);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update.cljs$lang$maxFixedArity = 6;
update.cljs$lang$applyTo = update__7.cljs$lang$applyTo;
update.cljs$core$IFn$_invoke$arity$3 = update__3;
update.cljs$core$IFn$_invoke$arity$4 = update__4;
update.cljs$core$IFn$_invoke$arity$5 = update__5;
update.cljs$core$IFn$_invoke$arity$6 = update__6;
update.cljs$core$IFn$_invoke$arity$variadic = update__7.cljs$core$IFn$_invoke$arity$variadic;
return update;
})()
;

/**
* @constructor
*/
cljs.core.VectorNode = (function (edit,arr){
this.edit = edit;
this.arr = arr;
})

cljs.core.VectorNode.cljs$lang$type = true;

cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";

cljs.core.VectorNode.cljs$lang$ctorPrWriter = (function (this__5307__auto__,writer__5308__auto__,opt__5309__auto__){
return cljs.core._write(writer__5308__auto__,"cljs.core/VectorNode");
});

cljs.core.__GT_VectorNode = (function __GT_VectorNode(edit,arr){
return (new cljs.core.VectorNode(edit,arr));
});

cljs.core.pv_fresh_node = (function pv_fresh_node(edit){
return (new cljs.core.VectorNode(edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
});
cljs.core.pv_aget = (function pv_aget(node,idx){
return (node.arr[idx]);
});
cljs.core.pv_aset = (function pv_aset(node,idx,val){
return (node.arr[idx] = val);
});
cljs.core.pv_clone_node = (function pv_clone_node(node){
return (new cljs.core.VectorNode(node.edit,cljs.core.aclone(node.arr)));
});
cljs.core.tail_off = (function tail_off(pv){
var cnt = pv.cnt;
if((cnt < (32))){
return (0);
} else {
return (((cnt - (1)) >>> (5)) << (5));
}
});
cljs.core.new_path = (function new_path(edit,level,node){
var ll = level;
var ret = node;
while(true){
if((ll === (0))){
return ret;
} else {
var embed = ret;
var r = cljs.core.pv_fresh_node(edit);
var _ = cljs.core.pv_aset(r,(0),embed);
var G__10892 = (ll - (5));
var G__10893 = r;
ll = G__10892;
ret = G__10893;
continue;
}
break;
}
});
cljs.core.push_tail = (function push_tail(pv,level,parent,tailnode){
var ret = cljs.core.pv_clone_node(parent);
var subidx = (((pv.cnt - (1)) >>> level) & (31));
if(((5) === level)){
cljs.core.pv_aset(ret,subidx,tailnode);

return ret;
} else {
var child = cljs.core.pv_aget(parent,subidx);
if(!((child == null))){
var node_to_insert = push_tail(pv,(level - (5)),child,tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
} else {
var node_to_insert = cljs.core.new_path(null,(level - (5)),tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
}
}
});
cljs.core.vector_index_out_of_bounds = (function vector_index_out_of_bounds(i,cnt){
throw (new Error([cljs.core.str("No item "),cljs.core.str(i),cljs.core.str(" in vector of length "),cljs.core.str(cnt)].join('')));
});
cljs.core.first_array_for_longvec = (function first_array_for_longvec(pv){
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__10898 = cljs.core.pv_aget(node,(0));
var G__10899 = (level - (5));
node = G__10898;
level = G__10899;
continue;
} else {
return node.arr;
}
break;
}
});
cljs.core.unchecked_array_for = (function unchecked_array_for(pv,i){
if((i >= cljs.core.tail_off(pv))){
return pv.tail;
} else {
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__10900 = cljs.core.pv_aget(node,((i >>> level) & (31)));
var G__10901 = (level - (5));
node = G__10900;
level = G__10901;
continue;
} else {
return node.arr;
}
break;
}
}
});
cljs.core.array_for = (function array_for(pv,i){
if((((0) <= i)) && ((i < pv.cnt))){
return cljs.core.unchecked_array_for(pv,i);
} else {
return cljs.core.vector_index_out_of_bounds(i,pv.cnt);
}
});
cljs.core.do_assoc = (function do_assoc(pv,level,node,i,val){
var ret = cljs.core.pv_clone_node(node);
if((level === (0))){
cljs.core.pv_aset(ret,(i & (31)),val);

return ret;
} else {
var subidx = ((i >>> level) & (31));
cljs.core.pv_aset(ret,subidx,do_assoc(pv,(level - (5)),cljs.core.pv_aget(node,subidx),i,val));

return ret;
}
});
cljs.core.pop_tail = (function pop_tail(pv,level,node){
var subidx = (((pv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = pop_tail(pv,(level - (5)),cljs.core.pv_aget(node,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,new_child);

return ret;
}
} else {
if((subidx === (0))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,null);

return ret;

}
}
});

/**
* @constructor
*/
cljs.core.RangedIterator = (function (i,base,arr,v,start,end){
this.i = i;
this.base = base;
this.arr = arr;
this.v = v;
this.start = start;
this.end = end;
})
cljs.core.RangedIterator.prototype.hasNext = (function (){
var self__ = this;
var this$ = this;
return (self__.i < self__.end);
});

cljs.core.RangedIterator.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(((self__.i - self__.base) === (32))){
self__.arr = cljs.core.unchecked_array_for(self__.v,self__.i);

self__.base = (self__.base + (32));
} else {
}

var ret = (self__.arr[(self__.i & (31))]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.RangedIterator.cljs$lang$type = true;

cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";

cljs.core.RangedIterator.cljs$lang$ctorPrWriter = (function (this__5307__auto__,writer__5308__auto__,opt__5309__auto__){
return cljs.core._write(writer__5308__auto__,"cljs.core/RangedIterator");
});

cljs.core.__GT_RangedIterator = (function __GT_RangedIterator(i,base,arr,v,start,end){
return (new cljs.core.RangedIterator(i,base,arr,v,start,end));
});

cljs.core.ranged_iterator = (function ranged_iterator(v,start,end){
var i = start;
return (new cljs.core.RangedIterator(i,(i - (i % (32))),(((start < cljs.core.count(v)))?cljs.core.unchecked_array_for(v,i):null),v,start,end));
});







/**
* @constructor
*/
cljs.core.PersistentVector = (function (meta,cnt,shift,root,tail,__hash){
this.meta = meta;
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 167668511;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentVector.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentVector.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__10911 = init__$2;
var G__10912 = (j + i);
var G__10913 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10911,G__10912,G__10913) : f.call(null,G__10911,G__10912,G__10913));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__10924 = (j + (1));
var G__10925 = init__$3;
j = G__10924;
init__$2 = G__10925;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__10914 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10914) : cljs.core.deref.call(null,G__10914));
} else {
var G__10926 = (i + len);
var G__10927 = init__$2;
i = G__10926;
init__$1 = G__10927;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return (cljs.core.unchecked_array_for(coll__$1,n)[(n & (31))]);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(coll__$1) <= n)){
var new_tail = cljs.core.aclone(self__.tail);
(new_tail[(n & (31))] = val);

return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,cljs.core.do_assoc(coll__$1,self__.shift,self__.root,n,val),self__.tail,null));
}
} else {
if((n === self__.cnt)){
return cljs.core._conj(coll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds  [0,"),cljs.core.str(self__.cnt),cljs.core.str("]")].join('')));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.ranged_iterator(this$__$1,(0),self__.cnt);
});

cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(0));
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(1));
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(self__.cnt - (1)));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
} else {
if(((1) < (self__.cnt - cljs.core.tail_off(coll__$1)))){
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt - (1)),self__.shift,self__.root,self__.tail.slice((0),(-1)),null));
} else {
var new_tail = cljs.core.unchecked_array_for(coll__$1,(self__.cnt - (2)));
var nr = cljs.core.pop_tail(coll__$1,self__.shift,self__.root);
var new_root = (((nr == null))?cljs.core.PersistentVector.EMPTY_NODE:nr);
var cnt_1 = (self__.cnt - (1));
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
return (new cljs.core.PersistentVector(self__.meta,cnt_1,(self__.shift - (5)),cljs.core.pv_aget(new_root,(0)),new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,cnt_1,self__.shift,new_root,new_tail,null));
}

}
}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return (new cljs.core.RSeq(coll__$1,(self__.cnt - (1)),null));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__5141__auto__ = self__.__hash;
if(!((h__5141__auto__ == null))){
return h__5141__auto__;
} else {
var h__5141__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__5141__auto____$1;

return h__5141__auto____$1;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((other instanceof cljs.core.PersistentVector)){
if((self__.cnt === cljs.core.count(other))){
var me_iter = cljs.core._iterator(coll__$1);
var you_iter = cljs.core._iterator(other);
while(true){
if(cljs.core.truth_(me_iter.hasNext())){
var x = me_iter.next();
var y = you_iter.next();
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
continue;
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_sequential(coll__$1,other);
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientVector(self__.cnt,self__.shift,(function (){var G__10915 = self__.root;
return (cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__10915) : cljs.core.tv_editable_root.call(null,G__10915));
})(),(function (){var G__10916 = self__.tail;
return (cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__10916) : cljs.core.tv_editable_tail.call(null,G__10916));
})()));
});

cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (v,f){
var self__ = this;
var v__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1,f);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__10917 = init__$2;
var G__10918 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10917,G__10918) : f.call(null,G__10917,G__10918));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__10928 = (j + (1));
var G__10929 = init__$3;
j = G__10928;
init__$2 = G__10929;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__10919 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10919) : cljs.core.deref.call(null,G__10919));
} else {
var G__10930 = (i + len);
var G__10931 = init__$2;
i = G__10930;
init__$1 = G__10931;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._assoc_n(coll__$1,k,v);
} else {
throw (new Error("Vector's key for assoc must be a number."));
}
});

cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
return null;
} else {
if((self__.cnt <= (32))){
return (new cljs.core.IndexedSeq(self__.tail,(0)));
} else {
var G__10920 = coll__$1;
var G__10921 = cljs.core.first_array_for_longvec(coll__$1);
var G__10922 = (0);
var G__10923 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__10920,G__10921,G__10922,G__10923) : cljs.core.chunked_seq.call(null,G__10920,G__10921,G__10922,G__10923));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentVector(meta__$1,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(((self__.cnt - cljs.core.tail_off(coll__$1)) < (32))){
var len = self__.tail.length;
var new_tail = (new Array((len + (1))));
var n__5607__auto___10932 = len;
var i_10933 = (0);
while(true){
if((i_10933 < n__5607__auto___10932)){
(new_tail[i_10933] = (self__.tail[i_10933]));

var G__10934 = (i_10933 + (1));
i_10933 = G__10934;
continue;
} else {
}
break;
}

(new_tail[len] = o);

return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),self__.shift,self__.root,new_tail,null));
} else {
var root_overflow_QMARK_ = ((self__.cnt >>> (5)) > ((1) << self__.shift));
var new_shift = ((root_overflow_QMARK_)?(self__.shift + (5)):self__.shift);
var new_root = ((root_overflow_QMARK_)?(function (){var n_r = cljs.core.pv_fresh_node(null);
cljs.core.pv_aset(n_r,(0),self__.root);

cljs.core.pv_aset(n_r,(1),cljs.core.new_path(null,self__.shift,(new cljs.core.VectorNode(null,self__.tail))));

return n_r;
})():cljs.core.push_tail(coll__$1,self__.shift,self__.root,(new cljs.core.VectorNode(null,self__.tail))));
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),new_shift,new_root,[o],null));
}
});

cljs.core.PersistentVector.prototype.call = (function() {
var G__10935 = null;
var G__10935__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__10935__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__10935 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__10935__2.call(this,self__,k);
case 3:
return G__10935__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10935.cljs$core$IFn$_invoke$arity$2 = G__10935__2;
G__10935.cljs$core$IFn$_invoke$arity$3 = G__10935__3;
return G__10935;
})()
;

cljs.core.PersistentVector.prototype.apply = (function (self__,args10910){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10910)));
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.PersistentVector.cljs$lang$type = true;

cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";

cljs.core.PersistentVector.cljs$lang$ctorPrWriter = (function (this__5307__auto__,writer__5308__auto__,opt__5309__auto__){
return cljs.core._write(writer__5308__auto__,"cljs.core/PersistentVector");
});

cljs.core.__GT_PersistentVector = (function __GT_PersistentVector(meta,cnt,shift,root,tail,__hash){
return (new cljs.core.PersistentVector(meta,cnt,shift,root,tail,__hash));
});

cljs.core.PersistentVector.EMPTY_NODE = (new cljs.core.VectorNode(null,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
cljs.core.PersistentVector.EMPTY = (new cljs.core.PersistentVector(null,(0),(5),cljs.core.PersistentVector.EMPTY_NODE,[],cljs.core.empty_ordered_hash));
cljs.core.PersistentVector.fromArray = (function (xs,no_clone){
var l = xs.length;
var xs__$1 = ((no_clone)?xs:cljs.core.aclone(xs));
if((l < (32))){
return (new cljs.core.PersistentVector(null,l,(5),cljs.core.PersistentVector.EMPTY_NODE,xs__$1,null));
} else {
var node = xs__$1.slice((0),(32));
var v = (new cljs.core.PersistentVector(null,(32),(5),cljs.core.PersistentVector.EMPTY_NODE,node,null));
var i = (32);
var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
while(true){
if((i < l)){
var G__10936 = (i + (1));
var G__10937 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out,(xs__$1[i]));
i = G__10936;
out = G__10937;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5698__auto__ = this;
return cljs.core.es6_iterator(this__5698__auto__);
}));
cljs.core.vec = (function vec(coll){
if(coll instanceof Array){
return cljs.core.PersistentVector.fromArray(coll,true);
} else {
return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core._as_transient(cljs.core.PersistentVector.EMPTY),coll));
}
});
/**
* @param {...*} var_args
*/
cljs.core.vector = (function() { 
var vector__delegate = function (args){
if(((args instanceof cljs.core.IndexedSeq)) && ((args.i === (0)))){
return cljs.core.PersistentVector.fromArray(args.arr,true);
} else {
return cljs.core.vec(args);
}
};
var vector = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__10938__i = 0, G__10938__a = new Array(arguments.length -  0);
while (G__10938__i < G__10938__a.length) {G__10938__a[G__10938__i] = arguments[G__10938__i + 0]; ++G__10938__i;}
  args = new cljs.core.IndexedSeq(G__10938__a,0);
} 
return vector__delegate.call(this,args);};
vector.cljs$lang$maxFixedArity = 0;
vector.cljs$lang$applyTo = (function (arglist__10939){
var args = cljs.core.seq(arglist__10939);
return vector__delegate(args);
});
vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
return vector;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedSeq = (function (vec,node,i,off,meta,__hash){
this.vec = vec;
this.node = node;
this.i = i;
this.off = off;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375020;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__10940 = self__.vec;
var G__10941 = self__.node;
var G__10942 = self__.i;
var G__10943 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__10940,G__10941,G__10942,G__10943) : cljs.core.chunked_seq.call(null,G__10940,G__10941,G__10942,G__10943));
})();
if((s == null)){
return null;
} else {
return s;
}
} else {
return cljs.core._chunked_next(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__5141__auto__ = self__.__hash;
if(!((h__5141__auto__ == null))){
return h__5141__auto__;
} else {
var h__5141__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__5141__auto____$1;

return h__5141__auto____$1;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2((function (){var G__10944 = self__.vec;
var G__10945 = (self__.i + self__.off);
var G__10946 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__10944,G__10945,G__10946) : cljs.core.subvec.call(null,G__10944,G__10945,G__10946));
})(),f);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3((function (){var G__10947 = self__.vec;
var G__10948 = (self__.i + self__.off);
var G__10949 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__10947,G__10948,G__10949) : cljs.core.subvec.call(null,G__10947,G__10948,G__10949));
})(),f,start);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.node[self__.off]);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__10950 = self__.vec;
var G__10951 = self__.node;
var G__10952 = self__.i;
var G__10953 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__10950,G__10951,G__10952,G__10953) : cljs.core.chunked_seq.call(null,G__10950,G__10951,G__10952,G__10953));
})();
if((s == null)){
return cljs.core.List.EMPTY;
} else {
return s;
}
} else {
return cljs.core._chunked_rest(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node,self__.off);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__10954 = self__.vec;
var G__10955 = cljs.core.unchecked_array_for(self__.vec,end);
var G__10956 = end;
var G__10957 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__10954,G__10955,G__10956,G__10957) : cljs.core.chunked_seq.call(null,G__10954,G__10955,G__10956,G__10957));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
var G__10958 = self__.vec;
var G__10959 = self__.node;
var G__10960 = self__.i;
var G__10961 = self__.off;
var G__10962 = m;
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__10958,G__10959,G__10960,G__10961,G__10962) : cljs.core.chunked_seq.call(null,G__10958,G__10959,G__10960,G__10961,G__10962));
});

cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__10963 = self__.vec;
var G__10964 = cljs.core.unchecked_array_for(self__.vec,end);
var G__10965 = end;
var G__10966 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__10963,G__10964,G__10965,G__10966) : cljs.core.chunked_seq.call(null,G__10963,G__10964,G__10965,G__10966));
} else {
return null;
}
});

cljs.core.ChunkedSeq.cljs$lang$type = true;

cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";

cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = (function (this__5307__auto__,writer__5308__auto__,opt__5309__auto__){
return cljs.core._write(writer__5308__auto__,"cljs.core/ChunkedSeq");
});

cljs.core.__GT_ChunkedSeq = (function __GT_ChunkedSeq(vec,node,i,off,meta,__hash){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,__hash));
});

(cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5698__auto__ = this;
return cljs.core.es6_iterator(this__5698__auto__);
}));
cljs.core.chunked_seq = (function() {
var chunked_seq = null;
var chunked_seq__3 = (function (vec,i,off){
return (new cljs.core.ChunkedSeq(vec,cljs.core.array_for(vec,i),i,off,null,null));
});
var chunked_seq__4 = (function (vec,node,i,off){
return (new cljs.core.ChunkedSeq(vec,node,i,off,null,null));
});
var chunked_seq__5 = (function (vec,node,i,off,meta){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,null));
});
chunked_seq = function(vec,node,i,off,meta){
switch(arguments.length){
case 3:
return chunked_seq__3.call(this,vec,node,i);
case 4:
return chunked_seq__4.call(this,vec,node,i,off);
case 5:
return chunked_seq__5.call(this,vec,node,i,off,meta);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
return chunked_seq;
})()
;

/**
* @constructor
*/
cljs.core.Subvec = (function (meta,v,start,end,__hash){
this.meta = meta;
this.v = v;
this.start = start;
this.end = end;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 166617887;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Subvec.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Subvec.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return cljs.core.vector_index_out_of_bounds(n,(self__.end - self__.start));
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.start + n));
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return not_found;
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v,(self__.start + n),not_found);
}
});

cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
var v_pos = (self__.start + n);
var G__10968 = self__.meta;
var G__10969 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v,v_pos,val);
var G__10970 = self__.start;
var G__10971 = (function (){var x__5037__auto__ = self__.end;
var y__5038__auto__ = (v_pos + (1));
return ((x__5037__auto__ > y__5038__auto__) ? x__5037__auto__ : y__5038__auto__);
})();
var G__10972 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__10968,G__10969,G__10970,G__10971,G__10972) : cljs.core.build_subvec.call(null,G__10968,G__10969,G__10970,G__10971,G__10972));
});

cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Subvec(self__.meta,self__.v,self__.start,self__.end,self__.__hash));
});

cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.end - self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.end - (1)));
});

cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.start === self__.end)){
throw (new Error("Can't pop empty vector"));
} else {
var G__10973 = self__.meta;
var G__10974 = self__.v;
var G__10975 = self__.start;
var G__10976 = (self__.end - (1));
var G__10977 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__10973,G__10974,G__10975,G__10976,G__10977) : cljs.core.build_subvec.call(null,G__10973,G__10974,G__10975,G__10976,G__10977));
}
});

cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(!((self__.start === self__.end))){
return (new cljs.core.RSeq(coll__$1,((self__.end - self__.start) - (1)),null));
} else {
return null;
}
});

cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__5141__auto__ = self__.__hash;
if(!((h__5141__auto__ == null))){
return h__5141__auto__;
} else {
var h__5141__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__5141__auto____$1;

return h__5141__auto____$1;
}
});

cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1,f);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start__$1){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1,f,start__$1);
});

cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,key,val){
var self__ = this;
var coll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n(coll__$1,key,val);
} else {
throw (new Error("Subvec's key for assoc must be a number."));
}
});

cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var subvec_seq = ((function (coll__$1){
return (function subvec_seq(i){
if((i === self__.end)){
return null;
} else {
return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,i),(new cljs.core.LazySeq(null,((function (coll__$1){
return (function (){
return subvec_seq((i + (1)));
});})(coll__$1))
,null,null)));
}
});})(coll__$1))
;
return subvec_seq(self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
var G__10979 = meta__$1;
var G__10980 = self__.v;
var G__10981 = self__.start;
var G__10982 = self__.end;
var G__10983 = self__.__hash;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__10979,G__10980,G__10981,G__10982,G__10983) : cljs.core.build_subvec.call(null,G__10979,G__10980,G__10981,G__10982,G__10983));
});

cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__10984 = self__.meta;
var G__10985 = cljs.core._assoc_n(self__.v,self__.end,o);
var G__10986 = self__.start;
var G__10987 = (self__.end + (1));
var G__10988 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__10984,G__10985,G__10986,G__10987,G__10988) : cljs.core.build_subvec.call(null,G__10984,G__10985,G__10986,G__10987,G__10988));
});

cljs.core.Subvec.prototype.call = (function() {
var G__10989 = null;
var G__10989__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__10989__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__10989 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__10989__2.call(this,self__,k);
case 3:
return G__10989__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10989.cljs$core$IFn$_invoke$arity$2 = G__10989__2;
G__10989.cljs$core$IFn$_invoke$arity$3 = G__10989__3;
return G__10989;
})()
;

cljs.core.Subvec.prototype.apply = (function (self__,args10967){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10967)));
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.Subvec.cljs$lang$type = true;

cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";

cljs.core.Subvec.cljs$lang$ctorPrWriter = (function (this__5307__auto__,writer__5308__auto__,opt__5309__auto__){
return cljs.core._write(writer__5308__auto__,"cljs.core/Subvec");
});

cljs.core.__GT_Subvec = (function __GT_Subvec(meta,v,start,end,__hash){
return (new cljs.core.Subvec(meta,v,start,end,__hash));
});

(cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5698__auto__ = this;
return cljs.core.es6_iterator(this__5698__auto__);
}));
cljs.core.build_subvec = (function build_subvec(meta,v,start,end,__hash){
while(true){
if((v instanceof cljs.core.Subvec)){
var G__10990 = meta;
var G__10991 = v.v;
var G__10992 = (v.start + start);
var G__10993 = (v.start + end);
var G__10994 = __hash;
meta = G__10990;
v = G__10991;
start = G__10992;
end = G__10993;
__hash = G__10994;
continue;
} else {
var c = cljs.core.count(v);
if(((start < (0))) || ((end < (0))) || ((start > c)) || ((end > c))){
throw (new Error("Index out of bounds"));
} else {
}

return (new cljs.core.Subvec(meta,v,start,end,__hash));
}
break;
}
});
/**
* Returns a persistent vector of the items in vector from
* start (inclusive) to end (exclusive).  If end is not supplied,
* defaults to (count vector). This operation is O(1) and very fast, as
* the resulting vector shares structure with the original and no
* trimming is done.
*/
cljs.core.subvec = (function() {
var subvec = null;
var subvec__2 = (function (v,start){
return subvec.cljs$core$IFn$_invoke$arity$3(v,start,cljs.core.count(v));
});
var subvec__3 = (function (v,start,end){
return cljs.core.build_subvec(null,v,start,end,null);
});
subvec = function(v,start,end){
switch(arguments.length){
case 2:
return subvec__2.call(this,v,start);
case 3:
return subvec__3.call(this,v,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
return subvec;
})()
;
cljs.core.tv_ensure_editable = (function tv_ensure_editable(edit,node){
if((edit === node.edit)){
return node;
} else {
return (new cljs.core.VectorNode(edit,cljs.core.aclone(node.arr)));
}
});
cljs.core.tv_editable_root = (function tv_editable_root(node){
return (new cljs.core.VectorNode((function (){var obj11001 = {};
return obj11001;
})(),cljs.core.aclone(node.arr)));
});
cljs.core.tv_editable_tail = (function tv_editable_tail(tl){
var ret = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
cljs.core.array_copy(tl,(0),ret,(0),tl.length);

return ret;
});
cljs.core.tv_push_tail = (function tv_push_tail(tv,level,parent,tail_node){
var ret = cljs.core.tv_ensure_editable(tv.root.edit,parent);
var subidx = (((tv.cnt - (1)) >>> level) & (31));
cljs.core.pv_aset(ret,subidx,(((level === (5)))?tail_node:(function (){var child = cljs.core.pv_aget(ret,subidx);
if(!((child == null))){
return tv_push_tail(tv,(level - (5)),child,tail_node);
} else {
return cljs.core.new_path(tv.root.edit,(level - (5)),tail_node);
}
})()));

return ret;
});
cljs.core.tv_pop_tail = (function tv_pop_tail(tv,level,node){
var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit,node);
var subidx = (((tv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = tv_pop_tail(tv,(level - (5)),cljs.core.pv_aget(node__$1,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,new_child);

return node__$1;
}
} else {
if((subidx === (0))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,null);

return node__$1;

}
}
});
cljs.core.unchecked_editable_array_for = (function unchecked_editable_array_for(tv,i){
if((i >= cljs.core.tail_off(tv))){
return tv.tail;
} else {
var root = tv.root;
var node = root;
var level = tv.shift;
while(true){
if((level > (0))){
var G__11009 = cljs.core.tv_ensure_editable(root.edit,cljs.core.pv_aget(node,((i >>> level) & (31))));
var G__11010 = (level - (5));
node = G__11009;
level = G__11010;
continue;
} else {
return node.arr;
}
break;
}
}
});

/**
* @constructor
*/
cljs.core.TransientVector = (function (cnt,shift,root,tail){
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.cljs$lang$protocol_mask$partition0$ = 275;
this.cljs$lang$protocol_mask$partition1$ = 88;
})
cljs.core.TransientVector.prototype.call = (function() {
var G__11014 = null;
var G__11014__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__11014__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__11014 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__11014__2.call(this,self__,k);
case 3:
return G__11014__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11014.cljs$core$IFn$_invoke$arity$2 = G__11014__2;
G__11014.cljs$core$IFn$_invoke$arity$3 = G__11014__3;
return G__11014;
})()
;

cljs.core.TransientVector.prototype.apply = (function (self__,args11011){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args11011)));
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
} else {
throw (new Error("nth after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,n);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return self__.cnt;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = (function (tcoll,n,val){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(tcoll__$1) <= n)){
(self__.tail[(n & (31))] = val);

return tcoll__$1;
} else {
var new_root = ((function (tcoll__$1){
return (function go(level,node){
var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit,node);
if((level === (0))){
cljs.core.pv_aset(node__$1,(n & (31)),val);

return node__$1;
} else {
var subidx = ((n >>> level) & (31));
cljs.core.pv_aset(node__$1,subidx,go((level - (5)),cljs.core.pv_aget(node__$1,subidx)));

return node__$1;
}
});})(tcoll__$1))
.call(null,self__.shift,self__.root);
self__.root = new_root;

return tcoll__$1;
}
} else {
if((n === self__.cnt)){
return cljs.core._conj_BANG_(tcoll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds for TransientVector of length"),cljs.core.str(self__.cnt)].join('')));

}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
self__.cnt = (0);

return tcoll__$1;
} else {
if((((self__.cnt - (1)) & (31)) > (0))){
self__.cnt = (self__.cnt - (1));

return tcoll__$1;
} else {
var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1,(self__.cnt - (2)));
var new_root = (function (){var nr = cljs.core.tv_pop_tail(tcoll__$1,self__.shift,self__.root);
if(!((nr == null))){
return nr;
} else {
return (new cljs.core.VectorNode(self__.root.edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
}
})();
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit,cljs.core.pv_aget(new_root,(0)));
self__.root = new_root__$1;

self__.shift = (self__.shift - (5));

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
} else {
self__.root = new_root;

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
}

}
}
}
} else {
throw (new Error("pop! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n_BANG_(tcoll__$1,key,val);
} else {
throw (new Error("TransientVector's key for assoc! must be a number."));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if(((self__.cnt - cljs.core.tail_off(tcoll__$1)) < (32))){
(self__.tail[(self__.cnt & (31))] = o);

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var tail_node = (new cljs.core.VectorNode(self__.root.edit,self__.tail));
var new_tail = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
(new_tail[(0)] = o);

self__.tail = new_tail;

if(((self__.cnt >>> (5)) > ((1) << self__.shift))){
var new_root_array = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var new_shift = (self__.shift + (5));
(new_root_array[(0)] = self__.root);

(new_root_array[(1)] = cljs.core.new_path(self__.root.edit,self__.shift,tail_node));

self__.root = (new cljs.core.VectorNode(self__.root.edit,new_root_array));

self__.shift = new_shift;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var new_root = cljs.core.tv_push_tail(tcoll__$1,self__.shift,self__.root,tail_node);
self__.root = new_root;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
self__.root.edit = null;

var len = (self__.cnt - cljs.core.tail_off(tcoll__$1));
var trimmed_tail = (new Array(len));
cljs.core.array_copy(self__.tail,(0),trimmed_tail,(0),len);

return (new cljs.core.PersistentVector(null,self__.cnt,self__.shift,self__.root,trimmed_tail,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientVector.cljs$lang$type = true;

cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";

cljs.core.TransientVector.cljs$lang$ctorPrWriter = (function (this__5307__auto__,writer__5308__auto__,opt__5309__auto__){
return cljs.core._write(writer__5308__auto__,"cljs.core/TransientVector");
});

cljs.core.__GT_TransientVector = (function __GT_TransientVector(cnt,shift,root,tail){
return (new cljs.core.TransientVector(cnt,shift,root,tail));
});


/**
* @constructor
*/
cljs.core.PersistentQueueSeq = (function (meta,front,rear,__hash){
this.meta = meta;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31850572;
})
cljs.core.PersistentQueueSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueueSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__5141__auto__ = self__.__hash;
if(!((h__5141__auto__ == null))){
return h__5141__auto__;
} else {
var h__5141__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__5141__auto____$1;

return h__5141__auto____$1;
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueueSeq(self__.meta,f1,self__.rear,null));
} else {
if((self__.rear == null)){
return cljs.core._empty(coll__$1);
} else {
return (new cljs.core.PersistentQueueSeq(self__.meta,self__.rear,null,null));
}
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueueSeq(meta__$1,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentQueueSeq.cljs$lang$type = true;

cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";

cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = (function (this__5307__auto__,writer__5308__auto__,opt__5309__auto__){
return cljs.core._write(writer__5308__auto__,"cljs.core/PersistentQueueSeq");
});

cljs.core.__GT_PersistentQueueSeq = (function __GT_PersistentQueueSeq(meta,front,rear,__hash){
return (new cljs.core.PersistentQueueSeq(meta,front,rear,__hash));
});

(cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5698__auto__ = this;
return cljs.core.es6_iterator(this__5698__auto__);
}));

/**
* @constructor
*/
cljs.core.PersistentQueue = (function (meta,count,front,rear,__hash){
this.meta = meta;
this.count = count;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31858766;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentQueue.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueue.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(self__.meta,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),f1,self__.rear,null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),cljs.core.seq(self__.rear),cljs.core.PersistentVector.EMPTY,null));
}
} else {
return coll__$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__5141__auto__ = self__.__hash;
if(!((h__5141__auto__ == null))){
return h__5141__auto__;
} else {
var h__5141__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__5141__auto____$1;

return h__5141__auto____$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY,self__.meta);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.rest(cljs.core.seq(coll__$1));
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var rear__$1 = cljs.core.seq(self__.rear);
if(cljs.core.truth_((function (){var or__4720__auto__ = self__.front;
if(cljs.core.truth_(or__4720__auto__)){
return or__4720__auto__;
} else {
return rear__$1;
}
})())){
return (new cljs.core.PersistentQueueSeq(null,self__.front,cljs.core.seq(rear__$1),null));
} else {
return null;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(meta__$1,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),self__.front,cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__4720__auto__ = self__.rear;
if(cljs.core.truth_(or__4720__auto__)){
return or__4720__auto__;
} else {
return cljs.core.PersistentVector.EMPTY;
}
})(),o),null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front,o),cljs.core.PersistentVector.EMPTY,null));
}
});

cljs.core.PersistentQueue.cljs$lang$type = true;

cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";

cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = (function (this__5307__auto__,writer__5308__auto__,opt__5309__auto__){
return cljs.core._write(writer__5308__auto__,"cljs.core/PersistentQueue");
});

cljs.core.__GT_PersistentQueue = (function __GT_PersistentQueue(meta,count,front,rear,__hash){
return (new cljs.core.PersistentQueue(meta,count,front,rear,__hash));
});

cljs.core.PersistentQueue.EMPTY = (new cljs.core.PersistentQueue(null,(0),null,cljs.core.PersistentVector.EMPTY,cljs.core.empty_ordered_hash));
(cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5698__auto__ = this;
return cljs.core.es6_iterator(this__5698__auto__);
}));

/**
* @constructor
*/
cljs.core.NeverEquiv = (function (){
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2097152;
})
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return false;
});

cljs.core.NeverEquiv.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NeverEquiv.cljs$lang$type = true;

cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";

cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = (function (this__5307__auto__,writer__5308__auto__,opt__5309__auto__){
return cljs.core._write(writer__5308__auto__,"cljs.core/NeverEquiv");
});

cljs.core.__GT_NeverEquiv = (function __GT_NeverEquiv(){
return (new cljs.core.NeverEquiv());
});

cljs.core.never_equiv = (new cljs.core.NeverEquiv());
/**
* Assumes y is a map. Returns true if x equals y, otherwise returns
* false.
*/
cljs.core.equiv_map = (function equiv_map(x,y){
return cljs.core.boolean$(((cljs.core.map_QMARK_(y))?(((cljs.core.count(x) === cljs.core.count(y)))?cljs.core.every_QMARK_(cljs.core.identity,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (xkv){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y,cljs.core.first(xkv),cljs.core.never_equiv),cljs.core.second(xkv));
}),x)):null):null));
});
cljs.core.scan_array = (function scan_array(incr,k,array){
var len = array.length;
var i = (0);
while(true){
if((i < len)){
if((k === (array[i]))){
return i;
} else {
var G__11015 = (i + incr);
i = G__11015;
continue;
}
} else {
return null;
}
break;
}
});
cljs.core.obj_map_compare_keys = (function obj_map_compare_keys(a,b){
var a__$1 = cljs.core.hash(a);
var b__$1 = cljs.core.hash(b);
if((a__$1 < b__$1)){
return (-1);
} else {
if((a__$1 > b__$1)){
return (1);
} else {
return (0);

}
}
});
cljs.core.obj_map__GT_hash_map = (function obj_map__GT_hash_map(m,k,v){
var ks = m.keys;
var len = ks.length;
var so = m.strobj;
var mm = cljs.core.meta(m);
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var k__$1 = (ks[i]);
var G__11016 = (i + (1));
var G__11017 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k__$1,(so[k__$1]));
i = G__11016;
out = G__11017;
continue;
} else {
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k,v)),mm);
}
break;
}
});
cljs.core.obj_clone = (function obj_clone(obj,ks){
var new_obj = (function (){var obj11021 = {};
return obj11021;
})();
var l = ks.length;
var i_11022 = (0);
while(true){
if((i_11022 < l)){
var k_11023 = (ks[i_11022]);
(new_obj[k_11023] = (obj[k_11023]));

var G__11024 = (i_11022 + (1));
i_11022 = G__11024;
continue;
} else {
}
break;
}

return new_obj;
});

/**
* @constructor
*/
cljs.core.ObjMap = (function (meta,keys,strobj,update_count,__hash){
this.meta = meta;
this.keys = keys;
this.strobj = strobj;
this.update_count = update_count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 4;
})
cljs.core.ObjMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ObjMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__4708__auto__ = (function (){var G__11028 = k;
return goog.isString(G__11028);
})();
if(cljs.core.truth_(and__4708__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__4708__auto__;
}
})())){
return (self__.strobj[k]);
} else {
return not_found;
}
});

cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.keys.length;
var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
var init__$1 = init;
while(true){
if(cljs.core.seq(keys__$1)){
var k = cljs.core.first(keys__$1);
var init__$2 = (function (){var G__11029 = init__$1;
var G__11030 = k;
var G__11031 = (self__.strobj[k]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__11029,G__11030,G__11031) : f.call(null,G__11029,G__11030,G__11031));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__11032 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11032) : cljs.core.deref.call(null,G__11032));
} else {
var G__11038 = cljs.core.rest(keys__$1);
var G__11039 = init__$2;
keys__$1 = G__11038;
init__$1 = G__11039;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.keys.length;
});

cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__5141__auto__ = self__.__hash;
if(!((h__5141__auto__ == null))){
return h__5141__auto__;
} else {
var h__5141__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__5141__auto____$1;

return h__5141__auto____$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1));
});

cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.ObjMap.EMPTY,self__.meta);
});

cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__4708__auto__ = (function (){var G__11034 = k;
return goog.isString(G__11034);
})();
if(cljs.core.truth_(and__4708__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__4708__auto__;
}
})())){
var new_keys = cljs.core.aclone(self__.keys);
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
new_keys.splice(cljs.core.scan_array((1),k,new_keys),(1));

delete new_strobj[k];

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
} else {
return coll__$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var G__11035 = k;
return goog.isString(G__11035);
})())){
if(((self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD)) || ((self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD))){
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
} else {
if(!((cljs.core.scan_array((1),k,self__.keys) == null))){
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
(new_strobj[k] = v);

return (new cljs.core.ObjMap(self__.meta,self__.keys,new_strobj,(self__.update_count + (1)),null));
} else {
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
var new_keys = cljs.core.aclone(self__.keys);
(new_strobj[k] = v);

new_keys.push(k);

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
}
}
} else {
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__4708__auto__ = (function (){var G__11037 = k;
return goog.isString(G__11037);
})();
if(cljs.core.truth_(and__4708__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__4708__auto__;
}
})())){
return true;
} else {
return false;
}
});

cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.keys.length > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (coll__$1){
return (function (p1__11025_SHARP_){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__11025_SHARP_,(self__.strobj[p1__11025_SHARP_])],null));
});})(coll__$1))
,self__.keys.sort(cljs.core.obj_map_compare_keys));
} else {
return null;
}
});

cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ObjMap(meta__$1,self__.keys,self__.strobj,self__.update_count,self__.__hash));
});

cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,coll__$1,entry);
}
});

cljs.core.ObjMap.prototype.call = (function() {
var G__11040 = null;
var G__11040__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__11040__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__11040 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__11040__2.call(this,self__,k);
case 3:
return G__11040__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11040.cljs$core$IFn$_invoke$arity$2 = G__11040__2;
G__11040.cljs$core$IFn$_invoke$arity$3 = G__11040__3;
return G__11040;
})()
;

cljs.core.ObjMap.prototype.apply = (function (self__,args11026){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args11026)));
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.ObjMap.cljs$lang$type = true;

cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";

cljs.core.ObjMap.cljs$lang$ctorPrWriter = (function (this__5307__auto__,writer__5308__auto__,opt__5309__auto__){
return cljs.core._write(writer__5308__auto__,"cljs.core/ObjMap");
});

cljs.core.__GT_ObjMap = (function __GT_ObjMap(meta,keys,strobj,update_count,__hash){
return (new cljs.core.ObjMap(meta,keys,strobj,update_count,__hash));
});

cljs.core.ObjMap.EMPTY = (new cljs.core.ObjMap(null,[],(function (){var obj11042 = {};
return obj11042;
})(),(0),cljs.core.empty_unordered_hash));
cljs.core.ObjMap.HASHMAP_THRESHOLD = (8);
cljs.core.ObjMap.fromObject = (function (ks,obj){
return (new cljs.core.ObjMap(null,ks,obj,(0),null));
});

/**
* @constructor
*/
cljs.core.ES6EntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6EntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var vec__11043 = cljs.core.first(self__.s);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11043,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11043,(1),null);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [k,v]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6EntriesIterator.cljs$lang$type = true;

cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";

cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = (function (this__5307__auto__,writer__5308__auto__,opt__5309__auto__){
return cljs.core._write(writer__5308__auto__,"cljs.core/ES6EntriesIterator");
});

cljs.core.__GT_ES6EntriesIterator = (function __GT_ES6EntriesIterator(s){
return (new cljs.core.ES6EntriesIterator(s));
});

cljs.core.es6_entries_iterator = (function es6_entries_iterator(coll){
return (new cljs.core.ES6EntriesIterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6SetEntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6SetEntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [x,x]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = (function (this__5307__auto__,writer__5308__auto__,opt__5309__auto__){
return cljs.core._write(writer__5308__auto__,"cljs.core/ES6SetEntriesIterator");
});

cljs.core.__GT_ES6SetEntriesIterator = (function __GT_ES6SetEntriesIterator(s){
return (new cljs.core.ES6SetEntriesIterator(s));
});

cljs.core.es6_set_entries_iterator = (function es6_set_entries_iterator(coll){
return (new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll)));
});
cljs.core.array_map_index_of_nil_QMARK_ = (function array_map_index_of_nil_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(((arr[i]) == null)){
return i;
} else {
var G__11044 = (i + (2));
i = G__11044;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_keyword_QMARK_ = (function array_map_index_of_keyword_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.fqn;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Keyword)) && ((kstr === k_SINGLEQUOTE_.fqn));
})()){
return i;
} else {
var G__11045 = (i + (2));
i = G__11045;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_symbol_QMARK_ = (function array_map_index_of_symbol_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.str;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Symbol)) && ((kstr === k_SINGLEQUOTE_.str));
})()){
return i;
} else {
var G__11046 = (i + (2));
i = G__11046;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_identical_QMARK_ = (function array_map_index_of_identical_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((k === (arr[i]))){
return i;
} else {
var G__11047 = (i + (2));
i = G__11047;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_equiv_QMARK_ = (function array_map_index_of_equiv_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(arr[i]))){
return i;
} else {
var G__11048 = (i + (2));
i = G__11048;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of = (function array_map_index_of(m,k){
var arr = m.arr;
if((k instanceof cljs.core.Keyword)){
return cljs.core.array_map_index_of_keyword_QMARK_(arr,m,k);
} else {
if(cljs.core.truth_((function (){var or__4720__auto__ = (function (){var G__11052 = k;
return goog.isString(G__11052);
})();
if(cljs.core.truth_(or__4720__auto__)){
return or__4720__auto__;
} else {
return typeof k === 'number';
}
})())){
return cljs.core.array_map_index_of_identical_QMARK_(arr,m,k);
} else {
if((k instanceof cljs.core.Symbol)){
return cljs.core.array_map_index_of_symbol_QMARK_(arr,m,k);
} else {
if((k == null)){
return cljs.core.array_map_index_of_nil_QMARK_(arr,m,k);
} else {
return cljs.core.array_map_index_of_equiv_QMARK_(arr,m,k);

}
}
}
}
});
cljs.core.array_map_extend_kv = (function array_map_extend_kv(m,k,v){
var arr = m.arr;
var l = arr.length;
var narr = (new Array((l + (2))));
var i_11053 = (0);
while(true){
if((i_11053 < l)){
(narr[i_11053] = (arr[i_11053]));

var G__11054 = (i_11053 + (1));
i_11053 = G__11054;
continue;
} else {
}
break;
}

(narr[l] = k);

(narr[(l + (1))] = v);

return narr;
});

/**
* @constructor
*/
cljs.core.PersistentArrayMapSeq = (function (arr,i,_meta){
this.arr = arr;
this.i = i;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
})
cljs.core.PersistentArrayMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return null;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return ((self__.arr.length - self__.i) / (2));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMapSeq(self__.arr,self__.i,new_meta));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = (function (this__5307__auto__,writer__5308__auto__,opt__5309__auto__){
return cljs.core._write(writer__5308__auto__,"cljs.core/PersistentArrayMapSeq");
});

cljs.core.__GT_PersistentArrayMapSeq = (function __GT_PersistentArrayMapSeq(arr,i,_meta){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
});

(cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5698__auto__ = this;
return cljs.core.es6_iterator(this__5698__auto__);
}));
cljs.core.persistent_array_map_seq = (function persistent_array_map_seq(arr,i,_meta){
if((i <= (arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
} else {
return null;
}
});


/**
* @constructor
*/
cljs.core.PersistentArrayMapIterator = (function (arr,i,cnt){
this.arr = arr;
this.i = i;
this.cnt = cnt;
})
cljs.core.PersistentArrayMapIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.cnt);
});

cljs.core.PersistentArrayMapIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
self__.i = (self__.i + (2));

return ret;
});

cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = (function (this__5307__auto__,writer__5308__auto__,opt__5309__auto__){
return cljs.core._write(writer__5308__auto__,"cljs.core/PersistentArrayMapIterator");
});

cljs.core.__GT_PersistentArrayMapIterator = (function __GT_PersistentArrayMapIterator(arr,i,cnt){
return (new cljs.core.PersistentArrayMapIterator(arr,i,cnt));
});


/**
* @constructor
*/
cljs.core.PersistentArrayMap = (function (meta,cnt,arr,__hash){
this.meta = meta;
this.cnt = cnt;
this.arr = arr;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16647951;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentArrayMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__11056 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__11056) : cljs.core.keys.call(null,G__11056));
})());
});

cljs.core.PersistentArrayMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentArrayMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__11057 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__11057) : cljs.core.vals.call(null,G__11057));
})());
});

cljs.core.PersistentArrayMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentArrayMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__11058 = cljs.core.seq(coll);
var chunk__11059 = null;
var count__11060 = (0);
var i__11061 = (0);
while(true){
if((i__11061 < count__11060)){
var vec__11062 = chunk__11059.cljs$core$IIndexed$_nth$arity$2(null,i__11061);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11062,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11062,(1),null);
var G__11063_11076 = v;
var G__11064_11077 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11063_11076,G__11064_11077) : f.call(null,G__11063_11076,G__11064_11077));

var G__11078 = seq__11058;
var G__11079 = chunk__11059;
var G__11080 = count__11060;
var G__11081 = (i__11061 + (1));
seq__11058 = G__11078;
chunk__11059 = G__11079;
count__11060 = G__11080;
i__11061 = G__11081;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__11058);
if(temp__4126__auto__){
var seq__11058__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__11058__$1)){
var c__5507__auto__ = cljs.core.chunk_first(seq__11058__$1);
var G__11082 = cljs.core.chunk_rest(seq__11058__$1);
var G__11083 = c__5507__auto__;
var G__11084 = cljs.core.count(c__5507__auto__);
var G__11085 = (0);
seq__11058 = G__11082;
chunk__11059 = G__11083;
count__11060 = G__11084;
i__11061 = G__11085;
continue;
} else {
var vec__11065 = cljs.core.first(seq__11058__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11065,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11065,(1),null);
var G__11066_11086 = v;
var G__11067_11087 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11066_11086,G__11067_11087) : f.call(null,G__11066_11086,G__11067_11087));

var G__11088 = cljs.core.next(seq__11058__$1);
var G__11089 = null;
var G__11090 = (0);
var G__11091 = (0);
seq__11058 = G__11088;
chunk__11059 = G__11089;
count__11060 = G__11090;
i__11061 = G__11091;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var G__11068 = init__$1;
var G__11069 = (self__.arr[i]);
var G__11070 = (self__.arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__11068,G__11069,G__11070) : f.call(null,G__11068,G__11069,G__11070));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__11071 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11071) : cljs.core.deref.call(null,G__11071));
} else {
var G__11092 = (i + (2));
var G__11093 = init__$2;
i = G__11092;
init__$1 = G__11093;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.PersistentArrayMapIterator(self__.arr,(0),(self__.cnt * (2))));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__5141__auto__ = self__.__hash;
if(!((h__5141__auto__ == null))){
return h__5141__auto__;
} else {
var h__5141__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__5141__auto____$1;

return h__5141__auto____$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((function (){var G__11072 = other;
if(G__11072){
var bit__5394__auto__ = (G__11072.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__5394__auto__) || (G__11072.cljs$core$IMap$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
var alen = self__.arr.length;
var other__$1 = other;
if((self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null))){
var i = (0);
while(true){
if((i < alen)){
var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null,(self__.arr[i]),cljs.core.lookup_sentinel);
if(!((v === cljs.core.lookup_sentinel))){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[(i + (1))]),v)){
var G__11094 = (i + (2));
i = G__11094;
continue;
} else {
return false;
}
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_map(coll__$1,other);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientArrayMap((function (){var obj11074 = {};
return obj11074;
})(),self__.arr.length,cljs.core.aclone(self__.arr)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY,self__.meta);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx >= (0))){
var len = self__.arr.length;
var new_len = (len - (2));
if((new_len === (0))){
return cljs.core._empty(coll__$1);
} else {
var new_arr = (new Array(new_len));
var s = (0);
var d = (0);
while(true){
if((s >= len)){
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt - (1)),new_arr,null));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(self__.arr[s]))){
var G__11095 = (s + (2));
var G__11096 = d;
s = G__11095;
d = G__11096;
continue;
} else {
(new_arr[d] = (self__.arr[s]));

(new_arr[(d + (1))] = (self__.arr[(s + (1))]));

var G__11097 = (s + (2));
var G__11098 = (d + (2));
s = G__11097;
d = G__11098;
continue;

}
}
break;
}
}
} else {
return coll__$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
if((self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr__$1 = cljs.core.array_map_extend_kv(coll__$1,k,v);
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt + (1)),arr__$1,null));
} else {
return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1),k,v),self__.meta);
}
} else {
if((v === (self__.arr[(idx + (1))]))){
return coll__$1;
} else {
var arr__$1 = (function (){var G__11075 = cljs.core.aclone(self__.arr);
(G__11075[(idx + (1))] = v);

return G__11075;
})();
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,arr__$1,null));

}
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((cljs.core.array_map_index_of(coll__$1,k) === (-1)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.persistent_array_map_seq(self__.arr,(0),null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMap(meta__$1,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__11099 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__11100 = cljs.core.next(es);
ret = G__11099;
es = G__11100;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentArrayMap.prototype.call = (function() {
var G__11101 = null;
var G__11101__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__11101__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__11101 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__11101__2.call(this,self__,k);
case 3:
return G__11101__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11101.cljs$core$IFn$_invoke$arity$2 = G__11101__2;
G__11101.cljs$core$IFn$_invoke$arity$3 = G__11101__3;
return G__11101;
})()
;

cljs.core.PersistentArrayMap.prototype.apply = (function (self__,args11055){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args11055)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.cljs$lang$type = true;

cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";

cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = (function (this__5307__auto__,writer__5308__auto__,opt__5309__auto__){
return cljs.core._write(writer__5308__auto__,"cljs.core/PersistentArrayMap");
});

cljs.core.__GT_PersistentArrayMap = (function __GT_PersistentArrayMap(meta,cnt,arr,__hash){
return (new cljs.core.PersistentArrayMap(meta,cnt,arr,__hash));
});

cljs.core.PersistentArrayMap.EMPTY = (new cljs.core.PersistentArrayMap(null,(0),[],cljs.core.empty_unordered_hash));
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = (8);
cljs.core.PersistentArrayMap.fromArray = (function (arr,no_clone,no_check){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
if(no_check){
var cnt = (arr__$1.length / (2));
return (new cljs.core.PersistentArrayMap(null,cnt,arr__$1,null));
} else {
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__11102 = (i + (2));
var G__11103 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__11102;
ret = G__11103;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
}
});
(cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5698__auto__ = this;
return cljs.core.es6_iterator(this__5698__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientArrayMap = (function (editable_QMARK_,len,arr){
this.editable_QMARK_ = editable_QMARK_;
this.len = len;
this.arr = arr;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx >= (0))){
(self__.arr[idx] = (self__.arr[(self__.len - (2))]));

(self__.arr[(idx + (1))] = (self__.arr[(self__.len - (1))]));

var G__11104_11112 = self__.arr;
G__11104_11112.pop();

G__11104_11112.pop();


self__.len = (self__.len - (2));
} else {
}

return tcoll__$1;
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx === (-1))){
if(((self__.len + (2)) <= ((2) * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD))){
self__.len = (self__.len + (2));

self__.arr.push(key);

self__.arr.push(val);

return tcoll__$1;
} else {
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3((function (){var G__11105 = self__.len;
var G__11106 = self__.arr;
return (cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__11105,G__11106) : cljs.core.array__GT_transient_hash_map.call(null,G__11105,G__11106));
})(),key,val);
}
} else {
if((val === (self__.arr[(idx + (1))]))){
return tcoll__$1;
} else {
(self__.arr[(idx + (1))] = val);

return tcoll__$1;
}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
if((function (){var G__11107 = o;
if(G__11107){
var bit__5401__auto__ = (G__11107.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__5401__auto__) || (G__11107.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__11107.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__11107);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__11107);
}
})()){
return cljs.core._assoc_BANG_(tcoll__$1,(function (){var G__11108 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__11108) : cljs.core.key.call(null,G__11108));
})(),(function (){var G__11109 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__11109) : cljs.core.val.call(null,G__11109));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$2 = tcoll__$1;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__11113 = cljs.core.next(es);
var G__11114 = cljs.core._assoc_BANG_(tcoll__$2,(function (){var G__11110 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__11110) : cljs.core.key.call(null,G__11110));
})(),(function (){var G__11111 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__11111) : cljs.core.val.call(null,G__11111));
})());
es = G__11113;
tcoll__$2 = G__11114;
continue;
} else {
return tcoll__$2;
}
break;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
self__.editable_QMARK_ = false;

return (new cljs.core.PersistentArrayMap(null,cljs.core.quot(self__.len,(2)),self__.arr,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,k,null);
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
} else {
throw (new Error("lookup after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
return cljs.core.quot(self__.len,(2));
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientArrayMap.cljs$lang$type = true;

cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";

cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = (function (this__5307__auto__,writer__5308__auto__,opt__5309__auto__){
return cljs.core._write(writer__5308__auto__,"cljs.core/TransientArrayMap");
});

cljs.core.__GT_TransientArrayMap = (function __GT_TransientArrayMap(editable_QMARK_,len,arr){
return (new cljs.core.TransientArrayMap(editable_QMARK_,len,arr));
});


cljs.core.array__GT_transient_hash_map = (function array__GT_transient_hash_map(len,arr){
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
var i = (0);
while(true){
if((i < len)){
var G__11115 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,(arr[i]),(arr[(i + (1))]));
var G__11116 = (i + (2));
out = G__11115;
i = G__11116;
continue;
} else {
return out;
}
break;
}
});

/**
* @constructor
*/
cljs.core.Box = (function (val){
this.val = val;
})

cljs.core.Box.cljs$lang$type = true;

cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";

cljs.core.Box.cljs$lang$ctorPrWriter = (function (this__5307__auto__,writer__5308__auto__,opt__5309__auto__){
return cljs.core._write(writer__5308__auto__,"cljs.core/Box");
});

cljs.core.__GT_Box = (function __GT_Box(val){
return (new cljs.core.Box(val));
});






cljs.core.key_test = (function key_test(key,other){
if((key === other)){
return true;
} else {
if(cljs.core.keyword_identical_QMARK_(key,other)){
return true;
} else {
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key,other);

}
}
});
cljs.core.mask = (function mask(hash,shift){
return ((hash >>> shift) & (31));
});
cljs.core.clone_and_set = (function() {
var clone_and_set = null;
var clone_and_set__3 = (function (arr,i,a){
var G__11119 = cljs.core.aclone(arr);
(G__11119[i] = a);

return G__11119;
});
var clone_and_set__5 = (function (arr,i,a,j,b){
var G__11120 = cljs.core.aclone(arr);
(G__11120[i] = a);

(G__11120[j] = b);

return G__11120;
});
clone_and_set = function(arr,i,a,j,b){
switch(arguments.length){
case 3:
return clone_and_set__3.call(this,arr,i,a);
case 5:
return clone_and_set__5.call(this,arr,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
return clone_and_set;
})()
;
cljs.core.remove_pair = (function remove_pair(arr,i){
var new_arr = (new Array((arr.length - (2))));
cljs.core.array_copy(arr,(0),new_arr,(0),((2) * i));

cljs.core.array_copy(arr,((2) * (i + (1))),new_arr,((2) * i),(new_arr.length - ((2) * i)));

return new_arr;
});
cljs.core.bitmap_indexed_node_index = (function bitmap_indexed_node_index(bitmap,bit){
return cljs.core.bit_count((bitmap & (bit - (1))));
});
cljs.core.bitpos = (function bitpos(hash,shift){
return ((1) << ((hash >>> shift) & 0x01f));
});
cljs.core.edit_and_set = (function() {
var edit_and_set = null;
var edit_and_set__4 = (function (inode,edit,i,a){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

return editable;
});
var edit_and_set__6 = (function (inode,edit,i,a,j,b){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

(editable.arr[j] = b);

return editable;
});
edit_and_set = function(inode,edit,i,a,j,b){
switch(arguments.length){
case 4:
return edit_and_set__4.call(this,inode,edit,i,a);
case 6:
return edit_and_set__6.call(this,inode,edit,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
return edit_and_set;
})()
;
cljs.core.inode_kv_reduce = (function inode_kv_reduce(arr,f,init){
var len = arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var k = (arr[i]);
if(!((k == null))){
var G__11125 = init__$1;
var G__11126 = k;
var G__11127 = (arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__11125,G__11126,G__11127) : f.call(null,G__11125,G__11126,G__11127));
} else {
var node = (arr[(i + (1))]);
if(!((node == null))){
return node.kv_reduce(f,init__$1);
} else {
return init__$1;
}
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__11128 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11128) : cljs.core.deref.call(null,G__11128));
} else {
var G__11129 = (i + (2));
var G__11130 = init__$2;
i = G__11129;
init__$1 = G__11130;
continue;
}
} else {
return init__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.BitmapIndexedNode = (function (edit,bitmap,arr){
this.edit = edit;
this.bitmap = bitmap;
this.arr = arr;
})
cljs.core.BitmapIndexedNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var n = cljs.core.bit_count(self__.bitmap);
var new_arr = (new Array((((n < (0)))?(4):((2) * (n + (1))))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * n));

return (new cljs.core.BitmapIndexedNode(e,self__.bitmap,new_arr));
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
} else {
if((self__.bitmap === bit)){
return null;
} else {
return inode.edit_and_remove_pair(edit__$1,bit,idx);

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
(removed_leaf_QMARK_[(0)] = true);

return inode.edit_and_remove_pair(edit__$1,bit,idx);
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = (function (e,bit,i){
var self__ = this;
var inode = this;
if((self__.bitmap === bit)){
return null;
} else {
var editable = inode.ensure_editable(e);
var earr = editable.arr;
var len = earr.length;
editable.bitmap = (bit ^ editable.bitmap);

cljs.core.array_copy(earr,((2) * (i + (1))),earr,((2) * i),(len - ((2) * (i + (1)))));

(earr[(len - (2))] = null);

(earr[(len - (1))] = null);

return editable;
}
});

cljs.core.BitmapIndexedNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__11131 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__11131) : cljs.core.create_inode_seq.call(null,G__11131));
});

cljs.core.BitmapIndexedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.BitmapIndexedNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return val_or_node;
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((((2) * n) < self__.arr.length)){
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
added_leaf_QMARK_.val = true;

cljs.core.array_copy_downward(earr,((2) * idx),earr,((2) * (idx + (1))),((2) * (n - idx)));

(earr[((2) * idx)] = key);

(earr[(((2) * idx) + (1))] = val);

editable.bitmap = (editable.bitmap | bit);

return editable;
} else {
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_11145 = (0);
var j_11146 = (0);
while(true){
if((i_11145 < (32))){
if((((self__.bitmap >>> i_11145) & (1)) === (0))){
var G__11147 = (i_11145 + (1));
var G__11148 = j_11146;
i_11145 = G__11147;
j_11146 = G__11148;
continue;
} else {
(nodes[i_11145] = ((!(((self__.arr[j_11146]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),cljs.core.hash((self__.arr[j_11146])),(self__.arr[j_11146]),(self__.arr[(j_11146 + (1))]),added_leaf_QMARK_):(self__.arr[(j_11146 + (1))])));

var G__11149 = (i_11145 + (1));
var G__11150 = (j_11146 + (2));
i_11145 = G__11149;
j_11146 = G__11150;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(edit__$1,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (4)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

var editable = inode.ensure_editable(edit__$1);
editable.arr = new_arr;

editable.bitmap = (editable.bitmap | bit);

return editable;

}
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),val);
}
} else {
added_leaf_QMARK_.val = true;

return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__11132 = edit__$1;
var G__11133 = (shift + (5));
var G__11134 = key_or_nil;
var G__11135 = val_or_node;
var G__11136 = hash;
var G__11137 = key;
var G__11138 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__11132,G__11133,G__11134,G__11135,G__11136,G__11137,G__11138) : cljs.core.create_node.call(null,G__11132,G__11133,G__11134,G__11135,G__11136,G__11137,G__11138));
})());

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_11151 = (0);
var j_11152 = (0);
while(true){
if((i_11151 < (32))){
if((((self__.bitmap >>> i_11151) & (1)) === (0))){
var G__11153 = (i_11151 + (1));
var G__11154 = j_11152;
i_11151 = G__11153;
j_11152 = G__11154;
continue;
} else {
(nodes[i_11151] = ((!(((self__.arr[j_11152]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),cljs.core.hash((self__.arr[j_11152])),(self__.arr[j_11152]),(self__.arr[(j_11152 + (1))]),added_leaf_QMARK_):(self__.arr[(j_11152 + (1))])));

var G__11155 = (i_11151 + (1));
var G__11156 = (j_11152 + (2));
i_11151 = G__11155;
j_11152 = G__11156;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(null,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap | bit),new_arr));
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),val)));
}
} else {
added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__11139 = (shift + (5));
var G__11140 = key_or_nil;
var G__11141 = val_or_node;
var G__11142 = hash;
var G__11143 = key;
var G__11144 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__11139,G__11140,G__11141,G__11142,G__11143,G__11144) : cljs.core.create_node.call(null,G__11139,G__11140,G__11141,G__11142,G__11143,G__11144));
})())));

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_find((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil,val_or_node], null);
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without((shift + (5)),hash,key);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
} else {
if((self__.bitmap === bit)){
return null;
} else {
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.cljs$lang$type = true;

cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";

cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = (function (this__5307__auto__,writer__5308__auto__,opt__5309__auto__){
return cljs.core._write(writer__5308__auto__,"cljs.core/BitmapIndexedNode");
});

cljs.core.__GT_BitmapIndexedNode = (function __GT_BitmapIndexedNode(edit,bitmap,arr){
return (new cljs.core.BitmapIndexedNode(edit,bitmap,arr));
});

cljs.core.BitmapIndexedNode.EMPTY = (new cljs.core.BitmapIndexedNode(null,(0),[]));
cljs.core.pack_array_node = (function pack_array_node(array_node,edit,idx){
var arr = array_node.arr;
var len = arr.length;
var new_arr = (new Array(((2) * (array_node.cnt - (1)))));
var i = (0);
var j = (1);
var bitmap = (0);
while(true){
if((i < len)){
if((!((i === idx))) && (!(((arr[i]) == null)))){
(new_arr[j] = (arr[i]));

var G__11157 = (i + (1));
var G__11158 = (j + (2));
var G__11159 = (bitmap | ((1) << i));
i = G__11157;
j = G__11158;
bitmap = G__11159;
continue;
} else {
var G__11160 = (i + (1));
var G__11161 = j;
var G__11162 = bitmap;
i = G__11160;
j = G__11161;
bitmap = G__11162;
continue;
}
} else {
return (new cljs.core.BitmapIndexedNode(edit,bitmap,new_arr));
}
break;
}
});

/**
* @constructor
*/
cljs.core.ArrayNode = (function (edit,cnt,arr){
this.edit = edit;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.ArrayNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
return (new cljs.core.ArrayNode(e,self__.cnt,cljs.core.aclone(self__.arr)));
}
});

cljs.core.ArrayNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return inode;
} else {
var n = node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,edit__$1,idx);
} else {
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
editable.cnt = (editable.cnt - (1));

return editable;
}
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);

}
}
}
});

cljs.core.ArrayNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__11163 = self__.arr;
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__11163) : cljs.core.create_array_node_seq.call(null,G__11163));
});

cljs.core.ArrayNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var node = (self__.arr[i]);
if(!((node == null))){
var init__$2 = node.kv_reduce(f,init__$1);
if(cljs.core.reduced_QMARK_(init__$2)){
var G__11164 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11164) : cljs.core.deref.call(null,G__11164));
} else {
var G__11165 = (i + (1));
var G__11166 = init__$2;
i = G__11165;
init__$1 = G__11166;
continue;
}
} else {
var G__11167 = (i + (1));
var G__11168 = init__$1;
i = G__11167;
init__$1 = G__11168;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ArrayNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));
editable.cnt = (editable.cnt + (1));

return editable;
} else {
var n = node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
}
}
});

cljs.core.ArrayNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return (new cljs.core.ArrayNode(null,(self__.cnt + (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_))));
} else {
var n = node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
}
});

cljs.core.ArrayNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_find((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
var n = node.inode_without((shift + (5)),hash,key);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,null,idx);
} else {
return (new cljs.core.ArrayNode(null,(self__.cnt - (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));

}
}
} else {
return inode;
}
});

cljs.core.ArrayNode.cljs$lang$type = true;

cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";

cljs.core.ArrayNode.cljs$lang$ctorPrWriter = (function (this__5307__auto__,writer__5308__auto__,opt__5309__auto__){
return cljs.core._write(writer__5308__auto__,"cljs.core/ArrayNode");
});

cljs.core.__GT_ArrayNode = (function __GT_ArrayNode(edit,cnt,arr){
return (new cljs.core.ArrayNode(edit,cnt,arr));
});

cljs.core.hash_collision_node_find_index = (function hash_collision_node_find_index(arr,cnt,key){
var lim = ((2) * cnt);
var i = (0);
while(true){
if((i < lim)){
if(cljs.core.key_test(key,(arr[i]))){
return i;
} else {
var G__11169 = (i + (2));
i = G__11169;
continue;
}
} else {
return (-1);
}
break;
}
});

/**
* @constructor
*/
cljs.core.HashCollisionNode = (function (edit,collision_hash,cnt,arr){
this.edit = edit;
this.collision_hash = collision_hash;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.HashCollisionNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var new_arr = (new Array(((2) * (self__.cnt + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * self__.cnt));

return (new cljs.core.HashCollisionNode(e,self__.collision_hash,self__.cnt,new_arr));
}
});

cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
(removed_leaf_QMARK_[(0)] = true);

if((self__.cnt === (1))){
return null;
} else {
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
(earr[idx] = (earr[(((2) * self__.cnt) - (2))]));

(earr[(idx + (1))] = (earr[(((2) * self__.cnt) - (1))]));

(earr[(((2) * self__.cnt) - (1))] = null);

(earr[(((2) * self__.cnt) - (2))] = null);

editable.cnt = (editable.cnt - (1));

return editable;
}
}
});

cljs.core.HashCollisionNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__11170 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__11170) : cljs.core.create_inode_seq.call(null,G__11170));
});

cljs.core.HashCollisionNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.HashCollisionNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return (self__.arr[(idx + (1))]);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
if((self__.arr.length > ((2) * self__.cnt))){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * self__.cnt),key,(((2) * self__.cnt) + (1)),val);
added_leaf_QMARK_.val = true;

editable.cnt = (editable.cnt + (1));

return editable;
} else {
var len = self__.arr.length;
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return inode.ensure_editable_array(edit__$1,(self__.cnt + (1)),new_arr);
}
} else {
if(((self__.arr[(idx + (1))]) === val)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(idx + (1)),val);
}
}
} else {
return (new cljs.core.BitmapIndexedNode(edit__$1,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode,null,null])).inode_assoc_BANG_(edit__$1,shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
var len = ((2) * self__.cnt);
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt + (1)),new_arr));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[idx]),val)){
return inode;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(idx + (1)),val)));
}
}
} else {
return (new cljs.core.BitmapIndexedNode(null,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode])).inode_assoc(shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.ensure_editable_array = (function (e,count,array){
var self__ = this;
var inode = this;
if((e === self__.edit)){
self__.arr = array;

self__.cnt = count;

return inode;
} else {
return (new cljs.core.HashCollisionNode(self__.edit,self__.collision_hash,count,array));
}
});

cljs.core.HashCollisionNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[idx]),(self__.arr[(idx + (1))])], null);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
if((self__.cnt === (1))){
return null;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt - (1)),cljs.core.remove_pair(self__.arr,cljs.core.quot(idx,(2)))));

}
}
});

cljs.core.HashCollisionNode.cljs$lang$type = true;

cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";

cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = (function (this__5307__auto__,writer__5308__auto__,opt__5309__auto__){
return cljs.core._write(writer__5308__auto__,"cljs.core/HashCollisionNode");
});

cljs.core.__GT_HashCollisionNode = (function __GT_HashCollisionNode(edit,collision_hash,cnt,arr){
return (new cljs.core.HashCollisionNode(edit,collision_hash,cnt,arr));
});

cljs.core.create_node = (function() {
var create_node = null;
var create_node__6 = (function (shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc(shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
var create_node__7 = (function (edit,shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit,shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc_BANG_(edit,shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
create_node = function(edit,shift,key1,val1,key2hash,key2,val2){
switch(arguments.length){
case 6:
return create_node__6.call(this,edit,shift,key1,val1,key2hash,key2);
case 7:
return create_node__7.call(this,edit,shift,key1,val1,key2hash,key2,val2);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
return create_node;
})()
;

/**
* @constructor
*/
cljs.core.NodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.NodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.NodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__5141__auto__ = self__.__hash;
if(!((h__5141__auto__ == null))){
return h__5141__auto__;
} else {
var h__5141__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__5141__auto____$1;

return h__5141__auto____$1;
}
});

cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.nodes[self__.i]),(self__.nodes[(self__.i + (1))])], null);
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
var G__11171 = self__.nodes;
var G__11172 = (self__.i + (2));
var G__11173 = null;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__11171,G__11172,G__11173) : cljs.core.create_inode_seq.call(null,G__11171,G__11172,G__11173));
} else {
var G__11174 = self__.nodes;
var G__11175 = self__.i;
var G__11176 = cljs.core.next(self__.s);
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__11174,G__11175,G__11176) : cljs.core.create_inode_seq.call(null,G__11174,G__11175,G__11176));
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.NodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.NodeSeq.cljs$lang$type = true;

cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";

cljs.core.NodeSeq.cljs$lang$ctorPrWriter = (function (this__5307__auto__,writer__5308__auto__,opt__5309__auto__){
return cljs.core._write(writer__5308__auto__,"cljs.core/NodeSeq");
});

cljs.core.__GT_NodeSeq = (function __GT_NodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.NodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5698__auto__ = this;
return cljs.core.es6_iterator(this__5698__auto__);
}));
cljs.core.create_inode_seq = (function() {
var create_inode_seq = null;
var create_inode_seq__1 = (function (nodes){
return create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes,(0),null);
});
var create_inode_seq__3 = (function (nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
if(!(((nodes[j]) == null))){
return (new cljs.core.NodeSeq(null,nodes,j,null,null));
} else {
var temp__4124__auto__ = (nodes[(j + (1))]);
if(cljs.core.truth_(temp__4124__auto__)){
var node = temp__4124__auto__;
var temp__4124__auto____$1 = node.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var node_seq = temp__4124__auto____$1;
return (new cljs.core.NodeSeq(null,nodes,(j + (2)),node_seq,null));
} else {
var G__11180 = (j + (2));
j = G__11180;
continue;
}
} else {
var G__11181 = (j + (2));
j = G__11181;
continue;
}
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.NodeSeq(null,nodes,i,s,null));
}
});
create_inode_seq = function(nodes,i,s){
switch(arguments.length){
case 1:
return create_inode_seq__1.call(this,nodes);
case 3:
return create_inode_seq__3.call(this,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
return create_inode_seq;
})()
;

/**
* @constructor
*/
cljs.core.ArrayNodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.ArrayNodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ArrayNodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__5141__auto__ = self__.__hash;
if(!((h__5141__auto__ == null))){
return h__5141__auto__;
} else {
var h__5141__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__5141__auto____$1;

return h__5141__auto____$1;
}
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.s);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__11182 = null;
var G__11183 = self__.nodes;
var G__11184 = self__.i;
var G__11185 = cljs.core.next(self__.s);
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__11182,G__11183,G__11184,G__11185) : cljs.core.create_array_node_seq.call(null,G__11182,G__11183,G__11184,G__11185));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ArrayNodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ArrayNodeSeq.cljs$lang$type = true;

cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";

cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = (function (this__5307__auto__,writer__5308__auto__,opt__5309__auto__){
return cljs.core._write(writer__5308__auto__,"cljs.core/ArrayNodeSeq");
});

cljs.core.__GT_ArrayNodeSeq = (function __GT_ArrayNodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5698__auto__ = this;
return cljs.core.es6_iterator(this__5698__auto__);
}));
cljs.core.create_array_node_seq = (function() {
var create_array_node_seq = null;
var create_array_node_seq__1 = (function (nodes){
return create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null,nodes,(0),null);
});
var create_array_node_seq__4 = (function (meta,nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
var temp__4124__auto__ = (nodes[j]);
if(cljs.core.truth_(temp__4124__auto__)){
var nj = temp__4124__auto__;
var temp__4124__auto____$1 = nj.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var ns = temp__4124__auto____$1;
return (new cljs.core.ArrayNodeSeq(meta,nodes,(j + (1)),ns,null));
} else {
var G__11190 = (j + (1));
j = G__11190;
continue;
}
} else {
var G__11191 = (j + (1));
j = G__11191;
continue;
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,null));
}
});
create_array_node_seq = function(meta,nodes,i,s){
switch(arguments.length){
case 1:
return create_array_node_seq__1.call(this,meta);
case 4:
return create_array_node_seq__4.call(this,meta,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
return create_array_node_seq;
})()
;

/**
* @constructor
*/
cljs.core.PersistentHashMap = (function (meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
this.meta = meta;
this.cnt = cnt;
this.root = root;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__11193 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__11193) : cljs.core.keys.call(null,G__11193));
})());
});

cljs.core.PersistentHashMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__11194 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__11194) : cljs.core.vals.call(null,G__11194));
})());
});

cljs.core.PersistentHashMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__11195 = cljs.core.seq(coll);
var chunk__11196 = null;
var count__11197 = (0);
var i__11198 = (0);
while(true){
if((i__11198 < count__11197)){
var vec__11199 = chunk__11196.cljs$core$IIndexed$_nth$arity$2(null,i__11198);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11199,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11199,(1),null);
var G__11200_11211 = v;
var G__11201_11212 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11200_11211,G__11201_11212) : f.call(null,G__11200_11211,G__11201_11212));

var G__11213 = seq__11195;
var G__11214 = chunk__11196;
var G__11215 = count__11197;
var G__11216 = (i__11198 + (1));
seq__11195 = G__11213;
chunk__11196 = G__11214;
count__11197 = G__11215;
i__11198 = G__11216;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__11195);
if(temp__4126__auto__){
var seq__11195__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__11195__$1)){
var c__5507__auto__ = cljs.core.chunk_first(seq__11195__$1);
var G__11217 = cljs.core.chunk_rest(seq__11195__$1);
var G__11218 = c__5507__auto__;
var G__11219 = cljs.core.count(c__5507__auto__);
var G__11220 = (0);
seq__11195 = G__11217;
chunk__11196 = G__11218;
count__11197 = G__11219;
i__11198 = G__11220;
continue;
} else {
var vec__11202 = cljs.core.first(seq__11195__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11202,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11202,(1),null);
var G__11203_11221 = v;
var G__11204_11222 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11203_11221,G__11204_11222) : f.call(null,G__11203_11221,G__11204_11222));

var G__11223 = cljs.core.next(seq__11195__$1);
var G__11224 = null;
var G__11225 = (0);
var G__11226 = (0);
seq__11195 = G__11223;
chunk__11196 = G__11224;
count__11197 = G__11225;
i__11198 = G__11226;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var init__$1 = ((self__.has_nil_QMARK_)?(function (){var G__11205 = init;
var G__11206 = null;
var G__11207 = self__.nil_val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__11205,G__11206,G__11207) : f.call(null,G__11205,G__11206,G__11207));
})():init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__11208 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11208) : cljs.core.deref.call(null,G__11208));
} else {
if(!((self__.root == null))){
return self__.root.kv_reduce(f,init__$1);
} else {
return init__$1;

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashMap(self__.meta,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__5141__auto__ = self__.__hash;
if(!((h__5141__auto__ == null))){
return h__5141__auto__;
} else {
var h__5141__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__5141__auto____$1;

return h__5141__auto____$1;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashMap((function (){var obj11210 = {};
return obj11210;
})(),self__.root,self__.cnt,self__.has_nil_QMARK_,self__.nil_val));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY,self__.meta);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),self__.root,false,null,null));
} else {
return coll__$1;
}
} else {
if((self__.root == null)){
return coll__$1;
} else {
var new_root = self__.root.inode_without((0),cljs.core.hash(k),k);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if((self__.has_nil_QMARK_) && ((v === self__.nil_val))){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((self__.has_nil_QMARK_)?self__.cnt:(self__.cnt + (1))),self__.root,true,v,null));
}
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var new_root = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc((0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((added_leaf_QMARK_.val)?(self__.cnt + (1)):self__.cnt),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
return self__.has_nil_QMARK_;
} else {
if((self__.root == null)){
return false;
} else {
return !((self__.root.inode_lookup((0),cljs.core.hash(k),k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel));

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var s = ((!((self__.root == null)))?self__.root.inode_seq():null);
if(self__.has_nil_QMARK_){
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,self__.nil_val], null),s);
} else {
return s;
}
} else {
return null;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashMap(meta__$1,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__11227 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__11228 = cljs.core.next(es);
ret = G__11227;
es = G__11228;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentHashMap.prototype.call = (function() {
var G__11229 = null;
var G__11229__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__11229__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__11229 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__11229__2.call(this,self__,k);
case 3:
return G__11229__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11229.cljs$core$IFn$_invoke$arity$2 = G__11229__2;
G__11229.cljs$core$IFn$_invoke$arity$3 = G__11229__3;
return G__11229;
})()
;

cljs.core.PersistentHashMap.prototype.apply = (function (self__,args11192){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args11192)));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.cljs$lang$type = true;

cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";

cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = (function (this__5307__auto__,writer__5308__auto__,opt__5309__auto__){
return cljs.core._write(writer__5308__auto__,"cljs.core/PersistentHashMap");
});

cljs.core.__GT_PersistentHashMap = (function __GT_PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
return (new cljs.core.PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash));
});

cljs.core.PersistentHashMap.EMPTY = (new cljs.core.PersistentHashMap(null,(0),null,false,null,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashMap.fromArray = (function (arr,no_clone){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__11230 = (i + (2));
var G__11231 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__11230;
ret = G__11231;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
});
cljs.core.PersistentHashMap.fromArrays = (function (ks,vs){
var len = ks.length;
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__11232 = (i + (1));
var G__11233 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null,(ks[i]),(vs[i]));
i = G__11232;
out = G__11233;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
});
(cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5698__auto__ = this;
return cljs.core.es6_iterator(this__5698__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashMap = (function (edit,root,count,has_nil_QMARK_,nil_val){
this.edit = edit;
this.root = root;
this.count = count;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.without_BANG_(key);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.assoc_BANG_(key,val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.conj_BANG_(val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.persistent_BANG_();
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return null;
}
} else {
if((self__.root == null)){
return null;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.edit){
return self__.count;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.conj_BANG_ = (function (o){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((function (){var G__11234 = o;
if(G__11234){
var bit__5401__auto__ = (G__11234.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__5401__auto__) || (G__11234.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__11234.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__11234);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__11234);
}
})()){
return tcoll.assoc_BANG_((function (){var G__11235 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__11235) : cljs.core.key.call(null,G__11235));
})(),(function (){var G__11236 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__11236) : cljs.core.val.call(null,G__11236));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$1 = tcoll;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__11239 = cljs.core.next(es);
var G__11240 = tcoll__$1.assoc_BANG_((function (){var G__11237 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__11237) : cljs.core.key.call(null,G__11237));
})(),(function (){var G__11238 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__11238) : cljs.core.val.call(null,G__11238));
})());
es = G__11239;
tcoll__$1 = G__11240;
continue;
} else {
return tcoll__$1;
}
break;
}
}
} else {
throw (new Error("conj! after persistent"));
}
});

cljs.core.TransientHashMap.prototype.assoc_BANG_ = (function (k,v){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if((self__.nil_val === v)){
} else {
self__.nil_val = v;
}

if(self__.has_nil_QMARK_){
} else {
self__.count = (self__.count + (1));

self__.has_nil_QMARK_ = true;
}

return tcoll;
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var node = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc_BANG_(self__.edit,(0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(added_leaf_QMARK_.val){
self__.count = (self__.count + (1));
} else {
}

return tcoll;
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.without_BANG_ = (function (k){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if(self__.has_nil_QMARK_){
self__.has_nil_QMARK_ = false;

self__.nil_val = null;

self__.count = (self__.count - (1));

return tcoll;
} else {
return tcoll;
}
} else {
if((self__.root == null)){
return tcoll;
} else {
var removed_leaf_QMARK_ = (new cljs.core.Box(false));
var node = self__.root.inode_without_BANG_(self__.edit,(0),cljs.core.hash(k),k,removed_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(cljs.core.truth_((removed_leaf_QMARK_[(0)]))){
self__.count = (self__.count - (1));
} else {
}

return tcoll;
}
}
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.persistent_BANG_ = (function (){
var self__ = this;
var tcoll = this;
if(self__.edit){
self__.edit = null;

return (new cljs.core.PersistentHashMap(null,self__.count,self__.root,self__.has_nil_QMARK_,self__.nil_val,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientHashMap.cljs$lang$type = true;

cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";

cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = (function (this__5307__auto__,writer__5308__auto__,opt__5309__auto__){
return cljs.core._write(writer__5308__auto__,"cljs.core/TransientHashMap");
});

cljs.core.__GT_TransientHashMap = (function __GT_TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val){
return (new cljs.core.TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val));
});

cljs.core.tree_map_seq_push = (function tree_map_seq_push(node,stack,ascending_QMARK_){
var t = node;
var stack__$1 = stack;
while(true){
if(!((t == null))){
var G__11241 = ((ascending_QMARK_)?t.left:t.right);
var G__11242 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1,t);
t = G__11241;
stack__$1 = G__11242;
continue;
} else {
return stack__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMapSeq = (function (meta,stack,ascending_QMARK_,cnt,__hash){
this.meta = meta;
this.stack = stack;
this.ascending_QMARK_ = ascending_QMARK_;
this.cnt = cnt;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374862;
})
cljs.core.PersistentTreeMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt < (0))){
return (cljs.core.count(cljs.core.next(coll__$1)) + (1));
} else {
return self__.cnt;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__5141__auto__ = self__.__hash;
if(!((h__5141__auto__ == null))){
return h__5141__auto__;
} else {
var h__5141__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__5141__auto____$1;

return h__5141__auto____$1;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.peek(self__.stack);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var t = cljs.core.first(self__.stack);
var next_stack = cljs.core.tree_map_seq_push(((self__.ascending_QMARK_)?t.right:t.left),cljs.core.next(self__.stack),self__.ascending_QMARK_);
if(!((next_stack == null))){
return (new cljs.core.PersistentTreeMapSeq(null,next_stack,self__.ascending_QMARK_,(self__.cnt - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMapSeq(meta__$1,self__.stack,self__.ascending_QMARK_,self__.cnt,self__.__hash));
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = (function (this__5307__auto__,writer__5308__auto__,opt__5309__auto__){
return cljs.core._write(writer__5308__auto__,"cljs.core/PersistentTreeMapSeq");
});

cljs.core.__GT_PersistentTreeMapSeq = (function __GT_PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash){
return (new cljs.core.PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash));
});

(cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5698__auto__ = this;
return cljs.core.es6_iterator(this__5698__auto__);
}));
cljs.core.create_tree_map_seq = (function create_tree_map_seq(tree,ascending_QMARK_,cnt){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.tree_map_seq_push(tree,null,ascending_QMARK_),ascending_QMARK_,cnt,null));
});

cljs.core.balance_left = (function balance_left(key,val,ins,right){
if((ins instanceof cljs.core.RedNode)){
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,ins.left.blacken(),(new cljs.core.BlackNode(key,val,ins.right,right,null)),null));
} else {
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.right.key,ins.right.val,(new cljs.core.BlackNode(ins.key,ins.val,ins.left,ins.right.left,null)),(new cljs.core.BlackNode(key,val,ins.right.right,right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));
}
});
cljs.core.balance_right = (function balance_right(key,val,left,ins){
if((ins instanceof cljs.core.RedNode)){
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,(new cljs.core.BlackNode(key,val,left,ins.left,null)),ins.right.blacken(),null));
} else {
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.left.key,ins.left.val,(new cljs.core.BlackNode(key,val,left,ins.left.left,null)),(new cljs.core.BlackNode(ins.key,ins.val,ins.left.right,ins.right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));
}
});
cljs.core.balance_left_del = (function balance_left_del(key,val,del,right){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,del.blacken(),right,null));
} else {
if((right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right(key,val,del,right.redden());
} else {
if(((right instanceof cljs.core.RedNode)) && ((right.left instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(right.left.key,right.left.val,(new cljs.core.BlackNode(key,val,del,right.left.left,null)),cljs.core.balance_right(right.key,right.val,right.left.right,right.right.redden()),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.balance_right_del = (function balance_right_del(key,val,left,del){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,left,del.blacken(),null));
} else {
if((left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left(key,val,left.redden(),del);
} else {
if(((left instanceof cljs.core.RedNode)) && ((left.right instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(left.right.key,left.right.val,cljs.core.balance_left(left.key,left.val,left.left.redden(),left.right.left),(new cljs.core.BlackNode(key,val,left.right.right,del,null)),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.tree_map_kv_reduce = (function tree_map_kv_reduce(node,f,init){
var init__$1 = ((!((node.left == null)))?tree_map_kv_reduce(node.left,f,init):init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__11255 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11255) : cljs.core.deref.call(null,G__11255));
} else {
var init__$2 = (function (){var G__11256 = init__$1;
var G__11257 = node.key;
var G__11258 = node.val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__11256,G__11257,G__11258) : f.call(null,G__11256,G__11257,G__11258));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__11259 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11259) : cljs.core.deref.call(null,G__11259));
} else {
var init__$3 = ((!((node.right == null)))?tree_map_kv_reduce(node.right,f,init__$2):init__$2);
if(cljs.core.reduced_QMARK_(init__$3)){
var G__11260 = init__$3;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11260) : cljs.core.deref.call(null,G__11260));
} else {
return init__$3;
}
}
}
});

/**
* @constructor
*/
cljs.core.BlackNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.BlackNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return ins.balance_right(node);
});

cljs.core.BlackNode.prototype.redden = (function (){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.BlackNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return node;
});

cljs.core.BlackNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return ins.balance_left(node);
});

cljs.core.BlackNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.BlackNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));
});

cljs.core.BlackNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));
});

cljs.core.BlackNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_left_del(self__.key,self__.val,del,self__.right);
});

cljs.core.BlackNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.BlackNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_right_del(self__.key,self__.val,self__.left,del);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__5141__auto__ = self__.__hash;
if(!((h__5141__auto__ == null))){
return h__5141__auto__;
} else {
var h__5141__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__5141__auto____$1;

return h__5141__auto____$1;
}
});

cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.BlackNode.prototype.call = (function() {
var G__11262 = null;
var G__11262__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__11262__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__11262 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__11262__2.call(this,self__,k);
case 3:
return G__11262__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11262.cljs$core$IFn$_invoke$arity$2 = G__11262__2;
G__11262.cljs$core$IFn$_invoke$arity$3 = G__11262__3;
return G__11262;
})()
;

cljs.core.BlackNode.prototype.apply = (function (self__,args11261){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args11261)));
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.BlackNode.cljs$lang$type = true;

cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";

cljs.core.BlackNode.cljs$lang$ctorPrWriter = (function (this__5307__auto__,writer__5308__auto__,opt__5309__auto__){
return cljs.core._write(writer__5308__auto__,"cljs.core/BlackNode");
});

cljs.core.__GT_BlackNode = (function __GT_BlackNode(key,val,left,right,__hash){
return (new cljs.core.BlackNode(key,val,left,right,__hash));
});

(cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5698__auto__ = this;
return cljs.core.es6_iterator(this__5698__auto__);
}));

/**
* @constructor
*/
cljs.core.RedNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.RedNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,ins,null));
});

cljs.core.RedNode.prototype.redden = (function (){
var self__ = this;
var node = this;
throw (new Error("red-black tree invariant violation"));
});

cljs.core.RedNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.RedNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,ins,self__.right,null));
});

cljs.core.RedNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.RedNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,self__.left.blacken(),(new cljs.core.BlackNode(parent.key,parent.val,self__.right,parent.right,null)),null));
} else {
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.right.key,self__.right.val,(new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right.left,null)),(new cljs.core.BlackNode(parent.key,parent.val,self__.right.right,parent.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));

}
}
});

cljs.core.RedNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left,null)),self__.right.blacken(),null));
} else {
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.left.key,self__.left.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left.left,null)),(new cljs.core.BlackNode(self__.key,self__.val,self__.left.right,self__.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));

}
}
});

cljs.core.RedNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,del,self__.right,null));
});

cljs.core.RedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.RedNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,del,null));
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__5141__auto__ = self__.__hash;
if(!((h__5141__auto__ == null))){
return h__5141__auto__;
} else {
var h__5141__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__5141__auto____$1;

return h__5141__auto____$1;
}
});

cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.RedNode.prototype.call = (function() {
var G__11264 = null;
var G__11264__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__11264__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__11264 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__11264__2.call(this,self__,k);
case 3:
return G__11264__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11264.cljs$core$IFn$_invoke$arity$2 = G__11264__2;
G__11264.cljs$core$IFn$_invoke$arity$3 = G__11264__3;
return G__11264;
})()
;

cljs.core.RedNode.prototype.apply = (function (self__,args11263){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args11263)));
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.RedNode.cljs$lang$type = true;

cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";

cljs.core.RedNode.cljs$lang$ctorPrWriter = (function (this__5307__auto__,writer__5308__auto__,opt__5309__auto__){
return cljs.core._write(writer__5308__auto__,"cljs.core/RedNode");
});

cljs.core.__GT_RedNode = (function __GT_RedNode(key,val,left,right,__hash){
return (new cljs.core.RedNode(key,val,left,right,__hash));
});

(cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5698__auto__ = this;
return cljs.core.es6_iterator(this__5698__auto__);
}));
cljs.core.tree_map_add = (function tree_map_add(comp,tree,k,v,found){
if((tree == null)){
return (new cljs.core.RedNode(k,v,null,null,null));
} else {
var c = (function (){var G__11277 = k;
var G__11278 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__11277,G__11278) : comp.call(null,G__11277,G__11278));
})();
if((c === (0))){
(found[(0)] = tree);

return null;
} else {
if((c < (0))){
var ins = tree_map_add(comp,tree.left,k,v,found);
if(!((ins == null))){
return tree.add_left(ins);
} else {
return null;
}
} else {
var ins = tree_map_add(comp,tree.right,k,v,found);
if(!((ins == null))){
return tree.add_right(ins);
} else {
return null;
}

}
}
}
});
cljs.core.tree_map_append = (function tree_map_append(left,right){
if((left == null)){
return right;
} else {
if((right == null)){
return left;
} else {
if((left instanceof cljs.core.RedNode)){
if((right instanceof cljs.core.RedNode)){
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.RedNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.RedNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,(new cljs.core.RedNode(right.key,right.val,app,right.right,null)),null));
}
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,tree_map_append(left.right,right),null));
}
} else {
if((right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(right.key,right.val,tree_map_append(left,right.left),right.right,null));
} else {
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.BlackNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.BlackNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return cljs.core.balance_left_del(left.key,left.val,left.left,(new cljs.core.BlackNode(right.key,right.val,app,right.right,null)));
}

}
}
}
}
});
cljs.core.tree_map_remove = (function tree_map_remove(comp,tree,k,found){
if(!((tree == null))){
var c = (function (){var G__11297 = k;
var G__11298 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__11297,G__11298) : comp.call(null,G__11297,G__11298));
})();
if((c === (0))){
(found[(0)] = tree);

return cljs.core.tree_map_append(tree.left,tree.right);
} else {
if((c < (0))){
var del = tree_map_remove(comp,tree.left,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left_del(tree.key,tree.val,del,tree.right);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,del,tree.right,null));
}
} else {
return null;
}
} else {
var del = tree_map_remove(comp,tree.right,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right_del(tree.key,tree.val,tree.left,del);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,tree.left,del,null));
}
} else {
return null;
}

}
}
} else {
return null;
}
});
cljs.core.tree_map_replace = (function tree_map_replace(comp,tree,k,v){
var tk = tree.key;
var c = (function (){var G__11309 = k;
var G__11310 = tk;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__11309,G__11310) : comp.call(null,G__11309,G__11310));
})();
if((c === (0))){
return tree.replace(tk,v,tree.left,tree.right);
} else {
if((c < (0))){
return tree.replace(tk,tree.val,tree_map_replace(comp,tree.left,k,v),tree.right);
} else {
return tree.replace(tk,tree.val,tree.left,tree_map_replace(comp,tree.right,k,v));

}
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMap = (function (comp,tree,cnt,meta,__hash){
this.comp = comp;
this.tree = tree;
this.cnt = cnt;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 418776847;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__11312 = cljs.core.seq(coll);
var chunk__11313 = null;
var count__11314 = (0);
var i__11315 = (0);
while(true){
if((i__11315 < count__11314)){
var vec__11316 = chunk__11313.cljs$core$IIndexed$_nth$arity$2(null,i__11315);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11316,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11316,(1),null);
var G__11317_11329 = v;
var G__11318_11330 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11317_11329,G__11318_11330) : f.call(null,G__11317_11329,G__11318_11330));

var G__11331 = seq__11312;
var G__11332 = chunk__11313;
var G__11333 = count__11314;
var G__11334 = (i__11315 + (1));
seq__11312 = G__11331;
chunk__11313 = G__11332;
count__11314 = G__11333;
i__11315 = G__11334;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__11312);
if(temp__4126__auto__){
var seq__11312__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__11312__$1)){
var c__5507__auto__ = cljs.core.chunk_first(seq__11312__$1);
var G__11335 = cljs.core.chunk_rest(seq__11312__$1);
var G__11336 = c__5507__auto__;
var G__11337 = cljs.core.count(c__5507__auto__);
var G__11338 = (0);
seq__11312 = G__11335;
chunk__11313 = G__11336;
count__11314 = G__11337;
i__11315 = G__11338;
continue;
} else {
var vec__11319 = cljs.core.first(seq__11312__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11319,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11319,(1),null);
var G__11320_11339 = v;
var G__11321_11340 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11320_11339,G__11321_11340) : f.call(null,G__11320_11339,G__11321_11340));

var G__11341 = cljs.core.next(seq__11312__$1);
var G__11342 = null;
var G__11343 = (0);
var G__11344 = (0);
seq__11312 = G__11341;
chunk__11313 = G__11342;
count__11314 = G__11343;
i__11315 = G__11344;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__11322 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__11322) : cljs.core.keys.call(null,G__11322));
})());
});

cljs.core.PersistentTreeMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__11323 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__11323) : cljs.core.vals.call(null,G__11323));
})());
});

cljs.core.PersistentTreeMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMap.prototype.entry_at = (function (k){
var self__ = this;
var coll = this;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__11324 = k;
var G__11325 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__11324,G__11325) : self__.comp.call(null,G__11324,G__11325));
})();
if((c === (0))){
return t;
} else {
if((c < (0))){
var G__11345 = t.left;
t = G__11345;
continue;
} else {
var G__11346 = t.right;
t = G__11346;
continue;

}
}
} else {
return null;
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var n = coll__$1.entry_at(k);
if(!((n == null))){
return n.val;
} else {
return not_found;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
if(!((self__.tree == null))){
return cljs.core.tree_map_kv_reduce(self__.tree,f,init);
} else {
return init;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,self__.meta,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,false,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__5141__auto__ = self__.__hash;
if(!((h__5141__auto__ == null))){
return h__5141__auto__;
} else {
var h__5141__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__5141__auto____$1;

return h__5141__auto____$1;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,(0)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_remove(self__.comp,self__.tree,k,found);
if((t == null)){
if((cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0)) == null)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt - (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_add(self__.comp,self__.tree,k,v,found);
if((t == null)){
var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0));
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v,found_node.val)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,cljs.core.tree_map_replace(self__.comp,self__.tree,k,v),self__.cnt,self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt + (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((coll__$1.entry_at(k) == null));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,true,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,meta__$1,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__11347 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__11348 = cljs.core.next(es);
ret = G__11347;
es = G__11348;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentTreeMap.prototype.call = (function() {
var G__11349 = null;
var G__11349__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__11349__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__11349 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__11349__2.call(this,self__,k);
case 3:
return G__11349__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11349.cljs$core$IFn$_invoke$arity$2 = G__11349__2;
G__11349.cljs$core$IFn$_invoke$arity$3 = G__11349__3;
return G__11349;
})()
;

cljs.core.PersistentTreeMap.prototype.apply = (function (self__,args11311){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args11311)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,ascending_QMARK_,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var stack = null;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__11326 = k;
var G__11327 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__11326,G__11327) : self__.comp.call(null,G__11326,G__11327));
})();
if((c === (0))){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t),ascending_QMARK_,(-1),null));
} else {
if(cljs.core.truth_(ascending_QMARK_)){
if((c < (0))){
var G__11350 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__11351 = t.left;
stack = G__11350;
t = G__11351;
continue;
} else {
var G__11352 = stack;
var G__11353 = t.right;
stack = G__11352;
t = G__11353;
continue;
}
} else {
if((c > (0))){
var G__11354 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__11355 = t.right;
stack = G__11354;
t = G__11355;
continue;
} else {
var G__11356 = stack;
var G__11357 = t.left;
stack = G__11356;
t = G__11357;
continue;
}

}
}
} else {
if((stack == null)){
return null;
} else {
return (new cljs.core.PersistentTreeMapSeq(null,stack,ascending_QMARK_,(-1),null));
}
}
break;
}
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
var G__11328 = entry;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__11328) : cljs.core.key.call(null,G__11328));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.comp;
});

cljs.core.PersistentTreeMap.cljs$lang$type = true;

cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";

cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = (function (this__5307__auto__,writer__5308__auto__,opt__5309__auto__){
return cljs.core._write(writer__5308__auto__,"cljs.core/PersistentTreeMap");
});

cljs.core.__GT_PersistentTreeMap = (function __GT_PersistentTreeMap(comp,tree,cnt,meta,__hash){
return (new cljs.core.PersistentTreeMap(comp,tree,cnt,meta,__hash));
});

cljs.core.PersistentTreeMap.EMPTY = (new cljs.core.PersistentTreeMap(cljs.core.compare,null,(0),null,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5698__auto__ = this;
return cljs.core.es6_iterator(this__5698__auto__);
}));
/**
* keyval => key val
* Returns a new hash map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.hash_map = (function() { 
var hash_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if(in$){
var G__11358 = cljs.core.nnext(in$);
var G__11359 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__11358;
out = G__11359;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
};
var hash_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__11360__i = 0, G__11360__a = new Array(arguments.length -  0);
while (G__11360__i < G__11360__a.length) {G__11360__a[G__11360__i] = arguments[G__11360__i + 0]; ++G__11360__i;}
  keyvals = new cljs.core.IndexedSeq(G__11360__a,0);
} 
return hash_map__delegate.call(this,keyvals);};
hash_map.cljs$lang$maxFixedArity = 0;
hash_map.cljs$lang$applyTo = (function (arglist__11361){
var keyvals = cljs.core.seq(arglist__11361);
return hash_map__delegate(keyvals);
});
hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
return hash_map;
})()
;
/**
* keyval => key val
* Returns a new array map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.array_map = (function() { 
var array_map__delegate = function (keyvals){
return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array,keyvals),true,false);
};
var array_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__11362__i = 0, G__11362__a = new Array(arguments.length -  0);
while (G__11362__i < G__11362__a.length) {G__11362__a[G__11362__i] = arguments[G__11362__i + 0]; ++G__11362__i;}
  keyvals = new cljs.core.IndexedSeq(G__11362__a,0);
} 
return array_map__delegate.call(this,keyvals);};
array_map.cljs$lang$maxFixedArity = 0;
array_map.cljs$lang$applyTo = (function (arglist__11363){
var keyvals = cljs.core.seq(arglist__11363);
return array_map__delegate(keyvals);
});
array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
return array_map;
})()
;
/**
* keyval => key val
* Returns a new object map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.obj_map = (function() { 
var obj_map__delegate = function (keyvals){
var ks = [];
var obj = (function (){var obj11367 = {};
return obj11367;
})();
var kvs = cljs.core.seq(keyvals);
while(true){
if(kvs){
ks.push(cljs.core.first(kvs));

(obj[cljs.core.first(kvs)] = cljs.core.second(kvs));

var G__11368 = cljs.core.nnext(kvs);
kvs = G__11368;
continue;
} else {
return cljs.core.ObjMap.fromObject(ks,obj);
}
break;
}
};
var obj_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__11369__i = 0, G__11369__a = new Array(arguments.length -  0);
while (G__11369__i < G__11369__a.length) {G__11369__a[G__11369__i] = arguments[G__11369__i + 0]; ++G__11369__i;}
  keyvals = new cljs.core.IndexedSeq(G__11369__a,0);
} 
return obj_map__delegate.call(this,keyvals);};
obj_map.cljs$lang$maxFixedArity = 0;
obj_map.cljs$lang$applyTo = (function (arglist__11370){
var keyvals = cljs.core.seq(arglist__11370);
return obj_map__delegate(keyvals);
});
obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
return obj_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.sorted_map = (function() { 
var sorted_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.PersistentTreeMap.EMPTY;
while(true){
if(in$){
var G__11371 = cljs.core.nnext(in$);
var G__11372 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__11371;
out = G__11372;
continue;
} else {
return out;
}
break;
}
};
var sorted_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__11373__i = 0, G__11373__a = new Array(arguments.length -  0);
while (G__11373__i < G__11373__a.length) {G__11373__a[G__11373__i] = arguments[G__11373__i + 0]; ++G__11373__i;}
  keyvals = new cljs.core.IndexedSeq(G__11373__a,0);
} 
return sorted_map__delegate.call(this,keyvals);};
sorted_map.cljs$lang$maxFixedArity = 0;
sorted_map.cljs$lang$applyTo = (function (arglist__11374){
var keyvals = cljs.core.seq(arglist__11374);
return sorted_map__delegate(keyvals);
});
sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
return sorted_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_map_by = (function() { 
var sorted_map_by__delegate = function (comparator,keyvals){
var in$ = cljs.core.seq(keyvals);
var out = (new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator),null,(0),null,(0)));
while(true){
if(in$){
var G__11375 = cljs.core.nnext(in$);
var G__11376 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__11375;
out = G__11376;
continue;
} else {
return out;
}
break;
}
};
var sorted_map_by = function (comparator,var_args){
var keyvals = null;
if (arguments.length > 1) {
var G__11377__i = 0, G__11377__a = new Array(arguments.length -  1);
while (G__11377__i < G__11377__a.length) {G__11377__a[G__11377__i] = arguments[G__11377__i + 1]; ++G__11377__i;}
  keyvals = new cljs.core.IndexedSeq(G__11377__a,0);
} 
return sorted_map_by__delegate.call(this,comparator,keyvals);};
sorted_map_by.cljs$lang$maxFixedArity = 1;
sorted_map_by.cljs$lang$applyTo = (function (arglist__11378){
var comparator = cljs.core.first(arglist__11378);
var keyvals = cljs.core.rest(arglist__11378);
return sorted_map_by__delegate(comparator,keyvals);
});
sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
return sorted_map_by;
})()
;

/**
* @constructor
*/
cljs.core.KeySeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.KeySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.KeySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__11379 = self__.mseq;
if(G__11379){
var bit__5401__auto__ = (G__11379.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__5401__auto__) || (G__11379.cljs$core$INext$)){
return true;
} else {
if((!G__11379.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__11379);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__11379);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.KeySeq(nseq,self__._meta));
}
});

cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_key$arity$1(null);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__11380 = self__.mseq;
if(G__11380){
var bit__5401__auto__ = (G__11380.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__5401__auto__) || (G__11380.cljs$core$INext$)){
return true;
} else {
if((!G__11380.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__11380);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__11380);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.KeySeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.KeySeq(self__.mseq,new_meta));
});

cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.KeySeq.cljs$lang$type = true;

cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";

cljs.core.KeySeq.cljs$lang$ctorPrWriter = (function (this__5307__auto__,writer__5308__auto__,opt__5309__auto__){
return cljs.core._write(writer__5308__auto__,"cljs.core/KeySeq");
});

cljs.core.__GT_KeySeq = (function __GT_KeySeq(mseq,_meta){
return (new cljs.core.KeySeq(mseq,_meta));
});

(cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5698__auto__ = this;
return cljs.core.es6_iterator(this__5698__auto__);
}));
/**
* Returns a sequence of the map's keys.
*/
cljs.core.keys = (function keys(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.KeySeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the key of the map entry.
*/
cljs.core.key = (function key(map_entry){
return cljs.core._key(map_entry);
});

/**
* @constructor
*/
cljs.core.ValSeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.ValSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ValSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__11381 = self__.mseq;
if(G__11381){
var bit__5401__auto__ = (G__11381.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__5401__auto__) || (G__11381.cljs$core$INext$)){
return true;
} else {
if((!G__11381.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__11381);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__11381);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.ValSeq(nseq,self__._meta));
}
});

cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_val$arity$1(null);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__11382 = self__.mseq;
if(G__11382){
var bit__5401__auto__ = (G__11382.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__5401__auto__) || (G__11382.cljs$core$INext$)){
return true;
} else {
if((!G__11382.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__11382);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__11382);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.ValSeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ValSeq(self__.mseq,new_meta));
});

cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ValSeq.cljs$lang$type = true;

cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";

cljs.core.ValSeq.cljs$lang$ctorPrWriter = (function (this__5307__auto__,writer__5308__auto__,opt__5309__auto__){
return cljs.core._write(writer__5308__auto__,"cljs.core/ValSeq");
});

cljs.core.__GT_ValSeq = (function __GT_ValSeq(mseq,_meta){
return (new cljs.core.ValSeq(mseq,_meta));
});

(cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5698__auto__ = this;
return cljs.core.es6_iterator(this__5698__auto__);
}));
/**
* Returns a sequence of the map's values.
*/
cljs.core.vals = (function vals(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.ValSeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the value in the map entry.
*/
cljs.core.val = (function val(map_entry){
return cljs.core._val(map_entry);
});
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping from
* the latter (left-to-right) will be the mapping in the result.
* @param {...*} var_args
*/
cljs.core.merge = (function() { 
var merge__delegate = function (maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2((function (p1__11383_SHARP_,p2__11384_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__4720__auto__ = p1__11383_SHARP_;
if(cljs.core.truth_(or__4720__auto__)){
return or__4720__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),p2__11384_SHARP_);
}),maps);
} else {
return null;
}
};
var merge = function (var_args){
var maps = null;
if (arguments.length > 0) {
var G__11385__i = 0, G__11385__a = new Array(arguments.length -  0);
while (G__11385__i < G__11385__a.length) {G__11385__a[G__11385__i] = arguments[G__11385__i + 0]; ++G__11385__i;}
  maps = new cljs.core.IndexedSeq(G__11385__a,0);
} 
return merge__delegate.call(this,maps);};
merge.cljs$lang$maxFixedArity = 0;
merge.cljs$lang$applyTo = (function (arglist__11386){
var maps = cljs.core.seq(arglist__11386);
return merge__delegate(maps);
});
merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
return merge;
})()
;
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping(s)
* from the latter (left-to-right) will be combined with the mapping in
* the result by calling (f val-in-result val-in-latter).
* @param {...*} var_args
*/
cljs.core.merge_with = (function() { 
var merge_with__delegate = function (f,maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
var merge_entry = (function (m,e){
var k = cljs.core.first(e);
var v = cljs.core.second(e);
if(cljs.core.contains_QMARK_(m,k)){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__11389 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__11390 = v;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11389,G__11390) : f.call(null,G__11389,G__11390));
})());
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
var merge2 = ((function (merge_entry){
return (function (m1,m2){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry,(function (){var or__4720__auto__ = m1;
if(cljs.core.truth_(or__4720__auto__)){
return or__4720__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),cljs.core.seq(m2));
});})(merge_entry))
;
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2,maps);
} else {
return null;
}
};
var merge_with = function (f,var_args){
var maps = null;
if (arguments.length > 1) {
var G__11391__i = 0, G__11391__a = new Array(arguments.length -  1);
while (G__11391__i < G__11391__a.length) {G__11391__a[G__11391__i] = arguments[G__11391__i + 1]; ++G__11391__i;}
  maps = new cljs.core.IndexedSeq(G__11391__a,0);
} 
return merge_with__delegate.call(this,f,maps);};
merge_with.cljs$lang$maxFixedArity = 1;
merge_with.cljs$lang$applyTo = (function (arglist__11392){
var f = cljs.core.first(arglist__11392);
var maps = cljs.core.rest(arglist__11392);
return merge_with__delegate(f,maps);
});
merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
return merge_with;
})()
;
/**
* Returns a map containing only those entries in map whose key is in keys
*/
cljs.core.select_keys = (function select_keys(map,keyseq){
var ret = cljs.core.PersistentArrayMap.EMPTY;
var keys = cljs.core.seq(keyseq);
while(true){
if(keys){
var key = cljs.core.first(keys);
var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map,key,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185));
var G__11393 = ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185)))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,key,entry):ret);
var G__11394 = cljs.core.next(keys);
ret = G__11393;
keys = G__11394;
continue;
} else {
return cljs.core.with_meta(ret,cljs.core.meta(map));
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentHashSet = (function (meta,hash_map,__hash){
this.meta = meta;
this.hash_map = hash_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 15077647;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__11397 = cljs.core.seq(coll);
var chunk__11398 = null;
var count__11399 = (0);
var i__11400 = (0);
while(true){
if((i__11400 < count__11399)){
var vec__11401 = chunk__11398.cljs$core$IIndexed$_nth$arity$2(null,i__11400);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11401,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11401,(1),null);
var G__11402_11407 = v;
var G__11403_11408 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11402_11407,G__11403_11408) : f.call(null,G__11402_11407,G__11403_11408));

var G__11409 = seq__11397;
var G__11410 = chunk__11398;
var G__11411 = count__11399;
var G__11412 = (i__11400 + (1));
seq__11397 = G__11409;
chunk__11398 = G__11410;
count__11399 = G__11411;
i__11400 = G__11412;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__11397);
if(temp__4126__auto__){
var seq__11397__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__11397__$1)){
var c__5507__auto__ = cljs.core.chunk_first(seq__11397__$1);
var G__11413 = cljs.core.chunk_rest(seq__11397__$1);
var G__11414 = c__5507__auto__;
var G__11415 = cljs.core.count(c__5507__auto__);
var G__11416 = (0);
seq__11397 = G__11413;
chunk__11398 = G__11414;
count__11399 = G__11415;
i__11400 = G__11416;
continue;
} else {
var vec__11404 = cljs.core.first(seq__11397__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11404,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11404,(1),null);
var G__11405_11417 = v;
var G__11406_11418 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11405_11417,G__11406_11418) : f.call(null,G__11405_11417,G__11406_11418));

var G__11419 = cljs.core.next(seq__11397__$1);
var G__11420 = null;
var G__11421 = (0);
var G__11422 = (0);
seq__11397 = G__11419;
chunk__11398 = G__11420;
count__11399 = G__11421;
i__11400 = G__11422;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core._contains_key_QMARK_(self__.hash_map,v)){
return v;
} else {
return not_found;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._count(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__5141__auto__ = self__.__hash;
if(!((h__5141__auto__ == null))){
return h__5141__auto__;
} else {
var h__5141__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__5141__auto____$1;

return h__5141__auto____$1;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__11395_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__11395_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY,self__.meta);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core._dissoc(self__.hash_map,v),null));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(meta__$1,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map,o,null),null));
});

cljs.core.PersistentHashSet.prototype.call = (function() {
var G__11423 = null;
var G__11423__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__11423__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__11423 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__11423__2.call(this,self__,k);
case 3:
return G__11423__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11423.cljs$core$IFn$_invoke$arity$2 = G__11423__2;
G__11423.cljs$core$IFn$_invoke$arity$3 = G__11423__3;
return G__11423;
})()
;

cljs.core.PersistentHashSet.prototype.apply = (function (self__,args11396){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args11396)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashSet.cljs$lang$type = true;

cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";

cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = (function (this__5307__auto__,writer__5308__auto__,opt__5309__auto__){
return cljs.core._write(writer__5308__auto__,"cljs.core/PersistentHashSet");
});

cljs.core.__GT_PersistentHashSet = (function __GT_PersistentHashSet(meta,hash_map,__hash){
return (new cljs.core.PersistentHashSet(meta,hash_map,__hash));
});

cljs.core.PersistentHashSet.EMPTY = (new cljs.core.PersistentHashSet(null,cljs.core.PersistentArrayMap.EMPTY,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashSet.fromArray = (function (items,no_clone){
var len = items.length;
if((len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr = ((no_clone)?items:cljs.core.aclone(items));
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__11424 = (i + (1));
var G__11425 = cljs.core._assoc_BANG_(out,(items[i]),null);
i = G__11424;
out = G__11425;
continue;
} else {
return (new cljs.core.PersistentHashSet(null,cljs.core._persistent_BANG_(out),null));
}
break;
}
} else {
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < len)){
var G__11426 = (i + (1));
var G__11427 = cljs.core._conj_BANG_(out,(items[i]));
i = G__11426;
out = G__11427;
continue;
} else {
return cljs.core._persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5698__auto__ = this;
return cljs.core.es6_iterator(this__5698__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashSet = (function (transient_map){
this.transient_map = transient_map;
this.cljs$lang$protocol_mask$partition0$ = 259;
this.cljs$lang$protocol_mask$partition1$ = 136;
})
cljs.core.TransientHashSet.prototype.call = (function() {
var G__11429 = null;
var G__11429__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});
var G__11429__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});
G__11429 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__11429__2.call(this,self__,k);
case 3:
return G__11429__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11429.cljs$core$IFn$_invoke$arity$2 = G__11429__2;
G__11429.cljs$core$IFn$_invoke$arity$3 = G__11429__3;
return G__11429;
})()
;

cljs.core.TransientHashSet.prototype.apply = (function (self__,args11428){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args11428)));
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,v,null);
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,v,not_found){
var self__ = this;
var tcoll__$1 = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return v;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return cljs.core.count(self__.transient_map);
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map,v);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map,o,null);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return (new cljs.core.PersistentHashSet(null,cljs.core.persistent_BANG_(self__.transient_map),null));
});

cljs.core.TransientHashSet.cljs$lang$type = true;

cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";

cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = (function (this__5307__auto__,writer__5308__auto__,opt__5309__auto__){
return cljs.core._write(writer__5308__auto__,"cljs.core/TransientHashSet");
});

cljs.core.__GT_TransientHashSet = (function __GT_TransientHashSet(transient_map){
return (new cljs.core.TransientHashSet(transient_map));
});


/**
* @constructor
*/
cljs.core.PersistentTreeSet = (function (meta,tree_map,__hash){
this.meta = meta;
this.tree_map = tree_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 417730831;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__11432 = cljs.core.seq(coll);
var chunk__11433 = null;
var count__11434 = (0);
var i__11435 = (0);
while(true){
if((i__11435 < count__11434)){
var vec__11436 = chunk__11433.cljs$core$IIndexed$_nth$arity$2(null,i__11435);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11436,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11436,(1),null);
var G__11437_11442 = v;
var G__11438_11443 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11437_11442,G__11438_11443) : f.call(null,G__11437_11442,G__11438_11443));

var G__11444 = seq__11432;
var G__11445 = chunk__11433;
var G__11446 = count__11434;
var G__11447 = (i__11435 + (1));
seq__11432 = G__11444;
chunk__11433 = G__11445;
count__11434 = G__11446;
i__11435 = G__11447;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__11432);
if(temp__4126__auto__){
var seq__11432__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__11432__$1)){
var c__5507__auto__ = cljs.core.chunk_first(seq__11432__$1);
var G__11448 = cljs.core.chunk_rest(seq__11432__$1);
var G__11449 = c__5507__auto__;
var G__11450 = cljs.core.count(c__5507__auto__);
var G__11451 = (0);
seq__11432 = G__11448;
chunk__11433 = G__11449;
count__11434 = G__11450;
i__11435 = G__11451;
continue;
} else {
var vec__11439 = cljs.core.first(seq__11432__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11439,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11439,(1),null);
var G__11440_11452 = v;
var G__11441_11453 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11440_11452,G__11441_11453) : f.call(null,G__11440_11452,G__11441_11453));

var G__11454 = cljs.core.next(seq__11432__$1);
var G__11455 = null;
var G__11456 = (0);
var G__11457 = (0);
seq__11432 = G__11454;
chunk__11433 = G__11455;
count__11434 = G__11456;
i__11435 = G__11457;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
var n = self__.tree_map.entry_at(v);
if(!((n == null))){
return n.key;
} else {
return not_found;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.count(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core.count(self__.tree_map) > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core.rseq(self__.tree_map));
} else {
return null;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__5141__auto__ = self__.__hash;
if(!((h__5141__auto__ == null))){
return h__5141__auto__;
} else {
var h__5141__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__5141__auto____$1;

return h__5141__auto____$1;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__11430_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__11430_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core._empty(self__.tree_map),(0)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map,v),null));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(meta__$1,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map,o,null),null));
});

cljs.core.PersistentTreeSet.prototype.call = (function() {
var G__11458 = null;
var G__11458__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__11458__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__11458 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__11458__2.call(this,self__,k);
case 3:
return G__11458__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11458.cljs$core$IFn$_invoke$arity$2 = G__11458__2;
G__11458.cljs$core$IFn$_invoke$arity$3 = G__11458__3;
return G__11458;
})()
;

cljs.core.PersistentTreeSet.prototype.apply = (function (self__,args11431){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args11431)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq(self__.tree_map,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq_from(self__.tree_map,k,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
return entry;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._comparator(self__.tree_map);
});

cljs.core.PersistentTreeSet.cljs$lang$type = true;

cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";

cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = (function (this__5307__auto__,writer__5308__auto__,opt__5309__auto__){
return cljs.core._write(writer__5308__auto__,"cljs.core/PersistentTreeSet");
});

cljs.core.__GT_PersistentTreeSet = (function __GT_PersistentTreeSet(meta,tree_map,__hash){
return (new cljs.core.PersistentTreeSet(meta,tree_map,__hash));
});

cljs.core.PersistentTreeSet.EMPTY = (new cljs.core.PersistentTreeSet(null,cljs.core.PersistentTreeMap.EMPTY,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5698__auto__ = this;
return cljs.core.es6_iterator(this__5698__auto__);
}));
cljs.core.set_from_indexed_seq = (function set_from_indexed_seq(iseq){
var arr = iseq.arr;
var ret = (function (){var a__5601__auto__ = arr;
var i = (0);
var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < a__5601__auto__.length)){
var G__11459 = (i + (1));
var G__11460 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,(arr[i]));
i = G__11459;
res = G__11460;
continue;
} else {
return res;
}
break;
}
})();
return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
});
/**
* Returns a set of the distinct elements of coll.
*/
cljs.core.set = (function set(coll){
var in$ = cljs.core.seq(coll);
if((in$ == null)){
return cljs.core.PersistentHashSet.EMPTY;
} else {
if(((in$ instanceof cljs.core.IndexedSeq)) && ((in$.i === (0)))){
return cljs.core.set_from_indexed_seq(in$);
} else {
var in$__$1 = in$;
var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if(!((in$__$1 == null))){
var G__11461 = in$__$1.cljs$core$INext$_next$arity$1(null);
var G__11462 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,in$__$1.cljs$core$ISeq$_first$arity$1(null));
in$__$1 = G__11461;
out = G__11462;
continue;
} else {
return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
}
break;
}

}
}
});
/**
* @param {...*} var_args
*/
cljs.core.hash_set = (function() {
var hash_set = null;
var hash_set__0 = (function (){
return cljs.core.PersistentHashSet.EMPTY;
});
var hash_set__1 = (function() { 
var G__11463__delegate = function (keys){
return cljs.core.set(keys);
};
var G__11463 = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__11464__i = 0, G__11464__a = new Array(arguments.length -  0);
while (G__11464__i < G__11464__a.length) {G__11464__a[G__11464__i] = arguments[G__11464__i + 0]; ++G__11464__i;}
  keys = new cljs.core.IndexedSeq(G__11464__a,0);
} 
return G__11463__delegate.call(this,keys);};
G__11463.cljs$lang$maxFixedArity = 0;
G__11463.cljs$lang$applyTo = (function (arglist__11465){
var keys = cljs.core.seq(arglist__11465);
return G__11463__delegate(keys);
});
G__11463.cljs$core$IFn$_invoke$arity$variadic = G__11463__delegate;
return G__11463;
})()
;
hash_set = function(var_args){
var keys = var_args;
switch(arguments.length){
case 0:
return hash_set__0.call(this);
default:
var G__11466 = null;
if (arguments.length > 0) {
var G__11467__i = 0, G__11467__a = new Array(arguments.length -  0);
while (G__11467__i < G__11467__a.length) {G__11467__a[G__11467__i] = arguments[G__11467__i + 0]; ++G__11467__i;}
G__11466 = new cljs.core.IndexedSeq(G__11467__a,0);
}
return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__11466);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
hash_set.cljs$lang$maxFixedArity = 0;
hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
return hash_set;
})()
;
/**
* Returns a new sorted set with supplied keys.
* @param {...*} var_args
*/
cljs.core.sorted_set = (function() { 
var sorted_set__delegate = function (keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,cljs.core.PersistentTreeSet.EMPTY,keys);
};
var sorted_set = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__11468__i = 0, G__11468__a = new Array(arguments.length -  0);
while (G__11468__i < G__11468__a.length) {G__11468__a[G__11468__i] = arguments[G__11468__i + 0]; ++G__11468__i;}
  keys = new cljs.core.IndexedSeq(G__11468__a,0);
} 
return sorted_set__delegate.call(this,keys);};
sorted_set.cljs$lang$maxFixedArity = 0;
sorted_set.cljs$lang$applyTo = (function (arglist__11469){
var keys = cljs.core.seq(arglist__11469);
return sorted_set__delegate(keys);
});
sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
return sorted_set;
})()
;
/**
* Returns a new sorted set with supplied keys, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_set_by = (function() { 
var sorted_set_by__delegate = function (comparator,keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,(new cljs.core.PersistentTreeSet(null,cljs.core.sorted_map_by(comparator),(0))),keys);
};
var sorted_set_by = function (comparator,var_args){
var keys = null;
if (arguments.length > 1) {
var G__11470__i = 0, G__11470__a = new Array(arguments.length -  1);
while (G__11470__i < G__11470__a.length) {G__11470__a[G__11470__i] = arguments[G__11470__i + 1]; ++G__11470__i;}
  keys = new cljs.core.IndexedSeq(G__11470__a,0);
} 
return sorted_set_by__delegate.call(this,comparator,keys);};
sorted_set_by.cljs$lang$maxFixedArity = 1;
sorted_set_by.cljs$lang$applyTo = (function (arglist__11471){
var comparator = cljs.core.first(arglist__11471);
var keys = cljs.core.rest(arglist__11471);
return sorted_set_by__delegate(comparator,keys);
});
sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
return sorted_set_by;
})()
;
/**
* Given a map of replacement pairs and a vector/collection, returns a
* vector/seq with any elements = a key in smap replaced with the
* corresponding val in smap.  Returns a transducer when no collection
* is provided.
*/
cljs.core.replace = (function() {
var replace = null;
var replace__1 = (function (smap){
return cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__11472_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__11472_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.val(e);
} else {
return p1__11472_SHARP_;
}
}));
});
var replace__2 = (function (smap,coll){
if(cljs.core.vector_QMARK_(coll)){
var n = cljs.core.count(coll);
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (n){
return (function (v,i){
var temp__4124__auto__ = cljs.core.find(smap,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,i));
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v,i,cljs.core.second(e));
} else {
return v;
}
});})(n))
,coll,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.iterate(cljs.core.inc,(0))));
} else {
return cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__11473_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__11473_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.second(e);
} else {
return p1__11473_SHARP_;
}
}),coll);
}
});
replace = function(smap,coll){
switch(arguments.length){
case 1:
return replace__1.call(this,smap);
case 2:
return replace__2.call(this,smap,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
return replace;
})()
;
/**
* Returns a lazy sequence of the elements of coll with duplicates removed
*/
cljs.core.distinct = (function() {
var distinct = null;
var distinct__0 = (function (){
return (function (rf){
var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
return ((function (seen){
return (function() {
var G__11494 = null;
var G__11494__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__11494__1 = (function (result){
var G__11484 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__11484) : rf.call(null,G__11484));
});
var G__11494__2 = (function (result,input){
if(cljs.core.contains_QMARK_((function (){var G__11485 = seen;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11485) : cljs.core.deref.call(null,G__11485));
})(),input)){
return result;
} else {
seen.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen.cljs$core$IDeref$_deref$arity$1(null),input));

var G__11486 = result;
var G__11487 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__11486,G__11487) : rf.call(null,G__11486,G__11487));
}
});
G__11494 = function(result,input){
switch(arguments.length){
case 0:
return G__11494__0.call(this);
case 1:
return G__11494__1.call(this,result);
case 2:
return G__11494__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11494.cljs$core$IFn$_invoke$arity$0 = G__11494__0;
G__11494.cljs$core$IFn$_invoke$arity$1 = G__11494__1;
G__11494.cljs$core$IFn$_invoke$arity$2 = G__11494__2;
return G__11494;
})()
;})(seen))
});
});
var distinct__1 = (function (coll){
var step = (function step(xs,seen){
return (new cljs.core.LazySeq(null,(function (){
return (function (p__11492,seen__$1){
while(true){
var vec__11493 = p__11492;
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11493,(0),null);
var xs__$1 = vec__11493;
var temp__4126__auto__ = cljs.core.seq(xs__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.contains_QMARK_(seen__$1,f)){
var G__11495 = cljs.core.rest(s);
var G__11496 = seen__$1;
p__11492 = G__11495;
seen__$1 = G__11496;
continue;
} else {
return cljs.core.cons(f,step(cljs.core.rest(s),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1,f)));
}
} else {
return null;
}
break;
}
}).call(null,xs,seen);
}),null,null));
});
return step(coll,cljs.core.PersistentHashSet.EMPTY);
});
distinct = function(coll){
switch(arguments.length){
case 0:
return distinct__0.call(this);
case 1:
return distinct__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct.cljs$core$IFn$_invoke$arity$0 = distinct__0;
distinct.cljs$core$IFn$_invoke$arity$1 = distinct__1;
return distinct;
})()
;
cljs.core.butlast = (function butlast(s){
var ret = cljs.core.PersistentVector.EMPTY;
var s__$1 = s;
while(true){
if(cljs.core.next(s__$1)){
var G__11497 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret,cljs.core.first(s__$1));
var G__11498 = cljs.core.next(s__$1);
ret = G__11497;
s__$1 = G__11498;
continue;
} else {
return cljs.core.seq(ret);
}
break;
}
});
/**
* Returns the name String of a string, symbol or keyword.
*/
cljs.core.name = (function name(x){
if((function (){var G__11500 = x;
if(G__11500){
var bit__5394__auto__ = (G__11500.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__5394__auto__) || (G__11500.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_name$arity$1(null);
} else {
if(typeof x === 'string'){
return x;
} else {
throw (new Error([cljs.core.str("Doesn't support name: "),cljs.core.str(x)].join('')));
}
}
});
/**
* Returns a map with the keys mapped to the corresponding vals.
*/
cljs.core.zipmap = (function zipmap(keys,vals){
var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
var ks = cljs.core.seq(keys);
var vs = cljs.core.seq(vals);
while(true){
if((ks) && (vs)){
var G__11501 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map,cljs.core.first(ks),cljs.core.first(vs));
var G__11502 = cljs.core.next(ks);
var G__11503 = cljs.core.next(vs);
map = G__11501;
ks = G__11502;
vs = G__11503;
continue;
} else {
return cljs.core.persistent_BANG_(map);
}
break;
}
});
/**
* Returns the x for which (k x), a number, is greatest.
* @param {...*} var_args
*/
cljs.core.max_key = (function() {
var max_key = null;
var max_key__2 = (function (k,x){
return x;
});
var max_key__3 = (function (k,x,y){
if(((function (){var G__11514 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__11514) : k.call(null,G__11514));
})() > (function (){var G__11515 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__11515) : k.call(null,G__11515));
})())){
return x;
} else {
return y;
}
});
var max_key__4 = (function() { 
var G__11516__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__11504_SHARP_,p2__11505_SHARP_){
return max_key.cljs$core$IFn$_invoke$arity$3(k,p1__11504_SHARP_,p2__11505_SHARP_);
}),max_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__11516 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__11517__i = 0, G__11517__a = new Array(arguments.length -  3);
while (G__11517__i < G__11517__a.length) {G__11517__a[G__11517__i] = arguments[G__11517__i + 3]; ++G__11517__i;}
  more = new cljs.core.IndexedSeq(G__11517__a,0);
} 
return G__11516__delegate.call(this,k,x,y,more);};
G__11516.cljs$lang$maxFixedArity = 3;
G__11516.cljs$lang$applyTo = (function (arglist__11518){
var k = cljs.core.first(arglist__11518);
arglist__11518 = cljs.core.next(arglist__11518);
var x = cljs.core.first(arglist__11518);
arglist__11518 = cljs.core.next(arglist__11518);
var y = cljs.core.first(arglist__11518);
var more = cljs.core.rest(arglist__11518);
return G__11516__delegate(k,x,y,more);
});
G__11516.cljs$core$IFn$_invoke$arity$variadic = G__11516__delegate;
return G__11516;
})()
;
max_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return max_key__2.call(this,k,x);
case 3:
return max_key__3.call(this,k,x,y);
default:
var G__11519 = null;
if (arguments.length > 3) {
var G__11520__i = 0, G__11520__a = new Array(arguments.length -  3);
while (G__11520__i < G__11520__a.length) {G__11520__a[G__11520__i] = arguments[G__11520__i + 3]; ++G__11520__i;}
G__11519 = new cljs.core.IndexedSeq(G__11520__a,0);
}
return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__11519);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max_key.cljs$lang$maxFixedArity = 3;
max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
return max_key;
})()
;
/**
* Returns the x for which (k x), a number, is least.
* @param {...*} var_args
*/
cljs.core.min_key = (function() {
var min_key = null;
var min_key__2 = (function (k,x){
return x;
});
var min_key__3 = (function (k,x,y){
if(((function (){var G__11531 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__11531) : k.call(null,G__11531));
})() < (function (){var G__11532 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__11532) : k.call(null,G__11532));
})())){
return x;
} else {
return y;
}
});
var min_key__4 = (function() { 
var G__11533__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__11521_SHARP_,p2__11522_SHARP_){
return min_key.cljs$core$IFn$_invoke$arity$3(k,p1__11521_SHARP_,p2__11522_SHARP_);
}),min_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__11533 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__11534__i = 0, G__11534__a = new Array(arguments.length -  3);
while (G__11534__i < G__11534__a.length) {G__11534__a[G__11534__i] = arguments[G__11534__i + 3]; ++G__11534__i;}
  more = new cljs.core.IndexedSeq(G__11534__a,0);
} 
return G__11533__delegate.call(this,k,x,y,more);};
G__11533.cljs$lang$maxFixedArity = 3;
G__11533.cljs$lang$applyTo = (function (arglist__11535){
var k = cljs.core.first(arglist__11535);
arglist__11535 = cljs.core.next(arglist__11535);
var x = cljs.core.first(arglist__11535);
arglist__11535 = cljs.core.next(arglist__11535);
var y = cljs.core.first(arglist__11535);
var more = cljs.core.rest(arglist__11535);
return G__11533__delegate(k,x,y,more);
});
G__11533.cljs$core$IFn$_invoke$arity$variadic = G__11533__delegate;
return G__11533;
})()
;
min_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return min_key__2.call(this,k,x);
case 3:
return min_key__3.call(this,k,x,y);
default:
var G__11536 = null;
if (arguments.length > 3) {
var G__11537__i = 0, G__11537__a = new Array(arguments.length -  3);
while (G__11537__i < G__11537__a.length) {G__11537__a[G__11537__i] = arguments[G__11537__i + 3]; ++G__11537__i;}
G__11536 = new cljs.core.IndexedSeq(G__11537__a,0);
}
return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__11536);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min_key.cljs$lang$maxFixedArity = 3;
min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
return min_key;
})()
;

/**
* @constructor
*/
cljs.core.ArrayList = (function (arr){
this.arr = arr;
})
cljs.core.ArrayList.prototype.add = (function (x){
var self__ = this;
var _ = this;
return self__.arr.push(x);
});

cljs.core.ArrayList.prototype.size = (function (){
var self__ = this;
var _ = this;
return self__.arr.length;
});

cljs.core.ArrayList.prototype.clear = (function (){
var self__ = this;
var _ = this;
return self__.arr = [];
});

cljs.core.ArrayList.prototype.isEmpty = (function (){
var self__ = this;
var _ = this;
return (self__.arr.length === (0));
});

cljs.core.ArrayList.prototype.toArray = (function (){
var self__ = this;
var _ = this;
return self__.arr;
});

cljs.core.ArrayList.cljs$lang$type = true;

cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";

cljs.core.ArrayList.cljs$lang$ctorPrWriter = (function (this__5307__auto__,writer__5308__auto__,opt__5309__auto__){
return cljs.core._write(writer__5308__auto__,"cljs.core/ArrayList");
});

cljs.core.__GT_ArrayList = (function __GT_ArrayList(arr){
return (new cljs.core.ArrayList(arr));
});

cljs.core.array_list = (function array_list(){
return (new cljs.core.ArrayList([]));
});
/**
* Returns a lazy sequence of lists like partition, but may include
* partitions with fewer than n items at the end.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_all = (function() {
var partition_all = null;
var partition_all__1 = (function (n){
return (function (rf){
var a = cljs.core.array_list();
return ((function (a){
return (function() {
var G__11554 = null;
var G__11554__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__11554__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__11549 = result;
var G__11550 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__11549,G__11550) : rf.call(null,G__11549,G__11550));
})());
})());
var G__11551 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__11551) : rf.call(null,G__11551));
});
var G__11554__2 = (function (result,input){
a.add(input);

if((n === a.size())){
var v = cljs.core.vec(a.toArray());
a.clear();

var G__11552 = result;
var G__11553 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__11552,G__11553) : rf.call(null,G__11552,G__11553));
} else {
return result;
}
});
G__11554 = function(result,input){
switch(arguments.length){
case 0:
return G__11554__0.call(this);
case 1:
return G__11554__1.call(this,result);
case 2:
return G__11554__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11554.cljs$core$IFn$_invoke$arity$0 = G__11554__0;
G__11554.cljs$core$IFn$_invoke$arity$1 = G__11554__1;
G__11554.cljs$core$IFn$_invoke$arity$2 = G__11554__2;
return G__11554;
})()
;})(a))
});
});
var partition_all__2 = (function (n,coll){
return partition_all.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition_all__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s),partition_all.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
}),null,null));
});
partition_all = function(n,step,coll){
switch(arguments.length){
case 1:
return partition_all__1.call(this,n);
case 2:
return partition_all__2.call(this,n,step);
case 3:
return partition_all__3.call(this,n,step,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
return partition_all;
})()
;
/**
* Returns a lazy sequence of successive items from coll while
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.take_while = (function() {
var take_while = null;
var take_while__1 = (function (pred){
return (function (rf){
return (function() {
var G__11567 = null;
var G__11567__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__11567__1 = (function (result){
var G__11562 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__11562) : rf.call(null,G__11562));
});
var G__11567__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__11563 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__11563) : pred.call(null,G__11563));
})())){
var G__11564 = result;
var G__11565 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__11564,G__11565) : rf.call(null,G__11564,G__11565));
} else {
return cljs.core.reduced(result);
}
});
G__11567 = function(result,input){
switch(arguments.length){
case 0:
return G__11567__0.call(this);
case 1:
return G__11567__1.call(this,result);
case 2:
return G__11567__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11567.cljs$core$IFn$_invoke$arity$0 = G__11567__0;
G__11567.cljs$core$IFn$_invoke$arity$1 = G__11567__1;
G__11567.cljs$core$IFn$_invoke$arity$2 = G__11567__2;
return G__11567;
})()
});
});
var take_while__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.truth_((function (){var G__11566 = cljs.core.first(s);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__11566) : pred.call(null,G__11566));
})())){
return cljs.core.cons(cljs.core.first(s),take_while.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take_while = function(pred,coll){
switch(arguments.length){
case 1:
return take_while__1.call(this,pred);
case 2:
return take_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
return take_while;
})()
;
cljs.core.mk_bound_fn = (function mk_bound_fn(sc,test,key){
return (function (e){
var comp = cljs.core._comparator(sc);
var G__11572 = (function (){var G__11574 = cljs.core._entry_key(sc,e);
var G__11575 = key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__11574,G__11575) : comp.call(null,G__11574,G__11575));
})();
var G__11573 = (0);
return (test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__11572,G__11573) : test.call(null,G__11572,G__11573));
});
});
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.subseq = (function() {
var subseq = null;
var subseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_,cljs.core._GT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__11579 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11579,(0),null);
var s = vec__11579;
if(cljs.core.truth_((function (){var G__11580 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__11580) : include.call(null,G__11580));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,true));
}
});
var subseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,start_key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__11581 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11581,(0),null);
var s = vec__11581;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,end_test,end_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,start_test,start_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
subseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return subseq__3.call(this,sc,start_test,start_key);
case 5:
return subseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
return subseq;
})()
;
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a reverse seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.rsubseq = (function() {
var rsubseq = null;
var rsubseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_,cljs.core._LT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__11585 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11585,(0),null);
var s = vec__11585;
if(cljs.core.truth_((function (){var G__11586 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__11586) : include.call(null,G__11586));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,false));
}
});
var rsubseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,end_key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__11587 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11587,(0),null);
var s = vec__11587;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,start_test,start_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,end_test,end_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
rsubseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return rsubseq__3.call(this,sc,start_test,start_key);
case 5:
return rsubseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
return rsubseq;
})()
;

/**
* @constructor
*/
cljs.core.RangeIterator = (function (i,end,step){
this.i = i;
this.end = end;
this.step = step;
})
cljs.core.RangeIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__.step > (0))){
return (self__.i < self__.end);
} else {
return (self__.i > self__.end);
}
});

cljs.core.RangeIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.i;
self__.i = (self__.i + self__.step);

return ret;
});

cljs.core.RangeIterator.cljs$lang$type = true;

cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";

cljs.core.RangeIterator.cljs$lang$ctorPrWriter = (function (this__5307__auto__,writer__5308__auto__,opt__5309__auto__){
return cljs.core._write(writer__5308__auto__,"cljs.core/RangeIterator");
});

cljs.core.__GT_RangeIterator = (function __GT_RangeIterator(i,end,step){
return (new cljs.core.RangeIterator(i,end,step));
});


/**
* @constructor
*/
cljs.core.Range = (function (meta,start,end,step,__hash){
this.meta = meta;
this.start = start;
this.end = end;
this.step = step;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375006;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Range.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Range.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (rng,n){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
throw (new Error("Index out of bounds"));
}
}
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (rng,n,not_found){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
return not_found;
}
}
});

cljs.core.Range.prototype.cljs$core$IIterable$ = true;

cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RangeIterator(self__.start,self__.end,self__.step));
});

cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return self__.meta;
});

cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Range(self__.meta,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if(((self__.start + self__.step) < self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
} else {
if(((self__.start + self__.step) > self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(cljs.core.not(cljs.core._seq(rng__$1))){
return (0);
} else {
var G__11588 = ((self__.end - self__.start) / self__.step);
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__11588) : Math.ceil.call(null,G__11588));
}
});

cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
var h__5141__auto__ = self__.__hash;
if(!((h__5141__auto__ == null))){
return h__5141__auto__;
} else {
var h__5141__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
self__.__hash = h__5141__auto____$1;

return h__5141__auto____$1;
}
});

cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (rng,other){
var self__ = this;
var rng__$1 = this;
return cljs.core.equiv_sequential(rng__$1,other);
});

cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (rng,f){
var self__ = this;
var rng__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1,f);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (rng,f,init){
var self__ = this;
var rng__$1 = this;
var i = self__.start;
var ret = init;
while(true){
if((((self__.step > (0)))?(i < self__.end):(i > self__.end))){
var ret__$1 = (function (){var G__11589 = ret;
var G__11590 = i;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11589,G__11590) : f.call(null,G__11589,G__11590));
})();
if(cljs.core.reduced_QMARK_(ret__$1)){
var G__11591 = ret__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11591) : cljs.core.deref.call(null,G__11591));
} else {
var G__11592 = (i + self__.step);
var G__11593 = ret__$1;
i = G__11592;
ret = G__11593;
continue;
}
} else {
return ret;
}
break;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((cljs.core._seq(rng__$1) == null)){
return null;
} else {
return self__.start;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(!((cljs.core._seq(rng__$1) == null))){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if((self__.start < self__.end)){
return rng__$1;
} else {
return null;
}
} else {
if((self__.start > self__.end)){
return rng__$1;
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (rng,meta__$1){
var self__ = this;
var rng__$1 = this;
return (new cljs.core.Range(meta__$1,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = (function (rng,o){
var self__ = this;
var rng__$1 = this;
return cljs.core.cons(o,rng__$1);
});

cljs.core.Range.cljs$lang$type = true;

cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";

cljs.core.Range.cljs$lang$ctorPrWriter = (function (this__5307__auto__,writer__5308__auto__,opt__5309__auto__){
return cljs.core._write(writer__5308__auto__,"cljs.core/Range");
});

cljs.core.__GT_Range = (function __GT_Range(meta,start,end,step,__hash){
return (new cljs.core.Range(meta,start,end,step,__hash));
});

(cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5698__auto__ = this;
return cljs.core.es6_iterator(this__5698__auto__);
}));
/**
* Returns a lazy seq of nums from start (inclusive) to end
* (exclusive), by step, where start defaults to 0, step to 1,
* and end to infinity.
*/
cljs.core.range = (function() {
var range = null;
var range__0 = (function (){
return range.cljs$core$IFn$_invoke$arity$3((0),Number.MAX_VALUE,(1));
});
var range__1 = (function (end){
return range.cljs$core$IFn$_invoke$arity$3((0),end,(1));
});
var range__2 = (function (start,end){
return range.cljs$core$IFn$_invoke$arity$3(start,end,(1));
});
var range__3 = (function (start,end,step){
return (new cljs.core.Range(null,start,end,step,null));
});
range = function(start,end,step){
switch(arguments.length){
case 0:
return range__0.call(this);
case 1:
return range__1.call(this,start);
case 2:
return range__2.call(this,start,end);
case 3:
return range__3.call(this,start,end,step);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
range.cljs$core$IFn$_invoke$arity$0 = range__0;
range.cljs$core$IFn$_invoke$arity$1 = range__1;
range.cljs$core$IFn$_invoke$arity$2 = range__2;
range.cljs$core$IFn$_invoke$arity$3 = range__3;
return range;
})()
;
/**
* Returns a lazy seq of every nth item in coll.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.take_nth = (function() {
var take_nth = null;
var take_nth__1 = (function (n){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__11611 = null;
var G__11611__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__11611__1 = (function (result){
var G__11608 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__11608) : rf.call(null,G__11608));
});
var G__11611__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
if((cljs.core.rem(i,n) === (0))){
var G__11609 = result;
var G__11610 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__11609,G__11610) : rf.call(null,G__11609,G__11610));
} else {
return result;
}
});
G__11611 = function(result,input){
switch(arguments.length){
case 0:
return G__11611__0.call(this);
case 1:
return G__11611__1.call(this,result);
case 2:
return G__11611__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11611.cljs$core$IFn$_invoke$arity$0 = G__11611__0;
G__11611.cljs$core$IFn$_invoke$arity$1 = G__11611__1;
G__11611.cljs$core$IFn$_invoke$arity$2 = G__11611__2;
return G__11611;
})()
;})(ia))
});
});
var take_nth__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take_nth.cljs$core$IFn$_invoke$arity$2(n,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s)));
} else {
return null;
}
}),null,null));
});
take_nth = function(n,coll){
switch(arguments.length){
case 1:
return take_nth__1.call(this,n);
case 2:
return take_nth__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
return take_nth;
})()
;
/**
* Returns a vector of [(take-while pred coll) (drop-while pred coll)]
*/
cljs.core.split_with = (function split_with(pred,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred,coll),cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred,coll)], null);
});
/**
* Applies f to each value in coll, splitting it each time f returns a
* new value.  Returns a lazy seq of partitions.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_by = (function() {
var partition_by = null;
var partition_by__1 = (function (f){
return (function (rf){
var a = cljs.core.array_list();
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (a,pa){
return (function() {
var G__11633 = null;
var G__11633__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__11633__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__11624 = result;
var G__11625 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__11624,G__11625) : rf.call(null,G__11624,G__11625));
})());
})());
var G__11626 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__11626) : rf.call(null,G__11626));
});
var G__11633__2 = (function (result,input){
var pval = (function (){var G__11627 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11627) : cljs.core.deref.call(null,G__11627));
})();
var val = (function (){var G__11628 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11628) : f.call(null,G__11628));
})();
cljs.core.vreset_BANG_(pa,val);

if((cljs.core.keyword_identical_QMARK_(pval,new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439))) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val,pval))){
a.add(input);

return result;
} else {
var v = cljs.core.vec(a.toArray());
a.clear();

var ret = (function (){var G__11629 = result;
var G__11630 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__11629,G__11630) : rf.call(null,G__11629,G__11630));
})();
if(cljs.core.reduced_QMARK_(ret)){
} else {
a.add(input);
}

return ret;
}
});
G__11633 = function(result,input){
switch(arguments.length){
case 0:
return G__11633__0.call(this);
case 1:
return G__11633__1.call(this,result);
case 2:
return G__11633__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11633.cljs$core$IFn$_invoke$arity$0 = G__11633__0;
G__11633.cljs$core$IFn$_invoke$arity$1 = G__11633__1;
G__11633.cljs$core$IFn$_invoke$arity$2 = G__11633__2;
return G__11633;
})()
;})(a,pa))
});
});
var partition_by__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var fst = cljs.core.first(s);
var fv = (function (){var G__11631 = fst;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11631) : f.call(null,G__11631));
})();
var run = cljs.core.cons(fst,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(((function (fst,fv,s,temp__4126__auto__){
return (function (p1__11612_SHARP_){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv,(function (){var G__11632 = p1__11612_SHARP_;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11632) : f.call(null,G__11632));
})());
});})(fst,fv,s,temp__4126__auto__))
,cljs.core.next(s)));
return cljs.core.cons(run,partition_by.cljs$core$IFn$_invoke$arity$2(f,cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run),s))));
} else {
return null;
}
}),null,null));
});
partition_by = function(f,coll){
switch(arguments.length){
case 1:
return partition_by__1.call(this,f);
case 2:
return partition_by__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
return partition_by;
})()
;
/**
* Returns a map from distinct items in coll to the number of times
* they appear.
*/
cljs.core.frequencies = (function frequencies(coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (counts,x){
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts,x,(cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts,x,(0)) + (1)));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Returns a lazy seq of the intermediate values of the reduction (as
* per reduce) of coll by f, starting with init.
*/
cljs.core.reductions = (function() {
var reductions = null;
var reductions__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,cljs.core.first(s),cljs.core.rest(s));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
}
}),null,null));
});
var reductions__3 = (function (f,init,coll){
return cljs.core.cons(init,(new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,(function (){var G__11642 = init;
var G__11643 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11642,G__11643) : f.call(null,G__11642,G__11643));
})(),cljs.core.rest(s));
} else {
return null;
}
}),null,null)));
});
reductions = function(f,init,coll){
switch(arguments.length){
case 2:
return reductions__2.call(this,f,init);
case 3:
return reductions__3.call(this,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
return reductions;
})()
;
/**
* Takes a set of functions and returns a fn that is the juxtaposition
* of those fns.  The returned fn takes a variable number of args, and
* returns a vector containing the result of applying each fn to the
* args (left-to-right).
* ((juxt a b c) x) => [(a x) (b x) (c x)]
* @param {...*} var_args
*/
cljs.core.juxt = (function() {
var juxt = null;
var juxt__1 = (function (f){
return (function() {
var G__11738 = null;
var G__11738__0 = (function (){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})()],null));
});
var G__11738__1 = (function (x){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__11696 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11696) : f.call(null,G__11696));
})()],null));
});
var G__11738__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__11697 = x;
var G__11698 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11697,G__11698) : f.call(null,G__11697,G__11698));
})()],null));
});
var G__11738__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__11699 = x;
var G__11700 = y;
var G__11701 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__11699,G__11700,G__11701) : f.call(null,G__11699,G__11700,G__11701));
})()],null));
});
var G__11738__4 = (function() { 
var G__11739__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args)],null));
};
var G__11739 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__11740__i = 0, G__11740__a = new Array(arguments.length -  3);
while (G__11740__i < G__11740__a.length) {G__11740__a[G__11740__i] = arguments[G__11740__i + 3]; ++G__11740__i;}
  args = new cljs.core.IndexedSeq(G__11740__a,0);
} 
return G__11739__delegate.call(this,x,y,z,args);};
G__11739.cljs$lang$maxFixedArity = 3;
G__11739.cljs$lang$applyTo = (function (arglist__11741){
var x = cljs.core.first(arglist__11741);
arglist__11741 = cljs.core.next(arglist__11741);
var y = cljs.core.first(arglist__11741);
arglist__11741 = cljs.core.next(arglist__11741);
var z = cljs.core.first(arglist__11741);
var args = cljs.core.rest(arglist__11741);
return G__11739__delegate(x,y,z,args);
});
G__11739.cljs$core$IFn$_invoke$arity$variadic = G__11739__delegate;
return G__11739;
})()
;
G__11738 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__11738__0.call(this);
case 1:
return G__11738__1.call(this,x);
case 2:
return G__11738__2.call(this,x,y);
case 3:
return G__11738__3.call(this,x,y,z);
default:
var G__11742 = null;
if (arguments.length > 3) {
var G__11743__i = 0, G__11743__a = new Array(arguments.length -  3);
while (G__11743__i < G__11743__a.length) {G__11743__a[G__11743__i] = arguments[G__11743__i + 3]; ++G__11743__i;}
G__11742 = new cljs.core.IndexedSeq(G__11743__a,0);
}
return G__11738__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__11742);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11738.cljs$lang$maxFixedArity = 3;
G__11738.cljs$lang$applyTo = G__11738__4.cljs$lang$applyTo;
G__11738.cljs$core$IFn$_invoke$arity$0 = G__11738__0;
G__11738.cljs$core$IFn$_invoke$arity$1 = G__11738__1;
G__11738.cljs$core$IFn$_invoke$arity$2 = G__11738__2;
G__11738.cljs$core$IFn$_invoke$arity$3 = G__11738__3;
G__11738.cljs$core$IFn$_invoke$arity$variadic = G__11738__4.cljs$core$IFn$_invoke$arity$variadic;
return G__11738;
})()
});
var juxt__2 = (function (f,g){
return (function() {
var G__11744 = null;
var G__11744__0 = (function (){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})()],null));
});
var G__11744__1 = (function (x){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__11702 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11702) : f.call(null,G__11702));
})(),(function (){var G__11703 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__11703) : g.call(null,G__11703));
})()],null));
});
var G__11744__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__11704 = x;
var G__11705 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11704,G__11705) : f.call(null,G__11704,G__11705));
})(),(function (){var G__11706 = x;
var G__11707 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__11706,G__11707) : g.call(null,G__11706,G__11707));
})()],null));
});
var G__11744__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__11708 = x;
var G__11709 = y;
var G__11710 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__11708,G__11709,G__11710) : f.call(null,G__11708,G__11709,G__11710));
})(),(function (){var G__11711 = x;
var G__11712 = y;
var G__11713 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__11711,G__11712,G__11713) : g.call(null,G__11711,G__11712,G__11713));
})()],null));
});
var G__11744__4 = (function() { 
var G__11745__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args)],null));
};
var G__11745 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__11746__i = 0, G__11746__a = new Array(arguments.length -  3);
while (G__11746__i < G__11746__a.length) {G__11746__a[G__11746__i] = arguments[G__11746__i + 3]; ++G__11746__i;}
  args = new cljs.core.IndexedSeq(G__11746__a,0);
} 
return G__11745__delegate.call(this,x,y,z,args);};
G__11745.cljs$lang$maxFixedArity = 3;
G__11745.cljs$lang$applyTo = (function (arglist__11747){
var x = cljs.core.first(arglist__11747);
arglist__11747 = cljs.core.next(arglist__11747);
var y = cljs.core.first(arglist__11747);
arglist__11747 = cljs.core.next(arglist__11747);
var z = cljs.core.first(arglist__11747);
var args = cljs.core.rest(arglist__11747);
return G__11745__delegate(x,y,z,args);
});
G__11745.cljs$core$IFn$_invoke$arity$variadic = G__11745__delegate;
return G__11745;
})()
;
G__11744 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__11744__0.call(this);
case 1:
return G__11744__1.call(this,x);
case 2:
return G__11744__2.call(this,x,y);
case 3:
return G__11744__3.call(this,x,y,z);
default:
var G__11748 = null;
if (arguments.length > 3) {
var G__11749__i = 0, G__11749__a = new Array(arguments.length -  3);
while (G__11749__i < G__11749__a.length) {G__11749__a[G__11749__i] = arguments[G__11749__i + 3]; ++G__11749__i;}
G__11748 = new cljs.core.IndexedSeq(G__11749__a,0);
}
return G__11744__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__11748);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11744.cljs$lang$maxFixedArity = 3;
G__11744.cljs$lang$applyTo = G__11744__4.cljs$lang$applyTo;
G__11744.cljs$core$IFn$_invoke$arity$0 = G__11744__0;
G__11744.cljs$core$IFn$_invoke$arity$1 = G__11744__1;
G__11744.cljs$core$IFn$_invoke$arity$2 = G__11744__2;
G__11744.cljs$core$IFn$_invoke$arity$3 = G__11744__3;
G__11744.cljs$core$IFn$_invoke$arity$variadic = G__11744__4.cljs$core$IFn$_invoke$arity$variadic;
return G__11744;
})()
});
var juxt__3 = (function (f,g,h){
return (function() {
var G__11750 = null;
var G__11750__0 = (function (){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})(),(function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})()],null));
});
var G__11750__1 = (function (x){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__11714 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11714) : f.call(null,G__11714));
})(),(function (){var G__11715 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__11715) : g.call(null,G__11715));
})(),(function (){var G__11716 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__11716) : h.call(null,G__11716));
})()],null));
});
var G__11750__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__11717 = x;
var G__11718 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11717,G__11718) : f.call(null,G__11717,G__11718));
})(),(function (){var G__11719 = x;
var G__11720 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__11719,G__11720) : g.call(null,G__11719,G__11720));
})(),(function (){var G__11721 = x;
var G__11722 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__11721,G__11722) : h.call(null,G__11721,G__11722));
})()],null));
});
var G__11750__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__11723 = x;
var G__11724 = y;
var G__11725 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__11723,G__11724,G__11725) : f.call(null,G__11723,G__11724,G__11725));
})(),(function (){var G__11726 = x;
var G__11727 = y;
var G__11728 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__11726,G__11727,G__11728) : g.call(null,G__11726,G__11727,G__11728));
})(),(function (){var G__11729 = x;
var G__11730 = y;
var G__11731 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__11729,G__11730,G__11731) : h.call(null,G__11729,G__11730,G__11731));
})()],null));
});
var G__11750__4 = (function() { 
var G__11751__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args)],null));
};
var G__11751 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__11752__i = 0, G__11752__a = new Array(arguments.length -  3);
while (G__11752__i < G__11752__a.length) {G__11752__a[G__11752__i] = arguments[G__11752__i + 3]; ++G__11752__i;}
  args = new cljs.core.IndexedSeq(G__11752__a,0);
} 
return G__11751__delegate.call(this,x,y,z,args);};
G__11751.cljs$lang$maxFixedArity = 3;
G__11751.cljs$lang$applyTo = (function (arglist__11753){
var x = cljs.core.first(arglist__11753);
arglist__11753 = cljs.core.next(arglist__11753);
var y = cljs.core.first(arglist__11753);
arglist__11753 = cljs.core.next(arglist__11753);
var z = cljs.core.first(arglist__11753);
var args = cljs.core.rest(arglist__11753);
return G__11751__delegate(x,y,z,args);
});
G__11751.cljs$core$IFn$_invoke$arity$variadic = G__11751__delegate;
return G__11751;
})()
;
G__11750 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__11750__0.call(this);
case 1:
return G__11750__1.call(this,x);
case 2:
return G__11750__2.call(this,x,y);
case 3:
return G__11750__3.call(this,x,y,z);
default:
var G__11754 = null;
if (arguments.length > 3) {
var G__11755__i = 0, G__11755__a = new Array(arguments.length -  3);
while (G__11755__i < G__11755__a.length) {G__11755__a[G__11755__i] = arguments[G__11755__i + 3]; ++G__11755__i;}
G__11754 = new cljs.core.IndexedSeq(G__11755__a,0);
}
return G__11750__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__11754);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11750.cljs$lang$maxFixedArity = 3;
G__11750.cljs$lang$applyTo = G__11750__4.cljs$lang$applyTo;
G__11750.cljs$core$IFn$_invoke$arity$0 = G__11750__0;
G__11750.cljs$core$IFn$_invoke$arity$1 = G__11750__1;
G__11750.cljs$core$IFn$_invoke$arity$2 = G__11750__2;
G__11750.cljs$core$IFn$_invoke$arity$3 = G__11750__3;
G__11750.cljs$core$IFn$_invoke$arity$variadic = G__11750__4.cljs$core$IFn$_invoke$arity$variadic;
return G__11750;
})()
});
var juxt__4 = (function() { 
var G__11756__delegate = function (f,g,h,fs){
var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f,g,h,fs);
return ((function (fs__$1){
return (function() {
var G__11757 = null;
var G__11757__0 = (function (){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__11644_SHARP_,p2__11645_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__11644_SHARP_,(function (){return (p2__11645_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__11645_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__11645_SHARP_.call(null));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__11757__1 = (function (x){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__11646_SHARP_,p2__11647_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__11646_SHARP_,(function (){var G__11732 = x;
return (p2__11647_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__11647_SHARP_.cljs$core$IFn$_invoke$arity$1(G__11732) : p2__11647_SHARP_.call(null,G__11732));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__11757__2 = (function (x,y){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__11648_SHARP_,p2__11649_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__11648_SHARP_,(function (){var G__11733 = x;
var G__11734 = y;
return (p2__11649_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__11649_SHARP_.cljs$core$IFn$_invoke$arity$2(G__11733,G__11734) : p2__11649_SHARP_.call(null,G__11733,G__11734));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__11757__3 = (function (x,y,z){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__11650_SHARP_,p2__11651_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__11650_SHARP_,(function (){var G__11735 = x;
var G__11736 = y;
var G__11737 = z;
return (p2__11651_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__11651_SHARP_.cljs$core$IFn$_invoke$arity$3(G__11735,G__11736,G__11737) : p2__11651_SHARP_.call(null,G__11735,G__11736,G__11737));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__11757__4 = (function() { 
var G__11758__delegate = function (x,y,z,args){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__11652_SHARP_,p2__11653_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__11652_SHARP_,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__11653_SHARP_,x,y,z,args));
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
};
var G__11758 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__11759__i = 0, G__11759__a = new Array(arguments.length -  3);
while (G__11759__i < G__11759__a.length) {G__11759__a[G__11759__i] = arguments[G__11759__i + 3]; ++G__11759__i;}
  args = new cljs.core.IndexedSeq(G__11759__a,0);
} 
return G__11758__delegate.call(this,x,y,z,args);};
G__11758.cljs$lang$maxFixedArity = 3;
G__11758.cljs$lang$applyTo = (function (arglist__11760){
var x = cljs.core.first(arglist__11760);
arglist__11760 = cljs.core.next(arglist__11760);
var y = cljs.core.first(arglist__11760);
arglist__11760 = cljs.core.next(arglist__11760);
var z = cljs.core.first(arglist__11760);
var args = cljs.core.rest(arglist__11760);
return G__11758__delegate(x,y,z,args);
});
G__11758.cljs$core$IFn$_invoke$arity$variadic = G__11758__delegate;
return G__11758;
})()
;
G__11757 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__11757__0.call(this);
case 1:
return G__11757__1.call(this,x);
case 2:
return G__11757__2.call(this,x,y);
case 3:
return G__11757__3.call(this,x,y,z);
default:
var G__11761 = null;
if (arguments.length > 3) {
var G__11762__i = 0, G__11762__a = new Array(arguments.length -  3);
while (G__11762__i < G__11762__a.length) {G__11762__a[G__11762__i] = arguments[G__11762__i + 3]; ++G__11762__i;}
G__11761 = new cljs.core.IndexedSeq(G__11762__a,0);
}
return G__11757__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__11761);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11757.cljs$lang$maxFixedArity = 3;
G__11757.cljs$lang$applyTo = G__11757__4.cljs$lang$applyTo;
G__11757.cljs$core$IFn$_invoke$arity$0 = G__11757__0;
G__11757.cljs$core$IFn$_invoke$arity$1 = G__11757__1;
G__11757.cljs$core$IFn$_invoke$arity$2 = G__11757__2;
G__11757.cljs$core$IFn$_invoke$arity$3 = G__11757__3;
G__11757.cljs$core$IFn$_invoke$arity$variadic = G__11757__4.cljs$core$IFn$_invoke$arity$variadic;
return G__11757;
})()
;})(fs__$1))
};
var G__11756 = function (f,g,h,var_args){
var fs = null;
if (arguments.length > 3) {
var G__11763__i = 0, G__11763__a = new Array(arguments.length -  3);
while (G__11763__i < G__11763__a.length) {G__11763__a[G__11763__i] = arguments[G__11763__i + 3]; ++G__11763__i;}
  fs = new cljs.core.IndexedSeq(G__11763__a,0);
} 
return G__11756__delegate.call(this,f,g,h,fs);};
G__11756.cljs$lang$maxFixedArity = 3;
G__11756.cljs$lang$applyTo = (function (arglist__11764){
var f = cljs.core.first(arglist__11764);
arglist__11764 = cljs.core.next(arglist__11764);
var g = cljs.core.first(arglist__11764);
arglist__11764 = cljs.core.next(arglist__11764);
var h = cljs.core.first(arglist__11764);
var fs = cljs.core.rest(arglist__11764);
return G__11756__delegate(f,g,h,fs);
});
G__11756.cljs$core$IFn$_invoke$arity$variadic = G__11756__delegate;
return G__11756;
})()
;
juxt = function(f,g,h,var_args){
var fs = var_args;
switch(arguments.length){
case 1:
return juxt__1.call(this,f);
case 2:
return juxt__2.call(this,f,g);
case 3:
return juxt__3.call(this,f,g,h);
default:
var G__11765 = null;
if (arguments.length > 3) {
var G__11766__i = 0, G__11766__a = new Array(arguments.length -  3);
while (G__11766__i < G__11766__a.length) {G__11766__a[G__11766__i] = arguments[G__11766__i + 3]; ++G__11766__i;}
G__11765 = new cljs.core.IndexedSeq(G__11766__a,0);
}
return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f,g,h, G__11765);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
juxt.cljs$lang$maxFixedArity = 3;
juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
return juxt;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. dorun can
* be used to force any effects. Walks through the successive nexts of
* the seq, does not retain the head and returns nil.
*/
cljs.core.dorun = (function() {
var dorun = null;
var dorun__1 = (function (coll){
while(true){
if(cljs.core.seq(coll)){
var G__11767 = cljs.core.next(coll);
coll = G__11767;
continue;
} else {
return null;
}
break;
}
});
var dorun__2 = (function (n,coll){
while(true){
if((cljs.core.seq(coll)) && ((n > (0)))){
var G__11768 = (n - (1));
var G__11769 = cljs.core.next(coll);
n = G__11768;
coll = G__11769;
continue;
} else {
return null;
}
break;
}
});
dorun = function(n,coll){
switch(arguments.length){
case 1:
return dorun__1.call(this,n);
case 2:
return dorun__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
return dorun;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. doall can
* be used to force any effects. Walks through the successive nexts of
* the seq, retains the head and returns it, thus causing the entire
* seq to reside in memory at one time.
*/
cljs.core.doall = (function() {
var doall = null;
var doall__1 = (function (coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);

return coll;
});
var doall__2 = (function (n,coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n,coll);

return coll;
});
doall = function(n,coll){
switch(arguments.length){
case 1:
return doall__1.call(this,n);
case 2:
return doall__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
return doall;
})()
;
cljs.core.regexp_QMARK_ = (function regexp_QMARK_(o){
return (o instanceof RegExp);
});
/**
* Returns the result of (re-find re s) if re fully matches s.
*/
cljs.core.re_matches = (function re_matches(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches),s)){
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
} else {
return null;
}
} else {
throw (new TypeError("re-matches must match against a string."));
}
});
/**
* Returns the first regex match, if any, of s to re, using
* re.exec(s). Returns a vector, containing first the matching
* substring, then any capturing groups if the regular expression contains
* capturing groups.
*/
cljs.core.re_find = (function re_find(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if((matches == null)){
return null;
} else {
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
}
} else {
throw (new TypeError("re-find must match against a string."));
}
});
/**
* Returns a lazy sequence of successive matches of re in s.
*/
cljs.core.re_seq = (function re_seq(re,s){
var match_data = cljs.core.re_find(re,s);
var match_idx = s.search(re);
var match_str = ((cljs.core.coll_QMARK_(match_data))?cljs.core.first(match_data):match_data);
var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(match_idx + cljs.core.count(match_str)));
if(cljs.core.truth_(match_data)){
return (new cljs.core.LazySeq(null,((function (match_data,match_idx,match_str,post_match){
return (function (){
return cljs.core.cons(match_data,((cljs.core.seq(post_match))?re_seq(re,post_match):null));
});})(match_data,match_idx,match_str,post_match))
,null,null));
} else {
return null;
}
});
/**
* Returns an instance of RegExp which has compiled the provided string.
*/
cljs.core.re_pattern = (function re_pattern(s){
if((s instanceof RegExp)){
return s;
} else {
var vec__11773 = cljs.core.re_find(/^(?:\(\?([idmsux]*)\))?(.*)/,s);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11773,(0),null);
var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11773,(1),null);
var pattern = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11773,(2),null);
return (new RegExp(pattern,flags));
}
});
cljs.core.pr_sequential_writer = (function pr_sequential_writer(writer,print_one,begin,sep,end,opts,coll){
var _STAR_print_level_STAR_11781 = cljs.core._STAR_print_level_STAR_;
try{cljs.core._STAR_print_level_STAR_ = (((cljs.core._STAR_print_level_STAR_ == null))?null:(cljs.core._STAR_print_level_STAR_ - (1)));

if((!((cljs.core._STAR_print_level_STAR_ == null))) && ((cljs.core._STAR_print_level_STAR_ < (0)))){
return cljs.core._write(writer,"#");
} else {
cljs.core._write(writer,begin);

if(cljs.core.seq(coll)){
var G__11782_11788 = cljs.core.first(coll);
var G__11783_11789 = writer;
var G__11784_11790 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__11782_11788,G__11783_11789,G__11784_11790) : print_one.call(null,G__11782_11788,G__11783_11789,G__11784_11790));
} else {
}

var coll_11791__$1 = cljs.core.next(coll);
var n_11792 = (new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) - (1));
while(true){
if((coll_11791__$1) && (((n_11792 == null)) || (!((n_11792 === (0)))))){
cljs.core._write(writer,sep);

var G__11785_11793 = cljs.core.first(coll_11791__$1);
var G__11786_11794 = writer;
var G__11787_11795 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__11785_11793,G__11786_11794,G__11787_11795) : print_one.call(null,G__11785_11793,G__11786_11794,G__11787_11795));

var G__11796 = cljs.core.next(coll_11791__$1);
var G__11797 = (n_11792 - (1));
coll_11791__$1 = G__11796;
n_11792 = G__11797;
continue;
} else {
if((cljs.core.seq(coll_11791__$1)) && ((n_11792 === (0)))){
cljs.core._write(writer,sep);

cljs.core._write(writer,"...");
} else {
}
}
break;
}

return cljs.core._write(writer,end);
}
}finally {cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_11781;
}});
/**
* @param {...*} var_args
*/
cljs.core.write_all = (function() { 
var write_all__delegate = function (writer,ss){
var seq__11802 = cljs.core.seq(ss);
var chunk__11803 = null;
var count__11804 = (0);
var i__11805 = (0);
while(true){
if((i__11805 < count__11804)){
var s = chunk__11803.cljs$core$IIndexed$_nth$arity$2(null,i__11805);
cljs.core._write(writer,s);

var G__11806 = seq__11802;
var G__11807 = chunk__11803;
var G__11808 = count__11804;
var G__11809 = (i__11805 + (1));
seq__11802 = G__11806;
chunk__11803 = G__11807;
count__11804 = G__11808;
i__11805 = G__11809;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__11802);
if(temp__4126__auto__){
var seq__11802__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__11802__$1)){
var c__5507__auto__ = cljs.core.chunk_first(seq__11802__$1);
var G__11810 = cljs.core.chunk_rest(seq__11802__$1);
var G__11811 = c__5507__auto__;
var G__11812 = cljs.core.count(c__5507__auto__);
var G__11813 = (0);
seq__11802 = G__11810;
chunk__11803 = G__11811;
count__11804 = G__11812;
i__11805 = G__11813;
continue;
} else {
var s = cljs.core.first(seq__11802__$1);
cljs.core._write(writer,s);

var G__11814 = cljs.core.next(seq__11802__$1);
var G__11815 = null;
var G__11816 = (0);
var G__11817 = (0);
seq__11802 = G__11814;
chunk__11803 = G__11815;
count__11804 = G__11816;
i__11805 = G__11817;
continue;
}
} else {
return null;
}
}
break;
}
};
var write_all = function (writer,var_args){
var ss = null;
if (arguments.length > 1) {
var G__11818__i = 0, G__11818__a = new Array(arguments.length -  1);
while (G__11818__i < G__11818__a.length) {G__11818__a[G__11818__i] = arguments[G__11818__i + 1]; ++G__11818__i;}
  ss = new cljs.core.IndexedSeq(G__11818__a,0);
} 
return write_all__delegate.call(this,writer,ss);};
write_all.cljs$lang$maxFixedArity = 1;
write_all.cljs$lang$applyTo = (function (arglist__11819){
var writer = cljs.core.first(arglist__11819);
var ss = cljs.core.rest(arglist__11819);
return write_all__delegate(writer,ss);
});
write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
return write_all;
})()
;
cljs.core.string_print = (function string_print(x){
(cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null,x));

return null;
});
cljs.core.flush = (function flush(){
return null;
});
cljs.core.char_escapes = (function (){var obj11821 = {"\"":"\\\"","\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t"};
return obj11821;
})();
cljs.core.quote_string = (function quote_string(s){
return [cljs.core.str("\""),cljs.core.str(s.replace((function (){var G__11824 = "[\\\\\"\b\f\n\r\t]";
var G__11825 = "g";
return RegExp(G__11824,G__11825);
})(),(function (match){
return (cljs.core.char_escapes[match]);
}))),cljs.core.str("\"")].join('');
});
/**
* Prefer this to pr-seq, because it makes the printing function
* configurable, allowing efficient implementations such as appending
* to a StringBuffer.
*/
cljs.core.pr_writer = (function pr_writer(obj,writer,opts){
if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if((void 0 === obj)){
return cljs.core._write(writer,"#<undefined>");
} else {
if(cljs.core.truth_((function (){var and__4708__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"meta","meta",1499536964));
if(cljs.core.truth_(and__4708__auto__)){
var and__4708__auto____$1 = (function (){var G__11839 = obj;
if(G__11839){
var bit__5401__auto__ = (G__11839.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__5401__auto__) || (G__11839.cljs$core$IMeta$)){
return true;
} else {
if((!G__11839.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__11839);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__11839);
}
})();
if(and__4708__auto____$1){
return cljs.core.meta(obj);
} else {
return and__4708__auto____$1;
}
} else {
return and__4708__auto__;
}
})())){
cljs.core._write(writer,"^");

pr_writer(cljs.core.meta(obj),writer,opts);

cljs.core._write(writer," ");
} else {
}

if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if(obj.cljs$lang$type){
return obj.cljs$lang$ctorPrWriter(obj,writer,opts);
} else {
if((function (){var G__11840 = obj;
if(G__11840){
var bit__5394__auto__ = (G__11840.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__5394__auto__) || (G__11840.cljs$core$IPrintWithWriter$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,opts);
} else {
if(((cljs.core.type(obj) === Boolean)) || (typeof obj === 'number')){
return cljs.core._write(writer,[cljs.core.str(obj)].join(''));
} else {
if(cljs.core.object_QMARK_(obj)){
cljs.core._write(writer,"#js ");

var G__11841 = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (k){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k),(obj[k])], null);
}),cljs.core.js_keys(obj));
var G__11842 = pr_writer;
var G__11843 = writer;
var G__11844 = opts;
return (cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__11841,G__11842,G__11843,G__11844) : cljs.core.print_map.call(null,G__11841,G__11842,G__11843,G__11844));
} else {
if(obj instanceof Array){
return cljs.core.pr_sequential_writer(writer,pr_writer,"#js ["," ","]",opts,obj);
} else {
if(cljs.core.truth_((function (){var G__11845 = obj;
return goog.isString(G__11845);
})())){
if(cljs.core.truth_(new cljs.core.Keyword(null,"readably","readably",1129599760).cljs$core$IFn$_invoke$arity$1(opts))){
return cljs.core._write(writer,cljs.core.quote_string(obj));
} else {
return cljs.core._write(writer,obj);
}
} else {
if(cljs.core.fn_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));
} else {
if((obj instanceof Date)){
var normalize = (function (n,len){
var ns = [cljs.core.str(n)].join('');
while(true){
if((cljs.core.count(ns) < len)){
var G__11847 = [cljs.core.str("0"),cljs.core.str(ns)].join('');
ns = G__11847;
continue;
} else {
return ns;
}
break;
}
});
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#inst \"",[cljs.core.str(obj.getUTCFullYear())].join(''),"-",normalize((obj.getUTCMonth() + (1)),(2)),"-",normalize(obj.getUTCDate(),(2)),"T",normalize(obj.getUTCHours(),(2)),":",normalize(obj.getUTCMinutes(),(2)),":",normalize(obj.getUTCSeconds(),(2)),".",normalize(obj.getUTCMilliseconds(),(3)),"-","00:00\""], 0));
} else {
if(cljs.core.regexp_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#\"",obj.source,"\""], 0));
} else {
if((function (){var G__11846 = obj;
if(G__11846){
var bit__5401__auto__ = (G__11846.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__5401__auto__) || (G__11846.cljs$core$IPrintWithWriter$)){
return true;
} else {
if((!G__11846.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__11846);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__11846);
}
})()){
return cljs.core._pr_writer(obj,writer,opts);
} else {
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));

}
}
}
}
}
}
}
}
}
}
}

}
}
});
cljs.core.pr_seq_writer = (function pr_seq_writer(objs,writer,opts){
cljs.core.pr_writer(cljs.core.first(objs),writer,opts);

var seq__11852 = cljs.core.seq(cljs.core.next(objs));
var chunk__11853 = null;
var count__11854 = (0);
var i__11855 = (0);
while(true){
if((i__11855 < count__11854)){
var obj = chunk__11853.cljs$core$IIndexed$_nth$arity$2(null,i__11855);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__11856 = seq__11852;
var G__11857 = chunk__11853;
var G__11858 = count__11854;
var G__11859 = (i__11855 + (1));
seq__11852 = G__11856;
chunk__11853 = G__11857;
count__11854 = G__11858;
i__11855 = G__11859;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__11852);
if(temp__4126__auto__){
var seq__11852__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__11852__$1)){
var c__5507__auto__ = cljs.core.chunk_first(seq__11852__$1);
var G__11860 = cljs.core.chunk_rest(seq__11852__$1);
var G__11861 = c__5507__auto__;
var G__11862 = cljs.core.count(c__5507__auto__);
var G__11863 = (0);
seq__11852 = G__11860;
chunk__11853 = G__11861;
count__11854 = G__11862;
i__11855 = G__11863;
continue;
} else {
var obj = cljs.core.first(seq__11852__$1);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__11864 = cljs.core.next(seq__11852__$1);
var G__11865 = null;
var G__11866 = (0);
var G__11867 = (0);
seq__11852 = G__11864;
chunk__11853 = G__11865;
count__11854 = G__11866;
i__11855 = G__11867;
continue;
}
} else {
return null;
}
}
break;
}
});
cljs.core.pr_sb_with_opts = (function pr_sb_with_opts(objs,opts){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
cljs.core.pr_seq_writer(objs,writer,opts);

writer.cljs$core$IWriter$_flush$arity$1(null);

return sb;
});
/**
* Prints a sequence of objects to a string, observing all the
* options given in opts
*/
cljs.core.pr_str_with_opts = (function pr_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "";
} else {
return [cljs.core.str(cljs.core.pr_sb_with_opts(objs,opts))].join('');
}
});
/**
* Same as pr-str-with-opts followed by (newline)
*/
cljs.core.prn_str_with_opts = (function prn_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "\n";
} else {
var sb = cljs.core.pr_sb_with_opts(objs,opts);
sb.append("\n");

return [cljs.core.str(sb)].join('');
}
});
/**
* Prints a sequence of objects using string-print, observing all
* the options given in opts
*/
cljs.core.pr_with_opts = (function pr_with_opts(objs,opts){
return cljs.core.string_print(cljs.core.pr_str_with_opts(objs,opts));
});
cljs.core.newline = (function newline(opts){
cljs.core.string_print("\n");

if(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939)))){
return cljs.core.flush();
} else {
return null;
}
});
/**
* pr to a string, returning it. Fundamental entrypoint to IPrintWithWriter.
* @param {...*} var_args
*/
cljs.core.pr_str = (function() { 
var pr_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.pr_opts());
};
var pr_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__11868__i = 0, G__11868__a = new Array(arguments.length -  0);
while (G__11868__i < G__11868__a.length) {G__11868__a[G__11868__i] = arguments[G__11868__i + 0]; ++G__11868__i;}
  objs = new cljs.core.IndexedSeq(G__11868__a,0);
} 
return pr_str__delegate.call(this,objs);};
pr_str.cljs$lang$maxFixedArity = 0;
pr_str.cljs$lang$applyTo = (function (arglist__11869){
var objs = cljs.core.seq(arglist__11869);
return pr_str__delegate(objs);
});
pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
return pr_str;
})()
;
/**
* Same as pr-str followed by (newline)
* @param {...*} var_args
*/
cljs.core.prn_str = (function() { 
var prn_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.pr_opts());
};
var prn_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__11870__i = 0, G__11870__a = new Array(arguments.length -  0);
while (G__11870__i < G__11870__a.length) {G__11870__a[G__11870__i] = arguments[G__11870__i + 0]; ++G__11870__i;}
  objs = new cljs.core.IndexedSeq(G__11870__a,0);
} 
return prn_str__delegate.call(this,objs);};
prn_str.cljs$lang$maxFixedArity = 0;
prn_str.cljs$lang$applyTo = (function (arglist__11871){
var objs = cljs.core.seq(arglist__11871);
return prn_str__delegate(objs);
});
prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
return prn_str;
})()
;
/**
* Prints the object(s) using string-print.  Prints the
* object(s), separated by spaces if there is more than one.
* By default, pr and prn print in a way that objects can be
* read by the reader
* @param {...*} var_args
*/
cljs.core.pr = (function() { 
var pr__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.pr_opts());
};
var pr = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__11872__i = 0, G__11872__a = new Array(arguments.length -  0);
while (G__11872__i < G__11872__a.length) {G__11872__a[G__11872__i] = arguments[G__11872__i + 0]; ++G__11872__i;}
  objs = new cljs.core.IndexedSeq(G__11872__a,0);
} 
return pr__delegate.call(this,objs);};
pr.cljs$lang$maxFixedArity = 0;
pr.cljs$lang$applyTo = (function (arglist__11873){
var objs = cljs.core.seq(arglist__11873);
return pr__delegate(objs);
});
pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
return pr;
})()
;
/**
* Prints the object(s) using string-print.
* print and println produce output for human consumption.
* @param {...*} var_args
*/
cljs.core.print = (function() { 
var cljs_core_print__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var cljs_core_print = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__11874__i = 0, G__11874__a = new Array(arguments.length -  0);
while (G__11874__i < G__11874__a.length) {G__11874__a[G__11874__i] = arguments[G__11874__i + 0]; ++G__11874__i;}
  objs = new cljs.core.IndexedSeq(G__11874__a,0);
} 
return cljs_core_print__delegate.call(this,objs);};
cljs_core_print.cljs$lang$maxFixedArity = 0;
cljs_core_print.cljs$lang$applyTo = (function (arglist__11875){
var objs = cljs.core.seq(arglist__11875);
return cljs_core_print__delegate(objs);
});
cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
return cljs_core_print;
})()
;
/**
* print to a string, returning it
* @param {...*} var_args
*/
cljs.core.print_str = (function() { 
var print_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var print_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__11876__i = 0, G__11876__a = new Array(arguments.length -  0);
while (G__11876__i < G__11876__a.length) {G__11876__a[G__11876__i] = arguments[G__11876__i + 0]; ++G__11876__i;}
  objs = new cljs.core.IndexedSeq(G__11876__a,0);
} 
return print_str__delegate.call(this,objs);};
print_str.cljs$lang$maxFixedArity = 0;
print_str.cljs$lang$applyTo = (function (arglist__11877){
var objs = cljs.core.seq(arglist__11877);
return print_str__delegate(objs);
});
print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
return print_str;
})()
;
/**
* Same as print followed by (newline)
* @param {...*} var_args
*/
cljs.core.println = (function() { 
var println__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var println = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__11878__i = 0, G__11878__a = new Array(arguments.length -  0);
while (G__11878__i < G__11878__a.length) {G__11878__a[G__11878__i] = arguments[G__11878__i + 0]; ++G__11878__i;}
  objs = new cljs.core.IndexedSeq(G__11878__a,0);
} 
return println__delegate.call(this,objs);};
println.cljs$lang$maxFixedArity = 0;
println.cljs$lang$applyTo = (function (arglist__11879){
var objs = cljs.core.seq(arglist__11879);
return println__delegate(objs);
});
println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
return println;
})()
;
/**
* println to a string, returning it
* @param {...*} var_args
*/
cljs.core.println_str = (function() { 
var println_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var println_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__11880__i = 0, G__11880__a = new Array(arguments.length -  0);
while (G__11880__i < G__11880__a.length) {G__11880__a[G__11880__i] = arguments[G__11880__i + 0]; ++G__11880__i;}
  objs = new cljs.core.IndexedSeq(G__11880__a,0);
} 
return println_str__delegate.call(this,objs);};
println_str.cljs$lang$maxFixedArity = 0;
println_str.cljs$lang$applyTo = (function (arglist__11881){
var objs = cljs.core.seq(arglist__11881);
return println_str__delegate(objs);
});
println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
return println_str;
})()
;
/**
* Same as pr followed by (newline).
* @param {...*} var_args
*/
cljs.core.prn = (function() { 
var prn__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.pr_opts());

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var prn = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__11882__i = 0, G__11882__a = new Array(arguments.length -  0);
while (G__11882__i < G__11882__a.length) {G__11882__a[G__11882__i] = arguments[G__11882__i + 0]; ++G__11882__i;}
  objs = new cljs.core.IndexedSeq(G__11882__a,0);
} 
return prn__delegate.call(this,objs);};
prn.cljs$lang$maxFixedArity = 0;
prn.cljs$lang$applyTo = (function (arglist__11883){
var objs = cljs.core.seq(arglist__11883);
return prn__delegate(objs);
});
prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
return prn;
})()
;
cljs.core.print_map = (function print_map(m,print_one,writer,opts){
return cljs.core.pr_sequential_writer(writer,(function (e,w,opts__$1){
var G__11890_11896 = cljs.core.key(e);
var G__11891_11897 = w;
var G__11892_11898 = opts__$1;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__11890_11896,G__11891_11897,G__11892_11898) : print_one.call(null,G__11890_11896,G__11891_11897,G__11892_11898));

cljs.core._write(w," ");

var G__11893 = cljs.core.val(e);
var G__11894 = w;
var G__11895 = opts__$1;
return (print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__11893,G__11894,G__11895) : print_one.call(null,G__11893,G__11894,G__11895));
}),"{",", ","}",opts,cljs.core.seq(m));
});
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Volatile: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#'");

return cljs.core.pr_writer(a__$1.sym,writer,opts);
});

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Atom: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core._write(writer,"()");
});

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#queue ["," ","]",opts,cljs.core.seq(coll__$1));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;

cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;

cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_keywords(x__$1,y);
});

cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;

cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_symbols(x__$1,y);
});
/**
* Atomically sets the metadata for a namespace/var/ref/agent/atom to be:
* 
* (apply f its-current-meta args)
* 
* f must be free of side-effects
* @param {...*} var_args
*/
cljs.core.alter_meta_BANG_ = (function() { 
var alter_meta_BANG___delegate = function (iref,f,args){
return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,iref.meta,args);
};
var alter_meta_BANG_ = function (iref,f,var_args){
var args = null;
if (arguments.length > 2) {
var G__11899__i = 0, G__11899__a = new Array(arguments.length -  2);
while (G__11899__i < G__11899__a.length) {G__11899__a[G__11899__i] = arguments[G__11899__i + 2]; ++G__11899__i;}
  args = new cljs.core.IndexedSeq(G__11899__a,0);
} 
return alter_meta_BANG___delegate.call(this,iref,f,args);};
alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
alter_meta_BANG_.cljs$lang$applyTo = (function (arglist__11900){
var iref = cljs.core.first(arglist__11900);
arglist__11900 = cljs.core.next(arglist__11900);
var f = cljs.core.first(arglist__11900);
var args = cljs.core.rest(arglist__11900);
return alter_meta_BANG___delegate(iref,f,args);
});
alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
return alter_meta_BANG_;
})()
;
/**
* Atomically resets the metadata for an atom
*/
cljs.core.reset_meta_BANG_ = (function reset_meta_BANG_(iref,m){
return iref.meta = m;
});
/**
* Alpha - subject to change.
* 
* Adds a watch function to an atom reference. The watch fn must be a
* fn of 4 args: a key, the reference, its old-state, its
* new-state. Whenever the reference's state might have been changed,
* any registered watches will have their functions called. The watch
* fn will be called synchronously. Note that an atom's state
* may have changed again prior to the fn call, so use old/new-state
* rather than derefing the reference. Keys must be unique per
* reference, and can be used to remove the watch with remove-watch,
* but are otherwise considered opaque by the watch mechanism.  Bear in
* mind that regardless of the result or action of the watch fns the
* atom's value will change.  Example:
* 
* (def a (atom 0))
* (add-watch a :inc (fn [k r o n] (assert (== 0 n))))
* (swap! a inc)
* ;; Assertion Error
* (deref a)
* ;=> 1
*/
cljs.core.add_watch = (function add_watch(iref,key,f){
cljs.core._add_watch(iref,key,f);

return iref;
});
/**
* Alpha - subject to change.
* 
* Removes a watch (set by add-watch) from a reference
*/
cljs.core.remove_watch = (function remove_watch(iref,key){
cljs.core._remove_watch(iref,key);

return iref;
});
cljs.core.gensym_counter = null;
/**
* Returns a new symbol with a unique name. If a prefix string is
* supplied, the name is prefix# where # is some unique number. If
* prefix is not supplied, the prefix is 'G__'.
*/
cljs.core.gensym = (function() {
var gensym = null;
var gensym__0 = (function (){
return gensym.cljs$core$IFn$_invoke$arity$1("G__");
});
var gensym__1 = (function (prefix_string){
if((cljs.core.gensym_counter == null)){
cljs.core.gensym_counter = (function (){var G__11903 = (0);
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__11903) : cljs.core.atom.call(null,G__11903));
})();
} else {
}

return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string),cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter,cljs.core.inc))].join(''));
});
gensym = function(prefix_string){
switch(arguments.length){
case 0:
return gensym__0.call(this);
case 1:
return gensym__1.call(this,prefix_string);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
return gensym;
})()
;
cljs.core.fixture1 = (1);
cljs.core.fixture2 = (2);

/**
* @constructor
*/
cljs.core.Delay = (function (f,value){
this.f = f;
this.value = value;
this.cljs$lang$protocol_mask$partition1$ = 1;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = (function (d){
var self__ = this;
var d__$1 = this;
return cljs.core.not(self__.f);
});

cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(cljs.core.truth_(self__.f)){
self__.value = (function (){return (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null));
})();

self__.f = null;
} else {
}

return self__.value;
});

cljs.core.Delay.cljs$lang$type = true;

cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";

cljs.core.Delay.cljs$lang$ctorPrWriter = (function (this__5307__auto__,writer__5308__auto__,opt__5309__auto__){
return cljs.core._write(writer__5308__auto__,"cljs.core/Delay");
});

cljs.core.__GT_Delay = (function __GT_Delay(f,value){
return (new cljs.core.Delay(f,value));
});

/**
* returns true if x is a Delay created with delay
*/
cljs.core.delay_QMARK_ = (function delay_QMARK_(x){
return (x instanceof cljs.core.Delay);
});
/**
* If x is a Delay, returns the (possibly cached) value of its expression, else returns x
*/
cljs.core.force = (function force(x){
if(cljs.core.delay_QMARK_(x)){
var G__11905 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11905) : cljs.core.deref.call(null,G__11905));
} else {
return x;
}
});
/**
* Returns true if a value has been produced for a promise, delay, future or lazy sequence.
*/
cljs.core.realized_QMARK_ = (function realized_QMARK_(d){
return cljs.core._realized_QMARK_(d);
});
cljs.core.preserving_reduced = (function preserving_reduced(rf){
return (function (p1__11906_SHARP_,p2__11907_SHARP_){
var ret = (function (){var G__11910 = p1__11906_SHARP_;
var G__11911 = p2__11907_SHARP_;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__11910,G__11911) : rf.call(null,G__11910,G__11911));
})();
if(cljs.core.reduced_QMARK_(ret)){
return cljs.core.reduced(ret);
} else {
return ret;
}
});
});
/**
* A transducer which concatenates the contents of each input, which must be a
* collection, into the reduction.
*/
cljs.core.cat = (function cat(rf){
var rf1 = cljs.core.preserving_reduced(rf);
return ((function (rf1){
return (function() {
var G__11914 = null;
var G__11914__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__11914__1 = (function (result){
var G__11913 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__11913) : rf.call(null,G__11913));
});
var G__11914__2 = (function (result,input){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1,result,input);
});
G__11914 = function(result,input){
switch(arguments.length){
case 0:
return G__11914__0.call(this);
case 1:
return G__11914__1.call(this,result);
case 2:
return G__11914__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11914.cljs$core$IFn$_invoke$arity$0 = G__11914__0;
G__11914.cljs$core$IFn$_invoke$arity$1 = G__11914__1;
G__11914.cljs$core$IFn$_invoke$arity$2 = G__11914__2;
return G__11914;
})()
;})(rf1))
});
/**
* Returns a lazy sequence removing consecutive duplicates in coll.
* Returns a transducer when no collection is provided.
*/
cljs.core.dedupe = (function() {
var dedupe = null;
var dedupe__0 = (function (){
return (function (rf){
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (pa){
return (function() {
var G__11923 = null;
var G__11923__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__11923__1 = (function (result){
var G__11919 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__11919) : rf.call(null,G__11919));
});
var G__11923__2 = (function (result,input){
var prior = (function (){var G__11920 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11920) : cljs.core.deref.call(null,G__11920));
})();
cljs.core.vreset_BANG_(pa,input);

if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior,input)){
return result;
} else {
var G__11921 = result;
var G__11922 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__11921,G__11922) : rf.call(null,G__11921,G__11922));
}
});
G__11923 = function(result,input){
switch(arguments.length){
case 0:
return G__11923__0.call(this);
case 1:
return G__11923__1.call(this,result);
case 2:
return G__11923__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11923.cljs$core$IFn$_invoke$arity$0 = G__11923__0;
G__11923.cljs$core$IFn$_invoke$arity$1 = G__11923__1;
G__11923.cljs$core$IFn$_invoke$arity$2 = G__11923__2;
return G__11923;
})()
;})(pa))
});
});
var dedupe__1 = (function (coll){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(dedupe.cljs$core$IFn$_invoke$arity$0(),coll);
});
dedupe = function(coll){
switch(arguments.length){
case 0:
return dedupe__0.call(this);
case 1:
return dedupe__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
return dedupe;
})()
;
/**
* Returns items from coll with random probability of prob (0.0 -
* 1.0).  Returns a transducer when no collection is provided.
*/
cljs.core.random_sample = (function() {
var random_sample = null;
var random_sample__1 = (function (prob){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}));
});
var random_sample__2 = (function (prob,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}),coll);
});
random_sample = function(prob,coll){
switch(arguments.length){
case 1:
return random_sample__1.call(this,prob);
case 2:
return random_sample__2.call(this,prob,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
return random_sample;
})()
;

/**
* @constructor
*/
cljs.core.Eduction = (function (xform,coll){
this.xform = xform;
this.coll = coll;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2173173760;
})
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll__$1,writer,opts){
var self__ = this;
var coll__$2 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$2);
});

cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (_,f,init){
var self__ = this;
var ___$1 = this;
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform,f,init,self__.coll);
});

cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform,self__.coll));
});

cljs.core.Eduction.cljs$lang$type = true;

cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";

cljs.core.Eduction.cljs$lang$ctorPrWriter = (function (this__5307__auto__,writer__5308__auto__,opt__5309__auto__){
return cljs.core._write(writer__5308__auto__,"cljs.core/Eduction");
});

cljs.core.__GT_Eduction = (function __GT_Eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});

(cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5698__auto__ = this;
return cljs.core.es6_iterator(this__5698__auto__);
}));
/**
* Returns a reducible/iterable/seqable application of
* the transducer to the items in coll. Note that these applications
* will be performed every time iterator/seq/reduce is called.
*/
cljs.core.eduction = (function eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});
/**
* Runs the supplied procedure (via reduce), for purposes of side
* effects, on successive items in the collection. Returns nil
*/
cljs.core.run_BANG_ = (function run_BANG_(proc,coll){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__11925_SHARP_,p2__11924_SHARP_){
var G__11927 = p2__11924_SHARP_;
return (proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__11927) : proc.call(null,G__11927));
}),null,coll);
});

cljs.core.IEncodeJS = (function (){var obj11929 = {};
return obj11929;
})();

cljs.core._clj__GT_js = (function _clj__GT_js(x){
if((function (){var and__4708__auto__ = x;
if(and__4708__auto__){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
} else {
return and__4708__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
} else {
var x__5364__auto__ = (((x == null))?null:x);
return (function (){var or__4720__auto__ = (cljs.core._clj__GT_js[(function (){var G__11933 = x__5364__auto__;
return goog.typeOf(G__11933);
})()]);
if(or__4720__auto__){
return or__4720__auto__;
} else {
var or__4720__auto____$1 = (cljs.core._clj__GT_js["_"]);
if(or__4720__auto____$1){
return or__4720__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-clj->js",x);
}
}
})().call(null,x);
}
});

cljs.core._key__GT_js = (function _key__GT_js(x){
if((function (){var and__4708__auto__ = x;
if(and__4708__auto__){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
} else {
return and__4708__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
} else {
var x__5364__auto__ = (((x == null))?null:x);
return (function (){var or__4720__auto__ = (cljs.core._key__GT_js[(function (){var G__11937 = x__5364__auto__;
return goog.typeOf(G__11937);
})()]);
if(or__4720__auto__){
return or__4720__auto__;
} else {
var or__4720__auto____$1 = (cljs.core._key__GT_js["_"]);
if(or__4720__auto____$1){
return or__4720__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-key->js",x);
}
}
})().call(null,x);
}
});

cljs.core.key__GT_js = (function key__GT_js(k){
if((function (){var G__11940 = k;
if(G__11940){
var bit__5401__auto__ = null;
if(cljs.core.truth_((function (){var or__4720__auto__ = bit__5401__auto__;
if(cljs.core.truth_(or__4720__auto__)){
return or__4720__auto__;
} else {
return G__11940.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__11940.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__11940);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__11940);
}
})()){
return cljs.core._clj__GT_js(k);
} else {
if((typeof k === 'string') || (typeof k === 'number') || ((k instanceof cljs.core.Keyword)) || ((k instanceof cljs.core.Symbol))){
var G__11941 = k;
return (cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__11941) : cljs.core.clj__GT_js.call(null,G__11941));
} else {
return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
}
}
});
/**
* Recursively transforms ClojureScript values to JavaScript.
* sets/vectors/lists become Arrays, Keywords and Symbol become Strings,
* Maps become Objects. Arbitrary keys are encoded to by key->js.
*/
cljs.core.clj__GT_js = (function clj__GT_js(x){
if((x == null)){
return null;
} else {
if((function (){var G__11957 = x;
if(G__11957){
var bit__5401__auto__ = null;
if(cljs.core.truth_((function (){var or__4720__auto__ = bit__5401__auto__;
if(cljs.core.truth_(or__4720__auto__)){
return or__4720__auto__;
} else {
return G__11957.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__11957.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__11957);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__11957);
}
})()){
return cljs.core._clj__GT_js(x);
} else {
if((x instanceof cljs.core.Keyword)){
return cljs.core.name(x);
} else {
if((x instanceof cljs.core.Symbol)){
return [cljs.core.str(x)].join('');
} else {
if(cljs.core.map_QMARK_(x)){
var m = (function (){var obj11959 = {};
return obj11959;
})();
var seq__11960_11970 = cljs.core.seq(x);
var chunk__11961_11971 = null;
var count__11962_11972 = (0);
var i__11963_11973 = (0);
while(true){
if((i__11963_11973 < count__11962_11972)){
var vec__11964_11974 = chunk__11961_11971.cljs$core$IIndexed$_nth$arity$2(null,i__11963_11973);
var k_11975 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11964_11974,(0),null);
var v_11976 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11964_11974,(1),null);
(m[cljs.core.key__GT_js(k_11975)] = clj__GT_js(v_11976));

var G__11977 = seq__11960_11970;
var G__11978 = chunk__11961_11971;
var G__11979 = count__11962_11972;
var G__11980 = (i__11963_11973 + (1));
seq__11960_11970 = G__11977;
chunk__11961_11971 = G__11978;
count__11962_11972 = G__11979;
i__11963_11973 = G__11980;
continue;
} else {
var temp__4126__auto___11981 = cljs.core.seq(seq__11960_11970);
if(temp__4126__auto___11981){
var seq__11960_11982__$1 = temp__4126__auto___11981;
if(cljs.core.chunked_seq_QMARK_(seq__11960_11982__$1)){
var c__5507__auto___11983 = cljs.core.chunk_first(seq__11960_11982__$1);
var G__11984 = cljs.core.chunk_rest(seq__11960_11982__$1);
var G__11985 = c__5507__auto___11983;
var G__11986 = cljs.core.count(c__5507__auto___11983);
var G__11987 = (0);
seq__11960_11970 = G__11984;
chunk__11961_11971 = G__11985;
count__11962_11972 = G__11986;
i__11963_11973 = G__11987;
continue;
} else {
var vec__11965_11988 = cljs.core.first(seq__11960_11982__$1);
var k_11989 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11965_11988,(0),null);
var v_11990 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11965_11988,(1),null);
(m[cljs.core.key__GT_js(k_11989)] = clj__GT_js(v_11990));

var G__11991 = cljs.core.next(seq__11960_11982__$1);
var G__11992 = null;
var G__11993 = (0);
var G__11994 = (0);
seq__11960_11970 = G__11991;
chunk__11961_11971 = G__11992;
count__11962_11972 = G__11993;
i__11963_11973 = G__11994;
continue;
}
} else {
}
}
break;
}

return m;
} else {
if(cljs.core.coll_QMARK_(x)){
var arr = [];
var seq__11966_11995 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(clj__GT_js,x));
var chunk__11967_11996 = null;
var count__11968_11997 = (0);
var i__11969_11998 = (0);
while(true){
if((i__11969_11998 < count__11968_11997)){
var x_11999__$1 = chunk__11967_11996.cljs$core$IIndexed$_nth$arity$2(null,i__11969_11998);
arr.push(x_11999__$1);

var G__12000 = seq__11966_11995;
var G__12001 = chunk__11967_11996;
var G__12002 = count__11968_11997;
var G__12003 = (i__11969_11998 + (1));
seq__11966_11995 = G__12000;
chunk__11967_11996 = G__12001;
count__11968_11997 = G__12002;
i__11969_11998 = G__12003;
continue;
} else {
var temp__4126__auto___12004 = cljs.core.seq(seq__11966_11995);
if(temp__4126__auto___12004){
var seq__11966_12005__$1 = temp__4126__auto___12004;
if(cljs.core.chunked_seq_QMARK_(seq__11966_12005__$1)){
var c__5507__auto___12006 = cljs.core.chunk_first(seq__11966_12005__$1);
var G__12007 = cljs.core.chunk_rest(seq__11966_12005__$1);
var G__12008 = c__5507__auto___12006;
var G__12009 = cljs.core.count(c__5507__auto___12006);
var G__12010 = (0);
seq__11966_11995 = G__12007;
chunk__11967_11996 = G__12008;
count__11968_11997 = G__12009;
i__11969_11998 = G__12010;
continue;
} else {
var x_12011__$1 = cljs.core.first(seq__11966_12005__$1);
arr.push(x_12011__$1);

var G__12012 = cljs.core.next(seq__11966_12005__$1);
var G__12013 = null;
var G__12014 = (0);
var G__12015 = (0);
seq__11966_11995 = G__12012;
chunk__11967_11996 = G__12013;
count__11968_11997 = G__12014;
i__11969_11998 = G__12015;
continue;
}
} else {
}
}
break;
}

return arr;
} else {
return x;

}
}
}
}
}
}
});

cljs.core.IEncodeClojure = (function (){var obj12017 = {};
return obj12017;
})();

cljs.core._js__GT_clj = (function _js__GT_clj(x,options){
if((function (){var and__4708__auto__ = x;
if(and__4708__auto__){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
} else {
return and__4708__auto__;
}
})()){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x,options);
} else {
var x__5364__auto__ = (((x == null))?null:x);
return (function (){var or__4720__auto__ = (cljs.core._js__GT_clj[(function (){var G__12021 = x__5364__auto__;
return goog.typeOf(G__12021);
})()]);
if(or__4720__auto__){
return or__4720__auto__;
} else {
var or__4720__auto____$1 = (cljs.core._js__GT_clj["_"]);
if(or__4720__auto____$1){
return or__4720__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeClojure.-js->clj",x);
}
}
})().call(null,x,options);
}
});

/**
* Recursively transforms JavaScript arrays into ClojureScript
* vectors, and JavaScript objects into ClojureScript maps.  With
* option ':keywordize-keys true' will convert object fields from
* strings to keywords.
* @param {...*} var_args
*/
cljs.core.js__GT_clj = (function() {
var js__GT_clj = null;
var js__GT_clj__1 = (function (x){
return js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x,cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252),false], null)], 0));
});
var js__GT_clj__2 = (function() { 
var G__12078__delegate = function (x,opts){
var map__12051 = opts;
var map__12051__$1 = ((cljs.core.seq_QMARK_(map__12051))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__12051):map__12051);
var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12051__$1,new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252));
var keyfn = (cljs.core.truth_(keywordize_keys)?cljs.core.keyword:cljs.core.str);
var f = ((function (map__12051,map__12051__$1,keywordize_keys,keyfn){
return (function thisfn(x__$1){
if((function (){var G__12067 = x__$1;
if(G__12067){
var bit__5401__auto__ = null;
if(cljs.core.truth_((function (){var or__4720__auto__ = bit__5401__auto__;
if(cljs.core.truth_(or__4720__auto__)){
return or__4720__auto__;
} else {
return G__12067.cljs$core$IEncodeClojure$;
}
})())){
return true;
} else {
if((!G__12067.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__12067);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__12067);
}
})()){
return cljs.core._js__GT_clj(x__$1,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,opts));
} else {
if(cljs.core.seq_QMARK_(x__$1)){
return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(cljs.core.coll_QMARK_(x__$1)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1),cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(x__$1 instanceof Array){
return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if((cljs.core.type(x__$1) === Object)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__5476__auto__ = ((function (map__12051,map__12051__$1,keywordize_keys,keyfn){
return (function iter__12068(s__12069){
return (new cljs.core.LazySeq(null,((function (map__12051,map__12051__$1,keywordize_keys,keyfn){
return (function (){
var s__12069__$1 = s__12069;
while(true){
var temp__4126__auto__ = cljs.core.seq(s__12069__$1);
if(temp__4126__auto__){
var s__12069__$2 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s__12069__$2)){
var c__5474__auto__ = cljs.core.chunk_first(s__12069__$2);
var size__5475__auto__ = cljs.core.count(c__5474__auto__);
var b__12071 = cljs.core.chunk_buffer(size__5475__auto__);
if((function (){var i__12070 = (0);
while(true){
if((i__12070 < size__5475__auto__)){
var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__5474__auto__,i__12070);
cljs.core.chunk_append(b__12071,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__12076 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__12076) : keyfn.call(null,G__12076));
})(),thisfn((x__$1[k]))], null));

var G__12079 = (i__12070 + (1));
i__12070 = G__12079;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons(cljs.core.chunk(b__12071),iter__12068(cljs.core.chunk_rest(s__12069__$2)));
} else {
return cljs.core.chunk_cons(cljs.core.chunk(b__12071),null);
}
} else {
var k = cljs.core.first(s__12069__$2);
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__12077 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__12077) : keyfn.call(null,G__12077));
})(),thisfn((x__$1[k]))], null),iter__12068(cljs.core.rest(s__12069__$2)));
}
} else {
return null;
}
break;
}
});})(map__12051,map__12051__$1,keywordize_keys,keyfn))
,null,null));
});})(map__12051,map__12051__$1,keywordize_keys,keyfn))
;
return iter__5476__auto__(cljs.core.js_keys(x__$1));
})());
} else {
return x__$1;

}
}
}
}
}
});})(map__12051,map__12051__$1,keywordize_keys,keyfn))
;
return f(x);
};
var G__12078 = function (x,var_args){
var opts = null;
if (arguments.length > 1) {
var G__12080__i = 0, G__12080__a = new Array(arguments.length -  1);
while (G__12080__i < G__12080__a.length) {G__12080__a[G__12080__i] = arguments[G__12080__i + 1]; ++G__12080__i;}
  opts = new cljs.core.IndexedSeq(G__12080__a,0);
} 
return G__12078__delegate.call(this,x,opts);};
G__12078.cljs$lang$maxFixedArity = 1;
G__12078.cljs$lang$applyTo = (function (arglist__12081){
var x = cljs.core.first(arglist__12081);
var opts = cljs.core.rest(arglist__12081);
return G__12078__delegate(x,opts);
});
G__12078.cljs$core$IFn$_invoke$arity$variadic = G__12078__delegate;
return G__12078;
})()
;
js__GT_clj = function(x,var_args){
var opts = var_args;
switch(arguments.length){
case 1:
return js__GT_clj__1.call(this,x);
default:
var G__12082 = null;
if (arguments.length > 1) {
var G__12083__i = 0, G__12083__a = new Array(arguments.length -  1);
while (G__12083__i < G__12083__a.length) {G__12083__a[G__12083__i] = arguments[G__12083__i + 1]; ++G__12083__i;}
G__12082 = new cljs.core.IndexedSeq(G__12083__a,0);
}
return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__12082);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js__GT_clj.cljs$lang$maxFixedArity = 1;
js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
return js__GT_clj;
})()
;
/**
* Returns a memoized version of a referentially transparent function. The
* memoized version of the function keeps a cache of the mapping from arguments
* to results and, when calls with the same arguments are repeated often, has
* higher performance at the expense of higher memory use.
*/
cljs.core.memoize = (function memoize(f){
var mem = (function (){var G__12086 = cljs.core.PersistentArrayMap.EMPTY;
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__12086) : cljs.core.atom.call(null,G__12086));
})();
return ((function (mem){
return (function() { 
var G__12088__delegate = function (args){
var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3((function (){var G__12087 = mem;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12087) : cljs.core.deref.call(null,G__12087));
})(),args,cljs.core.lookup_sentinel);
if((v === cljs.core.lookup_sentinel)){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem,cljs.core.assoc,args,ret);

return ret;
} else {
return v;
}
};
var G__12088 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__12089__i = 0, G__12089__a = new Array(arguments.length -  0);
while (G__12089__i < G__12089__a.length) {G__12089__a[G__12089__i] = arguments[G__12089__i + 0]; ++G__12089__i;}
  args = new cljs.core.IndexedSeq(G__12089__a,0);
} 
return G__12088__delegate.call(this,args);};
G__12088.cljs$lang$maxFixedArity = 0;
G__12088.cljs$lang$applyTo = (function (arglist__12090){
var args = cljs.core.seq(arglist__12090);
return G__12088__delegate(args);
});
G__12088.cljs$core$IFn$_invoke$arity$variadic = G__12088__delegate;
return G__12088;
})()
;
;})(mem))
});
/**
* trampoline can be used to convert algorithms requiring mutual
* recursion without stack consumption. Calls f with supplied args, if
* any. If f returns a fn, calls that fn with no arguments, and
* continues to repeat, until the return value is not a fn, then
* returns that non-fn value. Note that if you want to return a fn as a
* final value, you must wrap it in some data structure and unpack it
* after trampoline returns.
* @param {...*} var_args
*/
cljs.core.trampoline = (function() {
var trampoline = null;
var trampoline__1 = (function (f){
while(true){
var ret = (function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})();
if(cljs.core.fn_QMARK_(ret)){
var G__12092 = ret;
f = G__12092;
continue;
} else {
return ret;
}
break;
}
});
var trampoline__2 = (function() { 
var G__12093__delegate = function (f,args){
return trampoline.cljs$core$IFn$_invoke$arity$1((function (){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
}));
};
var G__12093 = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__12094__i = 0, G__12094__a = new Array(arguments.length -  1);
while (G__12094__i < G__12094__a.length) {G__12094__a[G__12094__i] = arguments[G__12094__i + 1]; ++G__12094__i;}
  args = new cljs.core.IndexedSeq(G__12094__a,0);
} 
return G__12093__delegate.call(this,f,args);};
G__12093.cljs$lang$maxFixedArity = 1;
G__12093.cljs$lang$applyTo = (function (arglist__12095){
var f = cljs.core.first(arglist__12095);
var args = cljs.core.rest(arglist__12095);
return G__12093__delegate(f,args);
});
G__12093.cljs$core$IFn$_invoke$arity$variadic = G__12093__delegate;
return G__12093;
})()
;
trampoline = function(f,var_args){
var args = var_args;
switch(arguments.length){
case 1:
return trampoline__1.call(this,f);
default:
var G__12096 = null;
if (arguments.length > 1) {
var G__12097__i = 0, G__12097__a = new Array(arguments.length -  1);
while (G__12097__i < G__12097__a.length) {G__12097__a[G__12097__i] = arguments[G__12097__i + 1]; ++G__12097__i;}
G__12096 = new cljs.core.IndexedSeq(G__12097__a,0);
}
return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__12096);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
trampoline.cljs$lang$maxFixedArity = 1;
trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
return trampoline;
})()
;
/**
* Returns a random floating point number between 0 (inclusive) and
* n (default 1) (exclusive).
*/
cljs.core.rand = (function() {
var rand = null;
var rand__0 = (function (){
return rand.cljs$core$IFn$_invoke$arity$1((1));
});
var rand__1 = (function (n){
return ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
});
rand = function(n){
switch(arguments.length){
case 0:
return rand__0.call(this);
case 1:
return rand__1.call(this,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
return rand;
})()
;
/**
* Returns a random integer between 0 (inclusive) and n (exclusive).
*/
cljs.core.rand_int = (function rand_int(n){
var G__12100 = ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__12100) : Math.floor.call(null,G__12100));
});
/**
* Return a random element of the (sequential) collection. Will have
* the same performance characteristics as nth for the given
* collection.
*/
cljs.core.rand_nth = (function rand_nth(coll){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll,cljs.core.rand_int(cljs.core.count(coll)));
});
/**
* Returns a map of the elements of coll keyed by the result of
* f on each element. The value at each key will be a vector of the
* corresponding elements, in the order they appeared in coll.
*/
cljs.core.group_by = (function group_by(f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret,x){
var k = (function (){var G__12102 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12102) : f.call(null,G__12102));
})();
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.PersistentVector.EMPTY),x));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Creates a hierarchy object for use with derive, isa? etc.
*/
cljs.core.make_hierarchy = (function make_hierarchy(){
return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"descendants","descendants",1824886031),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),cljs.core.PersistentArrayMap.EMPTY], null);
});
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = (function get_global_hierarchy(){
if((cljs.core._global_hierarchy == null)){
cljs.core._global_hierarchy = (function (){var G__12104 = cljs.core.make_hierarchy();
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__12104) : cljs.core.atom.call(null,G__12104));
})();
} else {
}

return cljs.core._global_hierarchy;
});
/**
* @param {...*} var_args
*/
cljs.core.swap_global_hierarchy_BANG_ = (function() { 
var swap_global_hierarchy_BANG___delegate = function (f,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_,cljs.core.get_global_hierarchy(),f,args);
};
var swap_global_hierarchy_BANG_ = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__12105__i = 0, G__12105__a = new Array(arguments.length -  1);
while (G__12105__i < G__12105__a.length) {G__12105__a[G__12105__i] = arguments[G__12105__i + 1]; ++G__12105__i;}
  args = new cljs.core.IndexedSeq(G__12105__a,0);
} 
return swap_global_hierarchy_BANG___delegate.call(this,f,args);};
swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
swap_global_hierarchy_BANG_.cljs$lang$applyTo = (function (arglist__12106){
var f = cljs.core.first(arglist__12106);
var args = cljs.core.rest(arglist__12106);
return swap_global_hierarchy_BANG___delegate(f,args);
});
swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
return swap_global_hierarchy_BANG_;
})()
;
/**
* Returns true if (= child parent), or child is directly or indirectly derived from
* parent, either via a JavaScript type inheritance relationship or a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy
*/
cljs.core.isa_QMARK_ = (function() {
var isa_QMARK_ = null;
var isa_QMARK___2 = (function (child,parent){
return isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__12171 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12171) : cljs.core.deref.call(null,G__12171));
})(),child,parent);
});
var isa_QMARK___3 = (function (h,child,parent){
var or__4720__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child,parent);
if(or__4720__auto__){
return or__4720__auto__;
} else {
var or__4720__auto____$1 = cljs.core.contains_QMARK_(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h).call(null,child),parent);
if(or__4720__auto____$1){
return or__4720__auto____$1;
} else {
var and__4708__auto__ = cljs.core.vector_QMARK_(parent);
if(and__4708__auto__){
var and__4708__auto____$1 = cljs.core.vector_QMARK_(child);
if(and__4708__auto____$1){
var and__4708__auto____$2 = (cljs.core.count(parent) === cljs.core.count(child));
if(and__4708__auto____$2){
var ret = true;
var i = (0);
while(true){
if((!(ret)) || ((i === cljs.core.count(parent)))){
return ret;
} else {
var G__12196 = isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h,(function (){var G__12194 = i;
return (child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__12194) : child.call(null,G__12194));
})(),(function (){var G__12195 = i;
return (parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__12195) : parent.call(null,G__12195));
})());
var G__12197 = (i + (1));
ret = G__12196;
i = G__12197;
continue;
}
break;
}
} else {
return and__4708__auto____$2;
}
} else {
return and__4708__auto____$1;
}
} else {
return and__4708__auto__;
}
}
}
});
isa_QMARK_ = function(h,child,parent){
switch(arguments.length){
case 2:
return isa_QMARK___2.call(this,h,child);
case 3:
return isa_QMARK___3.call(this,h,child,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
return isa_QMARK_;
})()
;
/**
* Returns the immediate parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.parents = (function() {
var parents = null;
var parents__1 = (function (tag){
return parents.cljs$core$IFn$_invoke$arity$2((function (){var G__12201 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12201) : cljs.core.deref.call(null,G__12201));
})(),tag);
});
var parents__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag));
});
parents = function(h,tag){
switch(arguments.length){
case 1:
return parents__1.call(this,h);
case 2:
return parents__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
return parents;
})()
;
/**
* Returns the immediate and indirect parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.ancestors = (function() {
var ancestors = null;
var ancestors__1 = (function (tag){
return ancestors.cljs$core$IFn$_invoke$arity$2((function (){var G__12205 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12205) : cljs.core.deref.call(null,G__12205));
})(),tag);
});
var ancestors__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag));
});
ancestors = function(h,tag){
switch(arguments.length){
case 1:
return ancestors__1.call(this,h);
case 2:
return ancestors__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
return ancestors;
})()
;
/**
* Returns the immediate and indirect children of tag, through a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy. Note: does not work on JavaScript type inheritance
* relationships.
*/
cljs.core.descendants = (function() {
var descendants = null;
var descendants__1 = (function (tag){
return descendants.cljs$core$IFn$_invoke$arity$2((function (){var G__12209 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12209) : cljs.core.deref.call(null,G__12209));
})(),tag);
});
var descendants__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),tag));
});
descendants = function(h,tag){
switch(arguments.length){
case 1:
return descendants__1.call(this,h);
case 2:
return descendants__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
return descendants;
})()
;
/**
* Establishes a parent/child relationship between parent and
* tag. Parent must be a namespace-qualified symbol or keyword and
* child can be either a namespace-qualified symbol or keyword or a
* class. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.derive = (function() {
var derive = null;
var derive__2 = (function (tag,parent){
if(cljs.core.truth_(cljs.core.namespace(parent))){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"namespace","namespace",1263021155,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(derive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var derive__3 = (function (h,tag,parent){
if(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag,parent)){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"not=","not=",1466536204,null),new cljs.core.Symbol(null,"tag","tag",350170304,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

var tp = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var td = new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h);
var ta = new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h);
var tf = ((function (tp,td,ta){
return (function (m,source,sources,target,targets){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (tp,td,ta){
return (function (ret,k){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets,k,cljs.core.PersistentHashSet.EMPTY),cljs.core.cons(target,(function (){var G__12218 = target;
return (targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__12218) : targets.call(null,G__12218));
})())));
});})(tp,td,ta))
,m,cljs.core.cons(source,(function (){var G__12219 = source;
return (sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__12219) : sources.call(null,G__12219));
})()));
});})(tp,td,ta))
;
var or__4720__auto__ = ((cljs.core.contains_QMARK_((function (){var G__12223 = tag;
return (tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__12223) : tp.call(null,G__12223));
})(),parent))?null:(function (){
if(cljs.core.contains_QMARK_((function (){var G__12224 = tag;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__12224) : ta.call(null,G__12224));
})(),parent)){
throw (new Error([cljs.core.str(tag),cljs.core.str("already has"),cljs.core.str(parent),cljs.core.str("as ancestor")].join('')));
} else {
}

if(cljs.core.contains_QMARK_((function (){var G__12225 = parent;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__12225) : ta.call(null,G__12225));
})(),tag)){
throw (new Error([cljs.core.str("Cyclic derivation:"),cljs.core.str(parent),cljs.core.str("has"),cljs.core.str(tag),cljs.core.str("as ancestor")].join('')));
} else {
}

return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp,tag,cljs.core.PersistentHashSet.EMPTY),parent)),new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),tf(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag,td,parent,ta),new cljs.core.Keyword(null,"descendants","descendants",1824886031),tf(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),parent,ta,tag,td)], null);
})()
);
if(cljs.core.truth_(or__4720__auto__)){
return or__4720__auto__;
} else {
return h;
}
});
derive = function(h,tag,parent){
switch(arguments.length){
case 2:
return derive__2.call(this,h,tag);
case 3:
return derive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
return derive;
})()
;
/**
* Removes a parent/child relationship between parent and
* tag. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.underive = (function() {
var underive = null;
var underive__2 = (function (tag,parent){
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(underive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var underive__3 = (function (h,tag,parent){
var parentMap = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var childsParents = (cljs.core.truth_((function (){var G__12232 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__12232) : parentMap.call(null,G__12232));
})())?cljs.core.disj.cljs$core$IFn$_invoke$arity$2((function (){var G__12233 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__12233) : parentMap.call(null,G__12233));
})(),parent):cljs.core.PersistentHashSet.EMPTY);
var newParents = (cljs.core.truth_(cljs.core.not_empty(childsParents))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap,tag,childsParents):cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap,tag));
var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (parentMap,childsParents,newParents){
return (function (p1__12226_SHARP_){
return cljs.core.cons(cljs.core.first(p1__12226_SHARP_),cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__12226_SHARP_),cljs.core.second(p1__12226_SHARP_)));
});})(parentMap,childsParents,newParents))
,cljs.core.seq(newParents)));
if(cljs.core.contains_QMARK_((function (){var G__12234 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__12234) : parentMap.call(null,G__12234));
})(),parent)){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (parentMap,childsParents,newParents,deriv_seq){
return (function (p1__12227_SHARP_,p2__12228_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive,p1__12227_SHARP_,p2__12228_SHARP_);
});})(parentMap,childsParents,newParents,deriv_seq))
,cljs.core.make_hierarchy(),cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),deriv_seq));
} else {
return h;
}
});
underive = function(h,tag,parent){
switch(arguments.length){
case 2:
return underive__2.call(this,h,tag);
case 3:
return underive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
return underive;
})()
;
cljs.core.reset_cache = (function reset_cache(method_cache,method_table,cached_hierarchy,hierarchy){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache,(function (_){
var G__12237 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12237) : cljs.core.deref.call(null,G__12237));
}));

return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy,(function (_){
var G__12238 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12238) : cljs.core.deref.call(null,G__12238));
}));
});
cljs.core.prefers_STAR_ = (function prefers_STAR_(x,y,prefer_table){
var xprefs = (function (){var G__12254 = prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12254) : cljs.core.deref.call(null,G__12254));
})().call(null,x);
var or__4720__auto__ = (cljs.core.truth_((function (){var and__4708__auto__ = xprefs;
if(cljs.core.truth_(and__4708__auto__)){
var G__12256 = y;
return (xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__12256) : xprefs.call(null,G__12256));
} else {
return and__4708__auto__;
}
})())?true:null);
if(cljs.core.truth_(or__4720__auto__)){
return or__4720__auto__;
} else {
var or__4720__auto____$1 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(x,cljs.core.first(ps),prefer_table))){
} else {
}

var G__12257 = cljs.core.rest(ps);
ps = G__12257;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__4720__auto____$1)){
return or__4720__auto____$1;
} else {
var or__4720__auto____$2 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(cljs.core.first(ps),y,prefer_table))){
} else {
}

var G__12258 = cljs.core.rest(ps);
ps = G__12258;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__4720__auto____$2)){
return or__4720__auto____$2;
} else {
return false;
}
}
}
});
cljs.core.dominates = (function dominates(x,y,prefer_table){
var or__4720__auto__ = cljs.core.prefers_STAR_(x,y,prefer_table);
if(cljs.core.truth_(or__4720__auto__)){
return or__4720__auto__;
} else {
return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x,y);
}
});
cljs.core.find_and_cache_best_method = (function find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (be,p__12272){
var vec__12273 = p__12272;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12273,(0),null);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12273,(1),null);
var e = vec__12273;
if(cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__12274 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12274) : cljs.core.deref.call(null,G__12274));
})(),dispatch_val,k)){
var be2 = (cljs.core.truth_((function (){var or__4720__auto__ = (be == null);
if(or__4720__auto__){
return or__4720__auto__;
} else {
return cljs.core.dominates(k,cljs.core.first(be),prefer_table);
}
})())?e:be);
if(cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2),k,prefer_table))){
} else {
throw (new Error([cljs.core.str("Multiple methods in multimethod '"),cljs.core.str(name),cljs.core.str("' match dispatch value: "),cljs.core.str(dispatch_val),cljs.core.str(" -> "),cljs.core.str(k),cljs.core.str(" and "),cljs.core.str(cljs.core.first(be2)),cljs.core.str(", and neither is preferred")].join('')));
}

return be2;
} else {
return be;
}
}),null,(function (){var G__12275 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12275) : cljs.core.deref.call(null,G__12275));
})());
if(cljs.core.truth_(best_entry)){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__12276 = cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12276) : cljs.core.deref.call(null,G__12276));
})(),(function (){var G__12277 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12277) : cljs.core.deref.call(null,G__12277));
})())){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache,cljs.core.assoc,dispatch_val,cljs.core.second(best_entry));

return cljs.core.second(best_entry);
} else {
cljs.core.reset_cache(method_cache,method_table,cached_hierarchy,hierarchy);

return find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy);
}
} else {
return null;
}
});

cljs.core.IMultiFn = (function (){var obj12279 = {};
return obj12279;
})();

cljs.core._reset = (function _reset(mf){
if((function (){var and__4708__auto__ = mf;
if(and__4708__auto__){
return mf.cljs$core$IMultiFn$_reset$arity$1;
} else {
return and__4708__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
} else {
var x__5364__auto__ = (((mf == null))?null:mf);
return (function (){var or__4720__auto__ = (cljs.core._reset[(function (){var G__12283 = x__5364__auto__;
return goog.typeOf(G__12283);
})()]);
if(or__4720__auto__){
return or__4720__auto__;
} else {
var or__4720__auto____$1 = (cljs.core._reset["_"]);
if(or__4720__auto____$1){
return or__4720__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-reset",mf);
}
}
})().call(null,mf);
}
});

cljs.core._add_method = (function _add_method(mf,dispatch_val,method){
if((function (){var and__4708__auto__ = mf;
if(and__4708__auto__){
return mf.cljs$core$IMultiFn$_add_method$arity$3;
} else {
return and__4708__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_add_method$arity$3(mf,dispatch_val,method);
} else {
var x__5364__auto__ = (((mf == null))?null:mf);
return (function (){var or__4720__auto__ = (cljs.core._add_method[(function (){var G__12287 = x__5364__auto__;
return goog.typeOf(G__12287);
})()]);
if(or__4720__auto__){
return or__4720__auto__;
} else {
var or__4720__auto____$1 = (cljs.core._add_method["_"]);
if(or__4720__auto____$1){
return or__4720__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-add-method",mf);
}
}
})().call(null,mf,dispatch_val,method);
}
});

cljs.core._remove_method = (function _remove_method(mf,dispatch_val){
if((function (){var and__4708__auto__ = mf;
if(and__4708__auto__){
return mf.cljs$core$IMultiFn$_remove_method$arity$2;
} else {
return and__4708__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf,dispatch_val);
} else {
var x__5364__auto__ = (((mf == null))?null:mf);
return (function (){var or__4720__auto__ = (cljs.core._remove_method[(function (){var G__12291 = x__5364__auto__;
return goog.typeOf(G__12291);
})()]);
if(or__4720__auto__){
return or__4720__auto__;
} else {
var or__4720__auto____$1 = (cljs.core._remove_method["_"]);
if(or__4720__auto____$1){
return or__4720__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-remove-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._prefer_method = (function _prefer_method(mf,dispatch_val,dispatch_val_y){
if((function (){var and__4708__auto__ = mf;
if(and__4708__auto__){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
} else {
return and__4708__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf,dispatch_val,dispatch_val_y);
} else {
var x__5364__auto__ = (((mf == null))?null:mf);
return (function (){var or__4720__auto__ = (cljs.core._prefer_method[(function (){var G__12295 = x__5364__auto__;
return goog.typeOf(G__12295);
})()]);
if(or__4720__auto__){
return or__4720__auto__;
} else {
var or__4720__auto____$1 = (cljs.core._prefer_method["_"]);
if(or__4720__auto____$1){
return or__4720__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefer-method",mf);
}
}
})().call(null,mf,dispatch_val,dispatch_val_y);
}
});

cljs.core._get_method = (function _get_method(mf,dispatch_val){
if((function (){var and__4708__auto__ = mf;
if(and__4708__auto__){
return mf.cljs$core$IMultiFn$_get_method$arity$2;
} else {
return and__4708__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_get_method$arity$2(mf,dispatch_val);
} else {
var x__5364__auto__ = (((mf == null))?null:mf);
return (function (){var or__4720__auto__ = (cljs.core._get_method[(function (){var G__12299 = x__5364__auto__;
return goog.typeOf(G__12299);
})()]);
if(or__4720__auto__){
return or__4720__auto__;
} else {
var or__4720__auto____$1 = (cljs.core._get_method["_"]);
if(or__4720__auto____$1){
return or__4720__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-get-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._methods = (function _methods(mf){
if((function (){var and__4708__auto__ = mf;
if(and__4708__auto__){
return mf.cljs$core$IMultiFn$_methods$arity$1;
} else {
return and__4708__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
} else {
var x__5364__auto__ = (((mf == null))?null:mf);
return (function (){var or__4720__auto__ = (cljs.core._methods[(function (){var G__12303 = x__5364__auto__;
return goog.typeOf(G__12303);
})()]);
if(or__4720__auto__){
return or__4720__auto__;
} else {
var or__4720__auto____$1 = (cljs.core._methods["_"]);
if(or__4720__auto____$1){
return or__4720__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-methods",mf);
}
}
})().call(null,mf);
}
});

cljs.core._prefers = (function _prefers(mf){
if((function (){var and__4708__auto__ = mf;
if(and__4708__auto__){
return mf.cljs$core$IMultiFn$_prefers$arity$1;
} else {
return and__4708__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
} else {
var x__5364__auto__ = (((mf == null))?null:mf);
return (function (){var or__4720__auto__ = (cljs.core._prefers[(function (){var G__12307 = x__5364__auto__;
return goog.typeOf(G__12307);
})()]);
if(or__4720__auto__){
return or__4720__auto__;
} else {
var or__4720__auto____$1 = (cljs.core._prefers["_"]);
if(or__4720__auto____$1){
return or__4720__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefers",mf);
}
}
})().call(null,mf);
}
});

cljs.core.throw_no_method_error = (function throw_no_method_error(name,dispatch_val){
throw (new Error([cljs.core.str("No method in multimethod '"),cljs.core.str(name),cljs.core.str("' for dispatch value: "),cljs.core.str(dispatch_val)].join('')));
});

/**
* @constructor
*/
cljs.core.MultiFn = (function (name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
this.name = name;
this.dispatch_fn = dispatch_fn;
this.default_dispatch_val = default_dispatch_val;
this.hierarchy = hierarchy;
this.method_table = method_table;
this.prefer_table = prefer_table;
this.method_cache = method_cache;
this.cached_hierarchy = cached_hierarchy;
this.cljs$lang$protocol_mask$partition0$ = 4194305;
this.cljs$lang$protocol_mask$partition1$ = 4352;
})
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__12309 = this$__$1;
return goog.getUid(G__12309);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._name(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._namespace(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy,((function (mf__$1){
return (function (mf__$2){
return null;
});})(mf__$1))
);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = (function (mf,dispatch_val,method){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table,cljs.core.assoc,dispatch_val,method);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table,cljs.core.dissoc,dispatch_val);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__12310 = self__.cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12310) : cljs.core.deref.call(null,G__12310));
})(),(function (){var G__12311 = self__.hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12311) : cljs.core.deref.call(null,G__12311));
})())){
} else {
cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
}

var temp__4124__auto__ = (function (){var G__12312 = self__.method_cache;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12312) : cljs.core.deref.call(null,G__12312));
})().call(null,dispatch_val);
if(cljs.core.truth_(temp__4124__auto__)){
var target_fn = temp__4124__auto__;
return target_fn;
} else {
var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method(self__.name,dispatch_val,self__.hierarchy,self__.method_table,self__.prefer_table,self__.method_cache,self__.cached_hierarchy);
if(cljs.core.truth_(temp__4124__auto____$1)){
var target_fn = temp__4124__auto____$1;
return target_fn;
} else {
return (function (){var G__12313 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12313) : cljs.core.deref.call(null,G__12313));
})().call(null,self__.default_dispatch_val);
}
}
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = (function (mf,dispatch_val_x,dispatch_val_y){
var self__ = this;
var mf__$1 = this;
if(cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x,dispatch_val_y,self__.prefer_table))){
throw (new Error([cljs.core.str("Preference conflict in multimethod '"),cljs.core.str(self__.name),cljs.core.str("': "),cljs.core.str(dispatch_val_y),cljs.core.str(" is already preferred to "),cljs.core.str(dispatch_val_x)].join('')));
} else {
}

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (old){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.PersistentHashSet.EMPTY),dispatch_val_y));
});})(mf__$1))
);

return cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__12314 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12314) : cljs.core.deref.call(null,G__12314));
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__12315 = self__.prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12315) : cljs.core.deref.call(null,G__12315));
});

cljs.core.MultiFn.prototype.call = (function() {
var G__13156 = null;
var G__13156__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});
var G__13156__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12316 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__12316) : self__.dispatch_fn.call(null,G__12316));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12317 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__12317) : target_fn.call(null,G__12317));
});
var G__13156__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12318 = a;
var G__12319 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__12318,G__12319) : self__.dispatch_fn.call(null,G__12318,G__12319));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12320 = a;
var G__12321 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__12320,G__12321) : target_fn.call(null,G__12320,G__12321));
});
var G__13156__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12322 = a;
var G__12323 = b;
var G__12324 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__12322,G__12323,G__12324) : self__.dispatch_fn.call(null,G__12322,G__12323,G__12324));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12325 = a;
var G__12326 = b;
var G__12327 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__12325,G__12326,G__12327) : target_fn.call(null,G__12325,G__12326,G__12327));
});
var G__13156__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12328 = a;
var G__12329 = b;
var G__12330 = c;
var G__12331 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__12328,G__12329,G__12330,G__12331) : self__.dispatch_fn.call(null,G__12328,G__12329,G__12330,G__12331));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12332 = a;
var G__12333 = b;
var G__12334 = c;
var G__12335 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__12332,G__12333,G__12334,G__12335) : target_fn.call(null,G__12332,G__12333,G__12334,G__12335));
});
var G__13156__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12336 = a;
var G__12337 = b;
var G__12338 = c;
var G__12339 = d;
var G__12340 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__12336,G__12337,G__12338,G__12339,G__12340) : self__.dispatch_fn.call(null,G__12336,G__12337,G__12338,G__12339,G__12340));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12341 = a;
var G__12342 = b;
var G__12343 = c;
var G__12344 = d;
var G__12345 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__12341,G__12342,G__12343,G__12344,G__12345) : target_fn.call(null,G__12341,G__12342,G__12343,G__12344,G__12345));
});
var G__13156__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12346 = a;
var G__12347 = b;
var G__12348 = c;
var G__12349 = d;
var G__12350 = e;
var G__12351 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__12346,G__12347,G__12348,G__12349,G__12350,G__12351) : self__.dispatch_fn.call(null,G__12346,G__12347,G__12348,G__12349,G__12350,G__12351));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12352 = a;
var G__12353 = b;
var G__12354 = c;
var G__12355 = d;
var G__12356 = e;
var G__12357 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__12352,G__12353,G__12354,G__12355,G__12356,G__12357) : target_fn.call(null,G__12352,G__12353,G__12354,G__12355,G__12356,G__12357));
});
var G__13156__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12358 = a;
var G__12359 = b;
var G__12360 = c;
var G__12361 = d;
var G__12362 = e;
var G__12363 = f;
var G__12364 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__12358,G__12359,G__12360,G__12361,G__12362,G__12363,G__12364) : self__.dispatch_fn.call(null,G__12358,G__12359,G__12360,G__12361,G__12362,G__12363,G__12364));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12365 = a;
var G__12366 = b;
var G__12367 = c;
var G__12368 = d;
var G__12369 = e;
var G__12370 = f;
var G__12371 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__12365,G__12366,G__12367,G__12368,G__12369,G__12370,G__12371) : target_fn.call(null,G__12365,G__12366,G__12367,G__12368,G__12369,G__12370,G__12371));
});
var G__13156__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12372 = a;
var G__12373 = b;
var G__12374 = c;
var G__12375 = d;
var G__12376 = e;
var G__12377 = f;
var G__12378 = g;
var G__12379 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__12372,G__12373,G__12374,G__12375,G__12376,G__12377,G__12378,G__12379) : self__.dispatch_fn.call(null,G__12372,G__12373,G__12374,G__12375,G__12376,G__12377,G__12378,G__12379));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12380 = a;
var G__12381 = b;
var G__12382 = c;
var G__12383 = d;
var G__12384 = e;
var G__12385 = f;
var G__12386 = g;
var G__12387 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__12380,G__12381,G__12382,G__12383,G__12384,G__12385,G__12386,G__12387) : target_fn.call(null,G__12380,G__12381,G__12382,G__12383,G__12384,G__12385,G__12386,G__12387));
});
var G__13156__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12388 = a;
var G__12389 = b;
var G__12390 = c;
var G__12391 = d;
var G__12392 = e;
var G__12393 = f;
var G__12394 = g;
var G__12395 = h;
var G__12396 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__12388,G__12389,G__12390,G__12391,G__12392,G__12393,G__12394,G__12395,G__12396) : self__.dispatch_fn.call(null,G__12388,G__12389,G__12390,G__12391,G__12392,G__12393,G__12394,G__12395,G__12396));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12397 = a;
var G__12398 = b;
var G__12399 = c;
var G__12400 = d;
var G__12401 = e;
var G__12402 = f;
var G__12403 = g;
var G__12404 = h;
var G__12405 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__12397,G__12398,G__12399,G__12400,G__12401,G__12402,G__12403,G__12404,G__12405) : target_fn.call(null,G__12397,G__12398,G__12399,G__12400,G__12401,G__12402,G__12403,G__12404,G__12405));
});
var G__13156__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12406 = a;
var G__12407 = b;
var G__12408 = c;
var G__12409 = d;
var G__12410 = e;
var G__12411 = f;
var G__12412 = g;
var G__12413 = h;
var G__12414 = i;
var G__12415 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__12406,G__12407,G__12408,G__12409,G__12410,G__12411,G__12412,G__12413,G__12414,G__12415) : self__.dispatch_fn.call(null,G__12406,G__12407,G__12408,G__12409,G__12410,G__12411,G__12412,G__12413,G__12414,G__12415));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12416 = a;
var G__12417 = b;
var G__12418 = c;
var G__12419 = d;
var G__12420 = e;
var G__12421 = f;
var G__12422 = g;
var G__12423 = h;
var G__12424 = i;
var G__12425 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__12416,G__12417,G__12418,G__12419,G__12420,G__12421,G__12422,G__12423,G__12424,G__12425) : target_fn.call(null,G__12416,G__12417,G__12418,G__12419,G__12420,G__12421,G__12422,G__12423,G__12424,G__12425));
});
var G__13156__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12426 = a;
var G__12427 = b;
var G__12428 = c;
var G__12429 = d;
var G__12430 = e;
var G__12431 = f;
var G__12432 = g;
var G__12433 = h;
var G__12434 = i;
var G__12435 = j;
var G__12436 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__12426,G__12427,G__12428,G__12429,G__12430,G__12431,G__12432,G__12433,G__12434,G__12435,G__12436) : self__.dispatch_fn.call(null,G__12426,G__12427,G__12428,G__12429,G__12430,G__12431,G__12432,G__12433,G__12434,G__12435,G__12436));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12437 = a;
var G__12438 = b;
var G__12439 = c;
var G__12440 = d;
var G__12441 = e;
var G__12442 = f;
var G__12443 = g;
var G__12444 = h;
var G__12445 = i;
var G__12446 = j;
var G__12447 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__12437,G__12438,G__12439,G__12440,G__12441,G__12442,G__12443,G__12444,G__12445,G__12446,G__12447) : target_fn.call(null,G__12437,G__12438,G__12439,G__12440,G__12441,G__12442,G__12443,G__12444,G__12445,G__12446,G__12447));
});
var G__13156__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12448 = a;
var G__12449 = b;
var G__12450 = c;
var G__12451 = d;
var G__12452 = e;
var G__12453 = f;
var G__12454 = g;
var G__12455 = h;
var G__12456 = i;
var G__12457 = j;
var G__12458 = k;
var G__12459 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__12448,G__12449,G__12450,G__12451,G__12452,G__12453,G__12454,G__12455,G__12456,G__12457,G__12458,G__12459) : self__.dispatch_fn.call(null,G__12448,G__12449,G__12450,G__12451,G__12452,G__12453,G__12454,G__12455,G__12456,G__12457,G__12458,G__12459));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12460 = a;
var G__12461 = b;
var G__12462 = c;
var G__12463 = d;
var G__12464 = e;
var G__12465 = f;
var G__12466 = g;
var G__12467 = h;
var G__12468 = i;
var G__12469 = j;
var G__12470 = k;
var G__12471 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__12460,G__12461,G__12462,G__12463,G__12464,G__12465,G__12466,G__12467,G__12468,G__12469,G__12470,G__12471) : target_fn.call(null,G__12460,G__12461,G__12462,G__12463,G__12464,G__12465,G__12466,G__12467,G__12468,G__12469,G__12470,G__12471));
});
var G__13156__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12472 = a;
var G__12473 = b;
var G__12474 = c;
var G__12475 = d;
var G__12476 = e;
var G__12477 = f;
var G__12478 = g;
var G__12479 = h;
var G__12480 = i;
var G__12481 = j;
var G__12482 = k;
var G__12483 = l;
var G__12484 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__12472,G__12473,G__12474,G__12475,G__12476,G__12477,G__12478,G__12479,G__12480,G__12481,G__12482,G__12483,G__12484) : self__.dispatch_fn.call(null,G__12472,G__12473,G__12474,G__12475,G__12476,G__12477,G__12478,G__12479,G__12480,G__12481,G__12482,G__12483,G__12484));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12485 = a;
var G__12486 = b;
var G__12487 = c;
var G__12488 = d;
var G__12489 = e;
var G__12490 = f;
var G__12491 = g;
var G__12492 = h;
var G__12493 = i;
var G__12494 = j;
var G__12495 = k;
var G__12496 = l;
var G__12497 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__12485,G__12486,G__12487,G__12488,G__12489,G__12490,G__12491,G__12492,G__12493,G__12494,G__12495,G__12496,G__12497) : target_fn.call(null,G__12485,G__12486,G__12487,G__12488,G__12489,G__12490,G__12491,G__12492,G__12493,G__12494,G__12495,G__12496,G__12497));
});
var G__13156__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12498 = a;
var G__12499 = b;
var G__12500 = c;
var G__12501 = d;
var G__12502 = e;
var G__12503 = f;
var G__12504 = g;
var G__12505 = h;
var G__12506 = i;
var G__12507 = j;
var G__12508 = k;
var G__12509 = l;
var G__12510 = m;
var G__12511 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__12498,G__12499,G__12500,G__12501,G__12502,G__12503,G__12504,G__12505,G__12506,G__12507,G__12508,G__12509,G__12510,G__12511) : self__.dispatch_fn.call(null,G__12498,G__12499,G__12500,G__12501,G__12502,G__12503,G__12504,G__12505,G__12506,G__12507,G__12508,G__12509,G__12510,G__12511));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12512 = a;
var G__12513 = b;
var G__12514 = c;
var G__12515 = d;
var G__12516 = e;
var G__12517 = f;
var G__12518 = g;
var G__12519 = h;
var G__12520 = i;
var G__12521 = j;
var G__12522 = k;
var G__12523 = l;
var G__12524 = m;
var G__12525 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__12512,G__12513,G__12514,G__12515,G__12516,G__12517,G__12518,G__12519,G__12520,G__12521,G__12522,G__12523,G__12524,G__12525) : target_fn.call(null,G__12512,G__12513,G__12514,G__12515,G__12516,G__12517,G__12518,G__12519,G__12520,G__12521,G__12522,G__12523,G__12524,G__12525));
});
var G__13156__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12526 = a;
var G__12527 = b;
var G__12528 = c;
var G__12529 = d;
var G__12530 = e;
var G__12531 = f;
var G__12532 = g;
var G__12533 = h;
var G__12534 = i;
var G__12535 = j;
var G__12536 = k;
var G__12537 = l;
var G__12538 = m;
var G__12539 = n;
var G__12540 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__12526,G__12527,G__12528,G__12529,G__12530,G__12531,G__12532,G__12533,G__12534,G__12535,G__12536,G__12537,G__12538,G__12539,G__12540) : self__.dispatch_fn.call(null,G__12526,G__12527,G__12528,G__12529,G__12530,G__12531,G__12532,G__12533,G__12534,G__12535,G__12536,G__12537,G__12538,G__12539,G__12540));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12541 = a;
var G__12542 = b;
var G__12543 = c;
var G__12544 = d;
var G__12545 = e;
var G__12546 = f;
var G__12547 = g;
var G__12548 = h;
var G__12549 = i;
var G__12550 = j;
var G__12551 = k;
var G__12552 = l;
var G__12553 = m;
var G__12554 = n;
var G__12555 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__12541,G__12542,G__12543,G__12544,G__12545,G__12546,G__12547,G__12548,G__12549,G__12550,G__12551,G__12552,G__12553,G__12554,G__12555) : target_fn.call(null,G__12541,G__12542,G__12543,G__12544,G__12545,G__12546,G__12547,G__12548,G__12549,G__12550,G__12551,G__12552,G__12553,G__12554,G__12555));
});
var G__13156__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12556 = a;
var G__12557 = b;
var G__12558 = c;
var G__12559 = d;
var G__12560 = e;
var G__12561 = f;
var G__12562 = g;
var G__12563 = h;
var G__12564 = i;
var G__12565 = j;
var G__12566 = k;
var G__12567 = l;
var G__12568 = m;
var G__12569 = n;
var G__12570 = o;
var G__12571 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__12556,G__12557,G__12558,G__12559,G__12560,G__12561,G__12562,G__12563,G__12564,G__12565,G__12566,G__12567,G__12568,G__12569,G__12570,G__12571) : self__.dispatch_fn.call(null,G__12556,G__12557,G__12558,G__12559,G__12560,G__12561,G__12562,G__12563,G__12564,G__12565,G__12566,G__12567,G__12568,G__12569,G__12570,G__12571));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12572 = a;
var G__12573 = b;
var G__12574 = c;
var G__12575 = d;
var G__12576 = e;
var G__12577 = f;
var G__12578 = g;
var G__12579 = h;
var G__12580 = i;
var G__12581 = j;
var G__12582 = k;
var G__12583 = l;
var G__12584 = m;
var G__12585 = n;
var G__12586 = o;
var G__12587 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__12572,G__12573,G__12574,G__12575,G__12576,G__12577,G__12578,G__12579,G__12580,G__12581,G__12582,G__12583,G__12584,G__12585,G__12586,G__12587) : target_fn.call(null,G__12572,G__12573,G__12574,G__12575,G__12576,G__12577,G__12578,G__12579,G__12580,G__12581,G__12582,G__12583,G__12584,G__12585,G__12586,G__12587));
});
var G__13156__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12588 = a;
var G__12589 = b;
var G__12590 = c;
var G__12591 = d;
var G__12592 = e;
var G__12593 = f;
var G__12594 = g;
var G__12595 = h;
var G__12596 = i;
var G__12597 = j;
var G__12598 = k;
var G__12599 = l;
var G__12600 = m;
var G__12601 = n;
var G__12602 = o;
var G__12603 = p;
var G__12604 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__12588,G__12589,G__12590,G__12591,G__12592,G__12593,G__12594,G__12595,G__12596,G__12597,G__12598,G__12599,G__12600,G__12601,G__12602,G__12603,G__12604) : self__.dispatch_fn.call(null,G__12588,G__12589,G__12590,G__12591,G__12592,G__12593,G__12594,G__12595,G__12596,G__12597,G__12598,G__12599,G__12600,G__12601,G__12602,G__12603,G__12604));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12605 = a;
var G__12606 = b;
var G__12607 = c;
var G__12608 = d;
var G__12609 = e;
var G__12610 = f;
var G__12611 = g;
var G__12612 = h;
var G__12613 = i;
var G__12614 = j;
var G__12615 = k;
var G__12616 = l;
var G__12617 = m;
var G__12618 = n;
var G__12619 = o;
var G__12620 = p;
var G__12621 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__12605,G__12606,G__12607,G__12608,G__12609,G__12610,G__12611,G__12612,G__12613,G__12614,G__12615,G__12616,G__12617,G__12618,G__12619,G__12620,G__12621) : target_fn.call(null,G__12605,G__12606,G__12607,G__12608,G__12609,G__12610,G__12611,G__12612,G__12613,G__12614,G__12615,G__12616,G__12617,G__12618,G__12619,G__12620,G__12621));
});
var G__13156__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12622 = a;
var G__12623 = b;
var G__12624 = c;
var G__12625 = d;
var G__12626 = e;
var G__12627 = f;
var G__12628 = g;
var G__12629 = h;
var G__12630 = i;
var G__12631 = j;
var G__12632 = k;
var G__12633 = l;
var G__12634 = m;
var G__12635 = n;
var G__12636 = o;
var G__12637 = p;
var G__12638 = q;
var G__12639 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__12622,G__12623,G__12624,G__12625,G__12626,G__12627,G__12628,G__12629,G__12630,G__12631,G__12632,G__12633,G__12634,G__12635,G__12636,G__12637,G__12638,G__12639) : self__.dispatch_fn.call(null,G__12622,G__12623,G__12624,G__12625,G__12626,G__12627,G__12628,G__12629,G__12630,G__12631,G__12632,G__12633,G__12634,G__12635,G__12636,G__12637,G__12638,G__12639));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12640 = a;
var G__12641 = b;
var G__12642 = c;
var G__12643 = d;
var G__12644 = e;
var G__12645 = f;
var G__12646 = g;
var G__12647 = h;
var G__12648 = i;
var G__12649 = j;
var G__12650 = k;
var G__12651 = l;
var G__12652 = m;
var G__12653 = n;
var G__12654 = o;
var G__12655 = p;
var G__12656 = q;
var G__12657 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__12640,G__12641,G__12642,G__12643,G__12644,G__12645,G__12646,G__12647,G__12648,G__12649,G__12650,G__12651,G__12652,G__12653,G__12654,G__12655,G__12656,G__12657) : target_fn.call(null,G__12640,G__12641,G__12642,G__12643,G__12644,G__12645,G__12646,G__12647,G__12648,G__12649,G__12650,G__12651,G__12652,G__12653,G__12654,G__12655,G__12656,G__12657));
});
var G__13156__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12658 = a;
var G__12659 = b;
var G__12660 = c;
var G__12661 = d;
var G__12662 = e;
var G__12663 = f;
var G__12664 = g;
var G__12665 = h;
var G__12666 = i;
var G__12667 = j;
var G__12668 = k;
var G__12669 = l;
var G__12670 = m;
var G__12671 = n;
var G__12672 = o;
var G__12673 = p;
var G__12674 = q;
var G__12675 = r;
var G__12676 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__12658,G__12659,G__12660,G__12661,G__12662,G__12663,G__12664,G__12665,G__12666,G__12667,G__12668,G__12669,G__12670,G__12671,G__12672,G__12673,G__12674,G__12675,G__12676) : self__.dispatch_fn.call(null,G__12658,G__12659,G__12660,G__12661,G__12662,G__12663,G__12664,G__12665,G__12666,G__12667,G__12668,G__12669,G__12670,G__12671,G__12672,G__12673,G__12674,G__12675,G__12676));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12677 = a;
var G__12678 = b;
var G__12679 = c;
var G__12680 = d;
var G__12681 = e;
var G__12682 = f;
var G__12683 = g;
var G__12684 = h;
var G__12685 = i;
var G__12686 = j;
var G__12687 = k;
var G__12688 = l;
var G__12689 = m;
var G__12690 = n;
var G__12691 = o;
var G__12692 = p;
var G__12693 = q;
var G__12694 = r;
var G__12695 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__12677,G__12678,G__12679,G__12680,G__12681,G__12682,G__12683,G__12684,G__12685,G__12686,G__12687,G__12688,G__12689,G__12690,G__12691,G__12692,G__12693,G__12694,G__12695) : target_fn.call(null,G__12677,G__12678,G__12679,G__12680,G__12681,G__12682,G__12683,G__12684,G__12685,G__12686,G__12687,G__12688,G__12689,G__12690,G__12691,G__12692,G__12693,G__12694,G__12695));
});
var G__13156__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12696 = a;
var G__12697 = b;
var G__12698 = c;
var G__12699 = d;
var G__12700 = e;
var G__12701 = f;
var G__12702 = g;
var G__12703 = h;
var G__12704 = i;
var G__12705 = j;
var G__12706 = k;
var G__12707 = l;
var G__12708 = m;
var G__12709 = n;
var G__12710 = o;
var G__12711 = p;
var G__12712 = q;
var G__12713 = r;
var G__12714 = s;
var G__12715 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__12696,G__12697,G__12698,G__12699,G__12700,G__12701,G__12702,G__12703,G__12704,G__12705,G__12706,G__12707,G__12708,G__12709,G__12710,G__12711,G__12712,G__12713,G__12714,G__12715) : self__.dispatch_fn.call(null,G__12696,G__12697,G__12698,G__12699,G__12700,G__12701,G__12702,G__12703,G__12704,G__12705,G__12706,G__12707,G__12708,G__12709,G__12710,G__12711,G__12712,G__12713,G__12714,G__12715));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12716 = a;
var G__12717 = b;
var G__12718 = c;
var G__12719 = d;
var G__12720 = e;
var G__12721 = f;
var G__12722 = g;
var G__12723 = h;
var G__12724 = i;
var G__12725 = j;
var G__12726 = k;
var G__12727 = l;
var G__12728 = m;
var G__12729 = n;
var G__12730 = o;
var G__12731 = p;
var G__12732 = q;
var G__12733 = r;
var G__12734 = s;
var G__12735 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__12716,G__12717,G__12718,G__12719,G__12720,G__12721,G__12722,G__12723,G__12724,G__12725,G__12726,G__12727,G__12728,G__12729,G__12730,G__12731,G__12732,G__12733,G__12734,G__12735) : target_fn.call(null,G__12716,G__12717,G__12718,G__12719,G__12720,G__12721,G__12722,G__12723,G__12724,G__12725,G__12726,G__12727,G__12728,G__12729,G__12730,G__12731,G__12732,G__12733,G__12734,G__12735));
});
var G__13156__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});
G__13156 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__13156__1.call(this,self__);
case 2:
return G__13156__2.call(this,self__,a);
case 3:
return G__13156__3.call(this,self__,a,b);
case 4:
return G__13156__4.call(this,self__,a,b,c);
case 5:
return G__13156__5.call(this,self__,a,b,c,d);
case 6:
return G__13156__6.call(this,self__,a,b,c,d,e);
case 7:
return G__13156__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__13156__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__13156__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__13156__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__13156__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__13156__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__13156__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__13156__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__13156__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__13156__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__13156__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__13156__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__13156__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__13156__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__13156__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__13156__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13156.cljs$core$IFn$_invoke$arity$1 = G__13156__1;
G__13156.cljs$core$IFn$_invoke$arity$2 = G__13156__2;
G__13156.cljs$core$IFn$_invoke$arity$3 = G__13156__3;
G__13156.cljs$core$IFn$_invoke$arity$4 = G__13156__4;
G__13156.cljs$core$IFn$_invoke$arity$5 = G__13156__5;
G__13156.cljs$core$IFn$_invoke$arity$6 = G__13156__6;
G__13156.cljs$core$IFn$_invoke$arity$7 = G__13156__7;
G__13156.cljs$core$IFn$_invoke$arity$8 = G__13156__8;
G__13156.cljs$core$IFn$_invoke$arity$9 = G__13156__9;
G__13156.cljs$core$IFn$_invoke$arity$10 = G__13156__10;
G__13156.cljs$core$IFn$_invoke$arity$11 = G__13156__11;
G__13156.cljs$core$IFn$_invoke$arity$12 = G__13156__12;
G__13156.cljs$core$IFn$_invoke$arity$13 = G__13156__13;
G__13156.cljs$core$IFn$_invoke$arity$14 = G__13156__14;
G__13156.cljs$core$IFn$_invoke$arity$15 = G__13156__15;
G__13156.cljs$core$IFn$_invoke$arity$16 = G__13156__16;
G__13156.cljs$core$IFn$_invoke$arity$17 = G__13156__17;
G__13156.cljs$core$IFn$_invoke$arity$18 = G__13156__18;
G__13156.cljs$core$IFn$_invoke$arity$19 = G__13156__19;
G__13156.cljs$core$IFn$_invoke$arity$20 = G__13156__20;
G__13156.cljs$core$IFn$_invoke$arity$21 = G__13156__21;
G__13156.cljs$core$IFn$_invoke$arity$22 = G__13156__22;
return G__13156;
})()
;

cljs.core.MultiFn.prototype.apply = (function (self__,args12308){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args12308)));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var mf = this;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12736 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__12736) : self__.dispatch_fn.call(null,G__12736));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12737 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__12737) : target_fn.call(null,G__12737));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12738 = a;
var G__12739 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__12738,G__12739) : self__.dispatch_fn.call(null,G__12738,G__12739));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12740 = a;
var G__12741 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__12740,G__12741) : target_fn.call(null,G__12740,G__12741));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12742 = a;
var G__12743 = b;
var G__12744 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__12742,G__12743,G__12744) : self__.dispatch_fn.call(null,G__12742,G__12743,G__12744));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12745 = a;
var G__12746 = b;
var G__12747 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__12745,G__12746,G__12747) : target_fn.call(null,G__12745,G__12746,G__12747));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12748 = a;
var G__12749 = b;
var G__12750 = c;
var G__12751 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__12748,G__12749,G__12750,G__12751) : self__.dispatch_fn.call(null,G__12748,G__12749,G__12750,G__12751));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12752 = a;
var G__12753 = b;
var G__12754 = c;
var G__12755 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__12752,G__12753,G__12754,G__12755) : target_fn.call(null,G__12752,G__12753,G__12754,G__12755));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12756 = a;
var G__12757 = b;
var G__12758 = c;
var G__12759 = d;
var G__12760 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__12756,G__12757,G__12758,G__12759,G__12760) : self__.dispatch_fn.call(null,G__12756,G__12757,G__12758,G__12759,G__12760));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12761 = a;
var G__12762 = b;
var G__12763 = c;
var G__12764 = d;
var G__12765 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__12761,G__12762,G__12763,G__12764,G__12765) : target_fn.call(null,G__12761,G__12762,G__12763,G__12764,G__12765));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12766 = a;
var G__12767 = b;
var G__12768 = c;
var G__12769 = d;
var G__12770 = e;
var G__12771 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__12766,G__12767,G__12768,G__12769,G__12770,G__12771) : self__.dispatch_fn.call(null,G__12766,G__12767,G__12768,G__12769,G__12770,G__12771));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12772 = a;
var G__12773 = b;
var G__12774 = c;
var G__12775 = d;
var G__12776 = e;
var G__12777 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__12772,G__12773,G__12774,G__12775,G__12776,G__12777) : target_fn.call(null,G__12772,G__12773,G__12774,G__12775,G__12776,G__12777));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12778 = a;
var G__12779 = b;
var G__12780 = c;
var G__12781 = d;
var G__12782 = e;
var G__12783 = f;
var G__12784 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__12778,G__12779,G__12780,G__12781,G__12782,G__12783,G__12784) : self__.dispatch_fn.call(null,G__12778,G__12779,G__12780,G__12781,G__12782,G__12783,G__12784));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12785 = a;
var G__12786 = b;
var G__12787 = c;
var G__12788 = d;
var G__12789 = e;
var G__12790 = f;
var G__12791 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__12785,G__12786,G__12787,G__12788,G__12789,G__12790,G__12791) : target_fn.call(null,G__12785,G__12786,G__12787,G__12788,G__12789,G__12790,G__12791));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12792 = a;
var G__12793 = b;
var G__12794 = c;
var G__12795 = d;
var G__12796 = e;
var G__12797 = f;
var G__12798 = g;
var G__12799 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__12792,G__12793,G__12794,G__12795,G__12796,G__12797,G__12798,G__12799) : self__.dispatch_fn.call(null,G__12792,G__12793,G__12794,G__12795,G__12796,G__12797,G__12798,G__12799));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12800 = a;
var G__12801 = b;
var G__12802 = c;
var G__12803 = d;
var G__12804 = e;
var G__12805 = f;
var G__12806 = g;
var G__12807 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__12800,G__12801,G__12802,G__12803,G__12804,G__12805,G__12806,G__12807) : target_fn.call(null,G__12800,G__12801,G__12802,G__12803,G__12804,G__12805,G__12806,G__12807));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12808 = a;
var G__12809 = b;
var G__12810 = c;
var G__12811 = d;
var G__12812 = e;
var G__12813 = f;
var G__12814 = g;
var G__12815 = h;
var G__12816 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__12808,G__12809,G__12810,G__12811,G__12812,G__12813,G__12814,G__12815,G__12816) : self__.dispatch_fn.call(null,G__12808,G__12809,G__12810,G__12811,G__12812,G__12813,G__12814,G__12815,G__12816));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12817 = a;
var G__12818 = b;
var G__12819 = c;
var G__12820 = d;
var G__12821 = e;
var G__12822 = f;
var G__12823 = g;
var G__12824 = h;
var G__12825 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__12817,G__12818,G__12819,G__12820,G__12821,G__12822,G__12823,G__12824,G__12825) : target_fn.call(null,G__12817,G__12818,G__12819,G__12820,G__12821,G__12822,G__12823,G__12824,G__12825));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12826 = a;
var G__12827 = b;
var G__12828 = c;
var G__12829 = d;
var G__12830 = e;
var G__12831 = f;
var G__12832 = g;
var G__12833 = h;
var G__12834 = i;
var G__12835 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__12826,G__12827,G__12828,G__12829,G__12830,G__12831,G__12832,G__12833,G__12834,G__12835) : self__.dispatch_fn.call(null,G__12826,G__12827,G__12828,G__12829,G__12830,G__12831,G__12832,G__12833,G__12834,G__12835));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12836 = a;
var G__12837 = b;
var G__12838 = c;
var G__12839 = d;
var G__12840 = e;
var G__12841 = f;
var G__12842 = g;
var G__12843 = h;
var G__12844 = i;
var G__12845 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__12836,G__12837,G__12838,G__12839,G__12840,G__12841,G__12842,G__12843,G__12844,G__12845) : target_fn.call(null,G__12836,G__12837,G__12838,G__12839,G__12840,G__12841,G__12842,G__12843,G__12844,G__12845));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12846 = a;
var G__12847 = b;
var G__12848 = c;
var G__12849 = d;
var G__12850 = e;
var G__12851 = f;
var G__12852 = g;
var G__12853 = h;
var G__12854 = i;
var G__12855 = j;
var G__12856 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__12846,G__12847,G__12848,G__12849,G__12850,G__12851,G__12852,G__12853,G__12854,G__12855,G__12856) : self__.dispatch_fn.call(null,G__12846,G__12847,G__12848,G__12849,G__12850,G__12851,G__12852,G__12853,G__12854,G__12855,G__12856));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12857 = a;
var G__12858 = b;
var G__12859 = c;
var G__12860 = d;
var G__12861 = e;
var G__12862 = f;
var G__12863 = g;
var G__12864 = h;
var G__12865 = i;
var G__12866 = j;
var G__12867 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__12857,G__12858,G__12859,G__12860,G__12861,G__12862,G__12863,G__12864,G__12865,G__12866,G__12867) : target_fn.call(null,G__12857,G__12858,G__12859,G__12860,G__12861,G__12862,G__12863,G__12864,G__12865,G__12866,G__12867));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12868 = a;
var G__12869 = b;
var G__12870 = c;
var G__12871 = d;
var G__12872 = e;
var G__12873 = f;
var G__12874 = g;
var G__12875 = h;
var G__12876 = i;
var G__12877 = j;
var G__12878 = k;
var G__12879 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__12868,G__12869,G__12870,G__12871,G__12872,G__12873,G__12874,G__12875,G__12876,G__12877,G__12878,G__12879) : self__.dispatch_fn.call(null,G__12868,G__12869,G__12870,G__12871,G__12872,G__12873,G__12874,G__12875,G__12876,G__12877,G__12878,G__12879));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12880 = a;
var G__12881 = b;
var G__12882 = c;
var G__12883 = d;
var G__12884 = e;
var G__12885 = f;
var G__12886 = g;
var G__12887 = h;
var G__12888 = i;
var G__12889 = j;
var G__12890 = k;
var G__12891 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__12880,G__12881,G__12882,G__12883,G__12884,G__12885,G__12886,G__12887,G__12888,G__12889,G__12890,G__12891) : target_fn.call(null,G__12880,G__12881,G__12882,G__12883,G__12884,G__12885,G__12886,G__12887,G__12888,G__12889,G__12890,G__12891));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12892 = a;
var G__12893 = b;
var G__12894 = c;
var G__12895 = d;
var G__12896 = e;
var G__12897 = f;
var G__12898 = g;
var G__12899 = h;
var G__12900 = i;
var G__12901 = j;
var G__12902 = k;
var G__12903 = l;
var G__12904 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__12892,G__12893,G__12894,G__12895,G__12896,G__12897,G__12898,G__12899,G__12900,G__12901,G__12902,G__12903,G__12904) : self__.dispatch_fn.call(null,G__12892,G__12893,G__12894,G__12895,G__12896,G__12897,G__12898,G__12899,G__12900,G__12901,G__12902,G__12903,G__12904));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12905 = a;
var G__12906 = b;
var G__12907 = c;
var G__12908 = d;
var G__12909 = e;
var G__12910 = f;
var G__12911 = g;
var G__12912 = h;
var G__12913 = i;
var G__12914 = j;
var G__12915 = k;
var G__12916 = l;
var G__12917 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__12905,G__12906,G__12907,G__12908,G__12909,G__12910,G__12911,G__12912,G__12913,G__12914,G__12915,G__12916,G__12917) : target_fn.call(null,G__12905,G__12906,G__12907,G__12908,G__12909,G__12910,G__12911,G__12912,G__12913,G__12914,G__12915,G__12916,G__12917));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12918 = a;
var G__12919 = b;
var G__12920 = c;
var G__12921 = d;
var G__12922 = e;
var G__12923 = f;
var G__12924 = g;
var G__12925 = h;
var G__12926 = i;
var G__12927 = j;
var G__12928 = k;
var G__12929 = l;
var G__12930 = m;
var G__12931 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__12918,G__12919,G__12920,G__12921,G__12922,G__12923,G__12924,G__12925,G__12926,G__12927,G__12928,G__12929,G__12930,G__12931) : self__.dispatch_fn.call(null,G__12918,G__12919,G__12920,G__12921,G__12922,G__12923,G__12924,G__12925,G__12926,G__12927,G__12928,G__12929,G__12930,G__12931));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12932 = a;
var G__12933 = b;
var G__12934 = c;
var G__12935 = d;
var G__12936 = e;
var G__12937 = f;
var G__12938 = g;
var G__12939 = h;
var G__12940 = i;
var G__12941 = j;
var G__12942 = k;
var G__12943 = l;
var G__12944 = m;
var G__12945 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__12932,G__12933,G__12934,G__12935,G__12936,G__12937,G__12938,G__12939,G__12940,G__12941,G__12942,G__12943,G__12944,G__12945) : target_fn.call(null,G__12932,G__12933,G__12934,G__12935,G__12936,G__12937,G__12938,G__12939,G__12940,G__12941,G__12942,G__12943,G__12944,G__12945));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12946 = a;
var G__12947 = b;
var G__12948 = c;
var G__12949 = d;
var G__12950 = e;
var G__12951 = f;
var G__12952 = g;
var G__12953 = h;
var G__12954 = i;
var G__12955 = j;
var G__12956 = k;
var G__12957 = l;
var G__12958 = m;
var G__12959 = n;
var G__12960 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__12946,G__12947,G__12948,G__12949,G__12950,G__12951,G__12952,G__12953,G__12954,G__12955,G__12956,G__12957,G__12958,G__12959,G__12960) : self__.dispatch_fn.call(null,G__12946,G__12947,G__12948,G__12949,G__12950,G__12951,G__12952,G__12953,G__12954,G__12955,G__12956,G__12957,G__12958,G__12959,G__12960));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12961 = a;
var G__12962 = b;
var G__12963 = c;
var G__12964 = d;
var G__12965 = e;
var G__12966 = f;
var G__12967 = g;
var G__12968 = h;
var G__12969 = i;
var G__12970 = j;
var G__12971 = k;
var G__12972 = l;
var G__12973 = m;
var G__12974 = n;
var G__12975 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__12961,G__12962,G__12963,G__12964,G__12965,G__12966,G__12967,G__12968,G__12969,G__12970,G__12971,G__12972,G__12973,G__12974,G__12975) : target_fn.call(null,G__12961,G__12962,G__12963,G__12964,G__12965,G__12966,G__12967,G__12968,G__12969,G__12970,G__12971,G__12972,G__12973,G__12974,G__12975));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12976 = a;
var G__12977 = b;
var G__12978 = c;
var G__12979 = d;
var G__12980 = e;
var G__12981 = f;
var G__12982 = g;
var G__12983 = h;
var G__12984 = i;
var G__12985 = j;
var G__12986 = k;
var G__12987 = l;
var G__12988 = m;
var G__12989 = n;
var G__12990 = o;
var G__12991 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__12976,G__12977,G__12978,G__12979,G__12980,G__12981,G__12982,G__12983,G__12984,G__12985,G__12986,G__12987,G__12988,G__12989,G__12990,G__12991) : self__.dispatch_fn.call(null,G__12976,G__12977,G__12978,G__12979,G__12980,G__12981,G__12982,G__12983,G__12984,G__12985,G__12986,G__12987,G__12988,G__12989,G__12990,G__12991));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12992 = a;
var G__12993 = b;
var G__12994 = c;
var G__12995 = d;
var G__12996 = e;
var G__12997 = f;
var G__12998 = g;
var G__12999 = h;
var G__13000 = i;
var G__13001 = j;
var G__13002 = k;
var G__13003 = l;
var G__13004 = m;
var G__13005 = n;
var G__13006 = o;
var G__13007 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__12992,G__12993,G__12994,G__12995,G__12996,G__12997,G__12998,G__12999,G__13000,G__13001,G__13002,G__13003,G__13004,G__13005,G__13006,G__13007) : target_fn.call(null,G__12992,G__12993,G__12994,G__12995,G__12996,G__12997,G__12998,G__12999,G__13000,G__13001,G__13002,G__13003,G__13004,G__13005,G__13006,G__13007));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__13008 = a;
var G__13009 = b;
var G__13010 = c;
var G__13011 = d;
var G__13012 = e;
var G__13013 = f;
var G__13014 = g;
var G__13015 = h;
var G__13016 = i;
var G__13017 = j;
var G__13018 = k;
var G__13019 = l;
var G__13020 = m;
var G__13021 = n;
var G__13022 = o;
var G__13023 = p;
var G__13024 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__13008,G__13009,G__13010,G__13011,G__13012,G__13013,G__13014,G__13015,G__13016,G__13017,G__13018,G__13019,G__13020,G__13021,G__13022,G__13023,G__13024) : self__.dispatch_fn.call(null,G__13008,G__13009,G__13010,G__13011,G__13012,G__13013,G__13014,G__13015,G__13016,G__13017,G__13018,G__13019,G__13020,G__13021,G__13022,G__13023,G__13024));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__13025 = a;
var G__13026 = b;
var G__13027 = c;
var G__13028 = d;
var G__13029 = e;
var G__13030 = f;
var G__13031 = g;
var G__13032 = h;
var G__13033 = i;
var G__13034 = j;
var G__13035 = k;
var G__13036 = l;
var G__13037 = m;
var G__13038 = n;
var G__13039 = o;
var G__13040 = p;
var G__13041 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__13025,G__13026,G__13027,G__13028,G__13029,G__13030,G__13031,G__13032,G__13033,G__13034,G__13035,G__13036,G__13037,G__13038,G__13039,G__13040,G__13041) : target_fn.call(null,G__13025,G__13026,G__13027,G__13028,G__13029,G__13030,G__13031,G__13032,G__13033,G__13034,G__13035,G__13036,G__13037,G__13038,G__13039,G__13040,G__13041));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__13042 = a;
var G__13043 = b;
var G__13044 = c;
var G__13045 = d;
var G__13046 = e;
var G__13047 = f;
var G__13048 = g;
var G__13049 = h;
var G__13050 = i;
var G__13051 = j;
var G__13052 = k;
var G__13053 = l;
var G__13054 = m;
var G__13055 = n;
var G__13056 = o;
var G__13057 = p;
var G__13058 = q;
var G__13059 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__13042,G__13043,G__13044,G__13045,G__13046,G__13047,G__13048,G__13049,G__13050,G__13051,G__13052,G__13053,G__13054,G__13055,G__13056,G__13057,G__13058,G__13059) : self__.dispatch_fn.call(null,G__13042,G__13043,G__13044,G__13045,G__13046,G__13047,G__13048,G__13049,G__13050,G__13051,G__13052,G__13053,G__13054,G__13055,G__13056,G__13057,G__13058,G__13059));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__13060 = a;
var G__13061 = b;
var G__13062 = c;
var G__13063 = d;
var G__13064 = e;
var G__13065 = f;
var G__13066 = g;
var G__13067 = h;
var G__13068 = i;
var G__13069 = j;
var G__13070 = k;
var G__13071 = l;
var G__13072 = m;
var G__13073 = n;
var G__13074 = o;
var G__13075 = p;
var G__13076 = q;
var G__13077 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__13060,G__13061,G__13062,G__13063,G__13064,G__13065,G__13066,G__13067,G__13068,G__13069,G__13070,G__13071,G__13072,G__13073,G__13074,G__13075,G__13076,G__13077) : target_fn.call(null,G__13060,G__13061,G__13062,G__13063,G__13064,G__13065,G__13066,G__13067,G__13068,G__13069,G__13070,G__13071,G__13072,G__13073,G__13074,G__13075,G__13076,G__13077));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__13078 = a;
var G__13079 = b;
var G__13080 = c;
var G__13081 = d;
var G__13082 = e;
var G__13083 = f;
var G__13084 = g;
var G__13085 = h;
var G__13086 = i;
var G__13087 = j;
var G__13088 = k;
var G__13089 = l;
var G__13090 = m;
var G__13091 = n;
var G__13092 = o;
var G__13093 = p;
var G__13094 = q;
var G__13095 = r;
var G__13096 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__13078,G__13079,G__13080,G__13081,G__13082,G__13083,G__13084,G__13085,G__13086,G__13087,G__13088,G__13089,G__13090,G__13091,G__13092,G__13093,G__13094,G__13095,G__13096) : self__.dispatch_fn.call(null,G__13078,G__13079,G__13080,G__13081,G__13082,G__13083,G__13084,G__13085,G__13086,G__13087,G__13088,G__13089,G__13090,G__13091,G__13092,G__13093,G__13094,G__13095,G__13096));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__13097 = a;
var G__13098 = b;
var G__13099 = c;
var G__13100 = d;
var G__13101 = e;
var G__13102 = f;
var G__13103 = g;
var G__13104 = h;
var G__13105 = i;
var G__13106 = j;
var G__13107 = k;
var G__13108 = l;
var G__13109 = m;
var G__13110 = n;
var G__13111 = o;
var G__13112 = p;
var G__13113 = q;
var G__13114 = r;
var G__13115 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__13097,G__13098,G__13099,G__13100,G__13101,G__13102,G__13103,G__13104,G__13105,G__13106,G__13107,G__13108,G__13109,G__13110,G__13111,G__13112,G__13113,G__13114,G__13115) : target_fn.call(null,G__13097,G__13098,G__13099,G__13100,G__13101,G__13102,G__13103,G__13104,G__13105,G__13106,G__13107,G__13108,G__13109,G__13110,G__13111,G__13112,G__13113,G__13114,G__13115));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__13116 = a;
var G__13117 = b;
var G__13118 = c;
var G__13119 = d;
var G__13120 = e;
var G__13121 = f;
var G__13122 = g;
var G__13123 = h;
var G__13124 = i;
var G__13125 = j;
var G__13126 = k;
var G__13127 = l;
var G__13128 = m;
var G__13129 = n;
var G__13130 = o;
var G__13131 = p;
var G__13132 = q;
var G__13133 = r;
var G__13134 = s;
var G__13135 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__13116,G__13117,G__13118,G__13119,G__13120,G__13121,G__13122,G__13123,G__13124,G__13125,G__13126,G__13127,G__13128,G__13129,G__13130,G__13131,G__13132,G__13133,G__13134,G__13135) : self__.dispatch_fn.call(null,G__13116,G__13117,G__13118,G__13119,G__13120,G__13121,G__13122,G__13123,G__13124,G__13125,G__13126,G__13127,G__13128,G__13129,G__13130,G__13131,G__13132,G__13133,G__13134,G__13135));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__13136 = a;
var G__13137 = b;
var G__13138 = c;
var G__13139 = d;
var G__13140 = e;
var G__13141 = f;
var G__13142 = g;
var G__13143 = h;
var G__13144 = i;
var G__13145 = j;
var G__13146 = k;
var G__13147 = l;
var G__13148 = m;
var G__13149 = n;
var G__13150 = o;
var G__13151 = p;
var G__13152 = q;
var G__13153 = r;
var G__13154 = s;
var G__13155 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__13136,G__13137,G__13138,G__13139,G__13140,G__13141,G__13142,G__13143,G__13144,G__13145,G__13146,G__13147,G__13148,G__13149,G__13150,G__13151,G__13152,G__13153,G__13154,G__13155) : target_fn.call(null,G__13136,G__13137,G__13138,G__13139,G__13140,G__13141,G__13142,G__13143,G__13144,G__13145,G__13146,G__13147,G__13148,G__13149,G__13150,G__13151,G__13152,G__13153,G__13154,G__13155));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var mf = this;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});

cljs.core.MultiFn.cljs$lang$type = true;

cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";

cljs.core.MultiFn.cljs$lang$ctorPrWriter = (function (this__5307__auto__,writer__5308__auto__,opt__5309__auto__){
return cljs.core._write(writer__5308__auto__,"cljs.core/MultiFn");
});

cljs.core.__GT_MultiFn = (function __GT_MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
return (new cljs.core.MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy));
});

/**
* Removes all of the methods of multimethod.
*/
cljs.core.remove_all_methods = (function remove_all_methods(multifn){
return cljs.core._reset(multifn);
});
/**
* Removes the method of multimethod associated with dispatch-value.
*/
cljs.core.remove_method = (function remove_method(multifn,dispatch_val){
return cljs.core._remove_method(multifn,dispatch_val);
});
/**
* Causes the multimethod to prefer matches of dispatch-val-x over dispatch-val-y
* when there is a conflict
*/
cljs.core.prefer_method = (function prefer_method(multifn,dispatch_val_x,dispatch_val_y){
return cljs.core._prefer_method(multifn,dispatch_val_x,dispatch_val_y);
});
/**
* Given a multimethod, returns a map of dispatch values -> dispatch fns
*/
cljs.core.methods$ = (function methods$(multifn){
return cljs.core._methods(multifn);
});
/**
* Given a multimethod and a dispatch value, returns the dispatch fn
* that would apply to that value, or nil if none apply and no default
*/
cljs.core.get_method = (function get_method(multifn,dispatch_val){
return cljs.core._get_method(multifn,dispatch_val);
});
/**
* Given a multimethod, returns a map of preferred value -> set of other values
*/
cljs.core.prefers = (function prefers(multifn){
return cljs.core._prefers(multifn);
});

/**
* @constructor
*/
cljs.core.UUID = (function (uuid){
this.uuid = uuid;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2153775104;
})
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__13157 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
return goog.string.hashCode(G__13157);
});

cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (_,writer,___$1){
var self__ = this;
var ___$2 = this;
return cljs.core._write(writer,[cljs.core.str("#uuid \""),cljs.core.str(self__.uuid),cljs.core.str("\"")].join(''));
});

cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
return ((other instanceof cljs.core.UUID)) && ((self__.uuid === other.uuid));
});

cljs.core.UUID.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.uuid;
});

cljs.core.UUID.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.UUID.cljs$lang$type = true;

cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";

cljs.core.UUID.cljs$lang$ctorPrWriter = (function (this__5307__auto__,writer__5308__auto__,opt__5309__auto__){
return cljs.core._write(writer__5308__auto__,"cljs.core/UUID");
});

cljs.core.__GT_UUID = (function __GT_UUID(uuid){
return (new cljs.core.UUID(uuid));
});


/**
* @constructor
*/
cljs.core.ExceptionInfo = (function (message,data,cause){
this.message = message;
this.data = data;
this.cause = cause;
})

cljs.core.ExceptionInfo.cljs$lang$type = true;

cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";

cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = (function (this__5307__auto__,writer__5308__auto__,opt__5309__auto__){
return cljs.core._write(writer__5308__auto__,"cljs.core/ExceptionInfo");
});

cljs.core.__GT_ExceptionInfo = (function __GT_ExceptionInfo(message,data,cause){
return (new cljs.core.ExceptionInfo(message,data,cause));
});

cljs.core.pr_writer_ex_info = (function pr_writer_ex_info(obj,writer,opts){
cljs.core._write(writer,"#ExceptionInfo{:message ");

cljs.core.pr_writer(obj.message,writer,opts);

if(cljs.core.truth_(obj.data)){
cljs.core._write(writer,", :data ");

cljs.core.pr_writer(obj.data,writer,opts);
} else {
}

if(cljs.core.truth_(obj.cause)){
cljs.core._write(writer,", :cause ");

cljs.core.pr_writer(obj.cause,writer,opts);
} else {
}

return cljs.core._write(writer,"}");
});
/**
* Alpha - subject to change.
* Create an instance of ExceptionInfo, an Error type that carries a
* map of additional data.
*/
cljs.core.ex_info = (function() {
var ex_info = null;
var ex_info__2 = (function (msg,data){
return ex_info.cljs$core$IFn$_invoke$arity$3(msg,data,null);
});
var ex_info__3 = (function (msg,data,cause){
cljs.core.ExceptionInfo.prototype = (function (){var G__13162 = msg;
return Error(G__13162);
})();

cljs.core.ExceptionInfo.prototype.name = "ExceptionInfo";

cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;

cljs.core.ExceptionInfo.prototype.toString = cljs.core.pr_str_STAR_;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (obj,writer,opts){
var obj__$1 = this;
return cljs.core.pr_writer_ex_info(obj__$1,writer,opts);
});

return (new cljs.core.ExceptionInfo(msg,data,cause));
});
ex_info = function(msg,data,cause){
switch(arguments.length){
case 2:
return ex_info__2.call(this,msg,data);
case 3:
return ex_info__3.call(this,msg,data,cause);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
return ex_info;
})()
;
/**
* Alpha - subject to change.
* Returns exception data (a map) if ex is an ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_data = (function ex_data(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.data;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns the message attached to the given Error / ExceptionInfo object.
* For non-Errors returns nil.
*/
cljs.core.ex_message = (function ex_message(ex){
if((ex instanceof Error)){
return ex.message;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns exception cause (an Error / ExceptionInfo) if ex is an
* ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_cause = (function ex_cause(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.cause;
} else {
return null;
}
});
/**
* Returns an JavaScript compatible comparator based upon pred.
*/
cljs.core.comparator = (function comparator(pred){
return (function (x,y){
if(cljs.core.truth_((function (){var G__13167 = x;
var G__13168 = y;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__13167,G__13168) : pred.call(null,G__13167,G__13168));
})())){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__13169 = y;
var G__13170 = x;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__13169,G__13170) : pred.call(null,G__13169,G__13170));
})())){
return (1);
} else {
return (0);

}
}
});
});
cljs.core.special_symbol_QMARK_ = (function special_symbol_QMARK_(x){
return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null,"&","&",-2144855648,null),null,new cljs.core.Symbol(null,"defrecord*","defrecord*",-1936366207,null),null,new cljs.core.Symbol(null,"try","try",-1273693247,null),null,new cljs.core.Symbol(null,"loop*","loop*",615029416,null),null,new cljs.core.Symbol(null,"do","do",1686842252,null),null,new cljs.core.Symbol(null,"letfn*","letfn*",-110097810,null),null,new cljs.core.Symbol(null,"if","if",1181717262,null),null,new cljs.core.Symbol(null,"new","new",-444906321,null),null,new cljs.core.Symbol(null,"ns","ns",2082130287,null),null,new cljs.core.Symbol(null,"deftype*","deftype*",962659890,null),null,new cljs.core.Symbol(null,"let*","let*",1920721458,null),null,new cljs.core.Symbol(null,"js*","js*",-1134233646,null),null,new cljs.core.Symbol(null,"fn*","fn*",-752876845,null),null,new cljs.core.Symbol(null,"recur","recur",1202958259,null),null,new cljs.core.Symbol(null,"set!","set!",250714521,null),null,new cljs.core.Symbol(null,".",".",1975675962,null),null,new cljs.core.Symbol(null,"quote","quote",1377916282,null),null,new cljs.core.Symbol(null,"throw","throw",595905694,null),null,new cljs.core.Symbol(null,"def","def",597100991,null),null], null), null),x);
});
/**
* test [v] finds fn at key :test in var metadata and calls it,
* presuming failure will throw exception
*/
cljs.core.test = (function test(v){
var f = v.cljs$lang$test;
if(cljs.core.truth_(f)){
(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));

return new cljs.core.Keyword(null,"ok","ok",967785236);
} else {
return new cljs.core.Keyword(null,"no-test","no-test",-1679482642);
}
});

//# sourceMappingURL=core.js.map